// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoPacketsV2.proto

#include "ProtoPacketsV2.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_ProtoPacketsV2_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ProtoPacketsV2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AirVehicleGroundRelativeState;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ProtoPacketsV2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ArmCommand;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ProtoPacketsV2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ArmPosition;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ProtoPacketsV2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Battery;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ProtoPacketsV2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TargetAcknowledgement;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ProtoPacketsV2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TargetDesignationCommand;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ProtoPacketsV2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TargetStatus;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ProtoPacketsV2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_VehicleAttitude;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ProtoPacketsV2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_VehicleAuthorizationReply;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ProtoPacketsV2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_VehicleAuthorizationRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ProtoPacketsV2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_VehicleBodySensedState;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ProtoPacketsV2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_VehicleGlobalPosition;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ProtoPacketsV2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_VehicleIdentification;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ProtoPacketsV2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_VehicleInertialState;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ProtoPacketsV2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_VehicleModeCommand;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ProtoPacketsV2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_VehicleSystemStatus;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ProtoPacketsV2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_VehicleTelemetryCommand;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ProtoPacketsV2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_VehicleTerminationCommand;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ProtoPacketsV2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_VehicleWaypointCommand;
}  // namespace protobuf_ProtoPacketsV2_2eproto
namespace ProtoPackets {
class AirVehicleGroundRelativeStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AirVehicleGroundRelativeState>
      _instance;
} _AirVehicleGroundRelativeState_default_instance_;
class ArmCommandDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ArmCommand>
      _instance;
} _ArmCommand_default_instance_;
class ArmPositionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ArmPosition>
      _instance;
} _ArmPosition_default_instance_;
class BatteryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Battery>
      _instance;
} _Battery_default_instance_;
class TargetAcknowledgementDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TargetAcknowledgement>
      _instance;
} _TargetAcknowledgement_default_instance_;
class TargetDesignationCommandDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TargetDesignationCommand>
      _instance;
} _TargetDesignationCommand_default_instance_;
class TargetStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TargetStatus>
      _instance;
} _TargetStatus_default_instance_;
class VehicleAttitudeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VehicleAttitude>
      _instance;
} _VehicleAttitude_default_instance_;
class VehicleAuthorizationReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VehicleAuthorizationReply>
      _instance;
} _VehicleAuthorizationReply_default_instance_;
class VehicleAuthorizationRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VehicleAuthorizationRequest>
      _instance;
} _VehicleAuthorizationRequest_default_instance_;
class VehicleBodySensedStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VehicleBodySensedState>
      _instance;
} _VehicleBodySensedState_default_instance_;
class VehicleGlobalPositionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VehicleGlobalPosition>
      _instance;
} _VehicleGlobalPosition_default_instance_;
class VehicleIdentificationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VehicleIdentification>
      _instance;
} _VehicleIdentification_default_instance_;
class VehicleInertialStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VehicleInertialState>
      _instance;
} _VehicleInertialState_default_instance_;
class VehicleModeCommandDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VehicleModeCommand>
      _instance;
} _VehicleModeCommand_default_instance_;
class VehicleSystemStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VehicleSystemStatus>
      _instance;
} _VehicleSystemStatus_default_instance_;
class VehicleTelemetryCommandDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VehicleTelemetryCommand>
      _instance;
} _VehicleTelemetryCommand_default_instance_;
class VehicleTerminationCommandDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VehicleTerminationCommand>
      _instance;
} _VehicleTerminationCommand_default_instance_;
class VehicleWaypointCommandDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VehicleWaypointCommand>
      _instance;
} _VehicleWaypointCommand_default_instance_;
class PacketDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Packet>
      _instance;
} _Packet_default_instance_;
}  // namespace ProtoPackets
namespace protobuf_ProtoPacketsV2_2eproto {
static void InitDefaultsAirVehicleGroundRelativeState() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ProtoPackets::_AirVehicleGroundRelativeState_default_instance_;
    new (ptr) ::ProtoPackets::AirVehicleGroundRelativeState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoPackets::AirVehicleGroundRelativeState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AirVehicleGroundRelativeState =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAirVehicleGroundRelativeState}, {}};

static void InitDefaultsArmCommand() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ProtoPackets::_ArmCommand_default_instance_;
    new (ptr) ::ProtoPackets::ArmCommand();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoPackets::ArmCommand::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ArmCommand =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsArmCommand}, {}};

static void InitDefaultsArmPosition() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ProtoPackets::_ArmPosition_default_instance_;
    new (ptr) ::ProtoPackets::ArmPosition();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoPackets::ArmPosition::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ArmPosition =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsArmPosition}, {}};

static void InitDefaultsBattery() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ProtoPackets::_Battery_default_instance_;
    new (ptr) ::ProtoPackets::Battery();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoPackets::Battery::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Battery =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBattery}, {}};

static void InitDefaultsTargetAcknowledgement() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ProtoPackets::_TargetAcknowledgement_default_instance_;
    new (ptr) ::ProtoPackets::TargetAcknowledgement();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoPackets::TargetAcknowledgement::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TargetAcknowledgement =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTargetAcknowledgement}, {}};

static void InitDefaultsTargetDesignationCommand() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ProtoPackets::_TargetDesignationCommand_default_instance_;
    new (ptr) ::ProtoPackets::TargetDesignationCommand();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoPackets::TargetDesignationCommand::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TargetDesignationCommand =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTargetDesignationCommand}, {}};

static void InitDefaultsTargetStatus() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ProtoPackets::_TargetStatus_default_instance_;
    new (ptr) ::ProtoPackets::TargetStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoPackets::TargetStatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TargetStatus =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTargetStatus}, {}};

static void InitDefaultsVehicleAttitude() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ProtoPackets::_VehicleAttitude_default_instance_;
    new (ptr) ::ProtoPackets::VehicleAttitude();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoPackets::VehicleAttitude::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VehicleAttitude =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVehicleAttitude}, {}};

static void InitDefaultsVehicleAuthorizationReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ProtoPackets::_VehicleAuthorizationReply_default_instance_;
    new (ptr) ::ProtoPackets::VehicleAuthorizationReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoPackets::VehicleAuthorizationReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VehicleAuthorizationReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVehicleAuthorizationReply}, {}};

static void InitDefaultsVehicleAuthorizationRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ProtoPackets::_VehicleAuthorizationRequest_default_instance_;
    new (ptr) ::ProtoPackets::VehicleAuthorizationRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoPackets::VehicleAuthorizationRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VehicleAuthorizationRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVehicleAuthorizationRequest}, {}};

static void InitDefaultsVehicleBodySensedState() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ProtoPackets::_VehicleBodySensedState_default_instance_;
    new (ptr) ::ProtoPackets::VehicleBodySensedState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoPackets::VehicleBodySensedState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VehicleBodySensedState =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVehicleBodySensedState}, {}};

static void InitDefaultsVehicleGlobalPosition() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ProtoPackets::_VehicleGlobalPosition_default_instance_;
    new (ptr) ::ProtoPackets::VehicleGlobalPosition();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoPackets::VehicleGlobalPosition::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VehicleGlobalPosition =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVehicleGlobalPosition}, {}};

static void InitDefaultsVehicleIdentification() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ProtoPackets::_VehicleIdentification_default_instance_;
    new (ptr) ::ProtoPackets::VehicleIdentification();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoPackets::VehicleIdentification::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VehicleIdentification =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVehicleIdentification}, {}};

static void InitDefaultsVehicleInertialState() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ProtoPackets::_VehicleInertialState_default_instance_;
    new (ptr) ::ProtoPackets::VehicleInertialState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoPackets::VehicleInertialState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VehicleInertialState =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVehicleInertialState}, {}};

static void InitDefaultsVehicleModeCommand() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ProtoPackets::_VehicleModeCommand_default_instance_;
    new (ptr) ::ProtoPackets::VehicleModeCommand();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoPackets::VehicleModeCommand::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VehicleModeCommand =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVehicleModeCommand}, {}};

static void InitDefaultsVehicleSystemStatus() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ProtoPackets::_VehicleSystemStatus_default_instance_;
    new (ptr) ::ProtoPackets::VehicleSystemStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoPackets::VehicleSystemStatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VehicleSystemStatus =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVehicleSystemStatus}, {}};

static void InitDefaultsVehicleTelemetryCommand() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ProtoPackets::_VehicleTelemetryCommand_default_instance_;
    new (ptr) ::ProtoPackets::VehicleTelemetryCommand();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoPackets::VehicleTelemetryCommand::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VehicleTelemetryCommand =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVehicleTelemetryCommand}, {}};

static void InitDefaultsVehicleTerminationCommand() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ProtoPackets::_VehicleTerminationCommand_default_instance_;
    new (ptr) ::ProtoPackets::VehicleTerminationCommand();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoPackets::VehicleTerminationCommand::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VehicleTerminationCommand =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVehicleTerminationCommand}, {}};

static void InitDefaultsVehicleWaypointCommand() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ProtoPackets::_VehicleWaypointCommand_default_instance_;
    new (ptr) ::ProtoPackets::VehicleWaypointCommand();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoPackets::VehicleWaypointCommand::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VehicleWaypointCommand =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVehicleWaypointCommand}, {}};

static void InitDefaultsPacket() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ProtoPackets::_Packet_default_instance_;
    new (ptr) ::ProtoPackets::Packet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoPackets::Packet::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<19> scc_info_Packet =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 19, InitDefaultsPacket}, {
      &protobuf_ProtoPacketsV2_2eproto::scc_info_AirVehicleGroundRelativeState.base,
      &protobuf_ProtoPacketsV2_2eproto::scc_info_ArmCommand.base,
      &protobuf_ProtoPacketsV2_2eproto::scc_info_ArmPosition.base,
      &protobuf_ProtoPacketsV2_2eproto::scc_info_Battery.base,
      &protobuf_ProtoPacketsV2_2eproto::scc_info_TargetAcknowledgement.base,
      &protobuf_ProtoPacketsV2_2eproto::scc_info_TargetDesignationCommand.base,
      &protobuf_ProtoPacketsV2_2eproto::scc_info_TargetStatus.base,
      &protobuf_ProtoPacketsV2_2eproto::scc_info_VehicleAttitude.base,
      &protobuf_ProtoPacketsV2_2eproto::scc_info_VehicleAuthorizationReply.base,
      &protobuf_ProtoPacketsV2_2eproto::scc_info_VehicleAuthorizationRequest.base,
      &protobuf_ProtoPacketsV2_2eproto::scc_info_VehicleBodySensedState.base,
      &protobuf_ProtoPacketsV2_2eproto::scc_info_VehicleGlobalPosition.base,
      &protobuf_ProtoPacketsV2_2eproto::scc_info_VehicleIdentification.base,
      &protobuf_ProtoPacketsV2_2eproto::scc_info_VehicleInertialState.base,
      &protobuf_ProtoPacketsV2_2eproto::scc_info_VehicleModeCommand.base,
      &protobuf_ProtoPacketsV2_2eproto::scc_info_VehicleSystemStatus.base,
      &protobuf_ProtoPacketsV2_2eproto::scc_info_VehicleTelemetryCommand.base,
      &protobuf_ProtoPacketsV2_2eproto::scc_info_VehicleTerminationCommand.base,
      &protobuf_ProtoPacketsV2_2eproto::scc_info_VehicleWaypointCommand.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_AirVehicleGroundRelativeState.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ArmCommand.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ArmPosition.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Battery.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TargetAcknowledgement.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TargetDesignationCommand.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TargetStatus.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VehicleAttitude.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VehicleAuthorizationReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VehicleAuthorizationRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VehicleBodySensedState.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VehicleGlobalPosition.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VehicleIdentification.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VehicleInertialState.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VehicleModeCommand.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VehicleSystemStatus.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VehicleTelemetryCommand.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VehicleTerminationCommand.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VehicleWaypointCommand.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Packet.base);
}

::google::protobuf::Metadata file_level_metadata[20];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::AirVehicleGroundRelativeState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::AirVehicleGroundRelativeState, vehicleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::AirVehicleGroundRelativeState, angleofattack_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::AirVehicleGroundRelativeState, angleofsideslip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::AirVehicleGroundRelativeState, trueairspeed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::AirVehicleGroundRelativeState, indicatedairspeed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::AirVehicleGroundRelativeState, northwindspeed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::AirVehicleGroundRelativeState, eastwindspeed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::AirVehicleGroundRelativeState, northgroundspeed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::AirVehicleGroundRelativeState, eastgroundspeed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::AirVehicleGroundRelativeState, barometricpressure_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::AirVehicleGroundRelativeState, barometricaltitude_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::ArmCommand, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::ArmCommand, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::ArmCommand, position_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::ArmPosition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::ArmPosition, position1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::ArmPosition, position2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::ArmPosition, position3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::ArmPosition, position4_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::Battery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::Battery, batterypercentage_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::TargetAcknowledgement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::TargetAcknowledgement, targetstatus_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::TargetDesignationCommand, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::TargetDesignationCommand, vehicleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::TargetDesignationCommand, payloadid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::TargetDesignationCommand, targetid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::TargetDesignationCommand, targettype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::TargetDesignationCommand, longitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::TargetDesignationCommand, latitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::TargetDesignationCommand, altitude_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::TargetStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::TargetStatus, targetradius_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::TargetStatus, targetangle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::TargetStatus, targetaltitude_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleAttitude, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleAttitude, vehicleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleAttitude, roll_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleAttitude, pitch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleAttitude, yaw_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleAuthorizationReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleAuthorizationReply, vehicleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleAuthorizationReply, vehicletype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleAuthorizationReply, authorizedservices_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleAuthorizationReply, grantedservices_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleAuthorizationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleAuthorizationRequest, vehicleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleAuthorizationRequest, vehicletype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleAuthorizationRequest, authorizedservices_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleAuthorizationRequest, grantedservices_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleBodySensedState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleBodySensedState, vehicleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleBodySensedState, xaccel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleBodySensedState, yaccel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleBodySensedState, zaccel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleBodySensedState, rollrate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleBodySensedState, pitchrate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleBodySensedState, yawrate_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleGlobalPosition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleGlobalPosition, vehicleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleGlobalPosition, longitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleGlobalPosition, latitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleGlobalPosition, altitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleGlobalPosition, xspeed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleGlobalPosition, yspeed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleGlobalPosition, zspeed_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleIdentification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleIdentification, vehicleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleIdentification, vehicletype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleInertialState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleInertialState, vehicleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleInertialState, longitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleInertialState, latitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleInertialState, altitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleInertialState, roll_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleInertialState, pitch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleInertialState, heading_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleInertialState, northspeed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleInertialState, eastspeed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleInertialState, verticalspeed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleInertialState, rollrate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleInertialState, pitchrate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleInertialState, yawrate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleInertialState, northaccel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleInertialState, eastaccel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleInertialState, verticalaccel_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleModeCommand, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleModeCommand, vehicleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleModeCommand, vehiclemode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleSystemStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleSystemStatus, vehicleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleSystemStatus, vehiclemode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleSystemStatus, vehiclestate_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleTelemetryCommand, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleTelemetryCommand, vehicleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleTelemetryCommand, telemetryselect_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleTelemetryCommand, telemetryrate_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleTerminationCommand, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleTerminationCommand, vehicleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleTerminationCommand, terminationmode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleWaypointCommand, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleWaypointCommand, vehicleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleWaypointCommand, longitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleWaypointCommand, latitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::VehicleWaypointCommand, altitude_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::Packet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::Packet, airvehiclegroundrelativestate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::Packet, armcommand_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::Packet, armposition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::Packet, battery_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::Packet, targetacknowledgement_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::Packet, targetdesignationcommand_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::Packet, targetstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::Packet, vehicleattitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::Packet, vehicleauthorizationreply_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::Packet, vehicleauthorizationrequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::Packet, vehiclebodysensedstate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::Packet, vehicleglobalposition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::Packet, vehicleidentification_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::Packet, vehicleinertialstate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::Packet, vehiclemodecommand_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::Packet, vehiclesystemstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::Packet, vehicletelemetrycommand_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::Packet, vehicleterminationcommand_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoPackets::Packet, vehiclewaypointcommand_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ProtoPackets::AirVehicleGroundRelativeState)},
  { 16, -1, sizeof(::ProtoPackets::ArmCommand)},
  { 23, -1, sizeof(::ProtoPackets::ArmPosition)},
  { 32, -1, sizeof(::ProtoPackets::Battery)},
  { 38, -1, sizeof(::ProtoPackets::TargetAcknowledgement)},
  { 44, -1, sizeof(::ProtoPackets::TargetDesignationCommand)},
  { 56, -1, sizeof(::ProtoPackets::TargetStatus)},
  { 64, -1, sizeof(::ProtoPackets::VehicleAttitude)},
  { 73, -1, sizeof(::ProtoPackets::VehicleAuthorizationReply)},
  { 82, -1, sizeof(::ProtoPackets::VehicleAuthorizationRequest)},
  { 91, -1, sizeof(::ProtoPackets::VehicleBodySensedState)},
  { 103, -1, sizeof(::ProtoPackets::VehicleGlobalPosition)},
  { 115, -1, sizeof(::ProtoPackets::VehicleIdentification)},
  { 122, -1, sizeof(::ProtoPackets::VehicleInertialState)},
  { 143, -1, sizeof(::ProtoPackets::VehicleModeCommand)},
  { 150, -1, sizeof(::ProtoPackets::VehicleSystemStatus)},
  { 158, -1, sizeof(::ProtoPackets::VehicleTelemetryCommand)},
  { 166, -1, sizeof(::ProtoPackets::VehicleTerminationCommand)},
  { 173, -1, sizeof(::ProtoPackets::VehicleWaypointCommand)},
  { 182, -1, sizeof(::ProtoPackets::Packet)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoPackets::_AirVehicleGroundRelativeState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoPackets::_ArmCommand_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoPackets::_ArmPosition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoPackets::_Battery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoPackets::_TargetAcknowledgement_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoPackets::_TargetDesignationCommand_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoPackets::_TargetStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoPackets::_VehicleAttitude_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoPackets::_VehicleAuthorizationReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoPackets::_VehicleAuthorizationRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoPackets::_VehicleBodySensedState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoPackets::_VehicleGlobalPosition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoPackets::_VehicleIdentification_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoPackets::_VehicleInertialState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoPackets::_VehicleModeCommand_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoPackets::_VehicleSystemStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoPackets::_VehicleTelemetryCommand_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoPackets::_VehicleTerminationCommand_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoPackets::_VehicleWaypointCommand_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoPackets::_Packet_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "ProtoPacketsV2.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 20);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024ProtoPacketsV2.proto\022\014ProtoPackets\"\255\002\n"
      "\035AirVehicleGroundRelativeState\022\021\n\tvehicl"
      "eid\030\001 \001(\r\022\025\n\rangleofattack\030\002 \001(\002\022\027\n\017angl"
      "eofsideslip\030\003 \001(\002\022\024\n\014trueairspeed\030\004 \001(\002\022"
      "\031\n\021indicatedairspeed\030\005 \001(\002\022\026\n\016northwinds"
      "peed\030\006 \001(\002\022\025\n\reastwindspeed\030\007 \001(\002\022\030\n\020nor"
      "thgroundspeed\030\010 \001(\002\022\027\n\017eastgroundspeed\030\t"
      " \001(\002\022\032\n\022barometricpressure\030\n \001(\002\022\032\n\022baro"
      "metricaltitude\030\013 \001(\002\"*\n\nArmCommand\022\n\n\002id"
      "\030\001 \001(\r\022\020\n\010position\030\002 \001(\005\"Y\n\013ArmPosition\022"
      "\021\n\tposition1\030\001 \001(\005\022\021\n\tposition2\030\002 \001(\005\022\021\n"
      "\tposition3\030\003 \001(\005\022\021\n\tposition4\030\004 \001(\005\"$\n\007B"
      "attery\022\031\n\021batteryPercentage\030\001 \001(\r\"-\n\025Tar"
      "getAcknowledgement\022\024\n\014targetstatus\030\001 \001(\r"
      "\"\235\001\n\030TargetDesignationCommand\022\021\n\tvehicle"
      "id\030\001 \001(\r\022\021\n\tpayloadid\030\002 \001(\r\022\020\n\010targetid\030"
      "\003 \001(\r\022\022\n\ntargettype\030\004 \001(\r\022\021\n\tlongitude\030\005"
      " \001(\002\022\020\n\010latitude\030\006 \001(\002\022\020\n\010altitude\030\007 \001(\002"
      "\"Q\n\014TargetStatus\022\024\n\014targetradius\030\001 \001(\001\022\023"
      "\n\013targetangle\030\002 \001(\001\022\026\n\016targetaltitude\030\003 "
      "\001(\001\"N\n\017VehicleAttitude\022\021\n\tvehicleid\030\001 \001("
      "\r\022\014\n\004roll\030\002 \001(\002\022\r\n\005pitch\030\003 \001(\002\022\013\n\003yaw\030\004 "
      "\001(\002\"x\n\031VehicleAuthorizationReply\022\021\n\tvehi"
      "cleid\030\001 \001(\r\022\023\n\013vehicletype\030\002 \001(\r\022\032\n\022auth"
      "orizedservices\030\003 \001(\r\022\027\n\017grantedservices\030"
      "\004 \001(\r\"z\n\033VehicleAuthorizationRequest\022\021\n\t"
      "vehicleid\030\001 \001(\r\022\023\n\013vehicletype\030\002 \001(\r\022\032\n\022"
      "authorizedservices\030\003 \001(\r\022\027\n\017grantedservi"
      "ces\030\004 \001(\r\"\221\001\n\026VehicleBodySensedState\022\021\n\t"
      "vehicleid\030\001 \001(\r\022\016\n\006xaccel\030\002 \001(\002\022\016\n\006yacce"
      "l\030\003 \001(\002\022\016\n\006zaccel\030\004 \001(\002\022\020\n\010rollrate\030\005 \001("
      "\002\022\021\n\tpitchrate\030\006 \001(\002\022\017\n\007yawrate\030\007 \001(\002\"\221\001"
      "\n\025VehicleGlobalPosition\022\021\n\tvehicleid\030\001 \001"
      "(\r\022\021\n\tlongitude\030\002 \001(\002\022\020\n\010latitude\030\003 \001(\002\022"
      "\020\n\010altitude\030\004 \001(\002\022\016\n\006xspeed\030\005 \001(\002\022\016\n\006ysp"
      "eed\030\006 \001(\002\022\016\n\006zspeed\030\007 \001(\002\"\?\n\025VehicleIden"
      "tification\022\021\n\tvehicleid\030\001 \001(\r\022\023\n\013vehicle"
      "type\030\002 \001(\r\"\300\002\n\024VehicleInertialState\022\021\n\tv"
      "ehicleid\030\001 \001(\r\022\021\n\tlongitude\030\002 \001(\002\022\020\n\010lat"
      "itude\030\003 \001(\002\022\020\n\010altitude\030\004 \001(\002\022\014\n\004roll\030\005 "
      "\001(\002\022\r\n\005pitch\030\006 \001(\002\022\017\n\007heading\030\007 \001(\002\022\022\n\nn"
      "orthspeed\030\010 \001(\002\022\021\n\teastspeed\030\t \001(\002\022\025\n\rve"
      "rticalspeed\030\n \001(\002\022\020\n\010rollrate\030\013 \001(\002\022\021\n\tp"
      "itchrate\030\014 \001(\002\022\017\n\007yawrate\030\r \001(\002\022\022\n\nnorth"
      "accel\030\016 \001(\002\022\021\n\teastaccel\030\017 \001(\002\022\025\n\rvertic"
      "alaccel\030\020 \001(\002\"<\n\022VehicleModeCommand\022\021\n\tv"
      "ehicleid\030\001 \001(\r\022\023\n\013vehiclemode\030\002 \001(\r\"S\n\023V"
      "ehicleSystemStatus\022\021\n\tvehicleid\030\001 \001(\r\022\023\n"
      "\013vehiclemode\030\002 \001(\r\022\024\n\014vehiclestate\030\003 \001(\r"
      "\"\\\n\027VehicleTelemetryCommand\022\021\n\tvehicleid"
      "\030\001 \001(\r\022\027\n\017telemetryselect\030\002 \001(\r\022\025\n\rtelem"
      "etryrate\030\003 \001(\r\"G\n\031VehicleTerminationComm"
      "and\022\021\n\tvehicleid\030\001 \001(\r\022\027\n\017terminationmod"
      "e\030\002 \001(\r\"b\n\026VehicleWaypointCommand\022\021\n\tveh"
      "icleid\030\001 \001(\r\022\021\n\tlongitude\030\002 \001(\002\022\020\n\010latit"
      "ude\030\003 \001(\002\022\020\n\010altitude\030\004 \001(\002\"\336\t\n\006Packet\022R"
      "\n\035AirVehicleGroundRelativeState\030\001 \001(\0132+."
      "ProtoPackets.AirVehicleGroundRelativeSta"
      "te\022,\n\nArmCommand\030\002 \001(\0132\030.ProtoPackets.Ar"
      "mCommand\022.\n\013ArmPosition\030\003 \001(\0132\031.ProtoPac"
      "kets.ArmPosition\022&\n\007Battery\030\004 \001(\0132\025.Prot"
      "oPackets.Battery\022B\n\025TargetAcknowledgemen"
      "t\030\005 \001(\0132#.ProtoPackets.TargetAcknowledge"
      "ment\022H\n\030TargetDesignationCommand\030\006 \001(\0132&"
      ".ProtoPackets.TargetDesignationCommand\0220"
      "\n\014TargetStatus\030\007 \001(\0132\032.ProtoPackets.Targ"
      "etStatus\0226\n\017VehicleAttitude\030\010 \001(\0132\035.Prot"
      "oPackets.VehicleAttitude\022J\n\031VehicleAutho"
      "rizationReply\030\t \001(\0132\'.ProtoPackets.Vehic"
      "leAuthorizationReply\022N\n\033VehicleAuthoriza"
      "tionRequest\030\n \001(\0132).ProtoPackets.Vehicle"
      "AuthorizationRequest\022D\n\026VehicleBodySense"
      "dState\030\013 \001(\0132$.ProtoPackets.VehicleBodyS"
      "ensedState\022B\n\025VehicleGlobalPosition\030\014 \001("
      "\0132#.ProtoPackets.VehicleGlobalPosition\022B"
      "\n\025VehicleIdentification\030\r \001(\0132#.ProtoPac"
      "kets.VehicleIdentification\022@\n\024VehicleIne"
      "rtialState\030\016 \001(\0132\".ProtoPackets.VehicleI"
      "nertialState\022<\n\022VehicleModeCommand\030\017 \001(\013"
      "2 .ProtoPackets.VehicleModeCommand\022>\n\023Ve"
      "hicleSystemStatus\030\020 \001(\0132!.ProtoPackets.V"
      "ehicleSystemStatus\022F\n\027VehicleTelemetryCo"
      "mmand\030\021 \001(\0132%.ProtoPackets.VehicleTeleme"
      "tryCommand\022J\n\031VehicleTerminationCommand\030"
      "\022 \001(\0132\'.ProtoPackets.VehicleTerminationC"
      "ommand\022D\n\026VehicleWaypointCommand\030\023 \001(\0132$"
      ".ProtoPackets.VehicleWaypointCommandb\006pr"
      "oto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3484);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProtoPacketsV2.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_ProtoPacketsV2_2eproto
namespace ProtoPackets {

// ===================================================================

void AirVehicleGroundRelativeState::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AirVehicleGroundRelativeState::kVehicleidFieldNumber;
const int AirVehicleGroundRelativeState::kAngleofattackFieldNumber;
const int AirVehicleGroundRelativeState::kAngleofsideslipFieldNumber;
const int AirVehicleGroundRelativeState::kTrueairspeedFieldNumber;
const int AirVehicleGroundRelativeState::kIndicatedairspeedFieldNumber;
const int AirVehicleGroundRelativeState::kNorthwindspeedFieldNumber;
const int AirVehicleGroundRelativeState::kEastwindspeedFieldNumber;
const int AirVehicleGroundRelativeState::kNorthgroundspeedFieldNumber;
const int AirVehicleGroundRelativeState::kEastgroundspeedFieldNumber;
const int AirVehicleGroundRelativeState::kBarometricpressureFieldNumber;
const int AirVehicleGroundRelativeState::kBarometricaltitudeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AirVehicleGroundRelativeState::AirVehicleGroundRelativeState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ProtoPacketsV2_2eproto::scc_info_AirVehicleGroundRelativeState.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoPackets.AirVehicleGroundRelativeState)
}
AirVehicleGroundRelativeState::AirVehicleGroundRelativeState(const AirVehicleGroundRelativeState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&vehicleid_, &from.vehicleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&barometricaltitude_) -
    reinterpret_cast<char*>(&vehicleid_)) + sizeof(barometricaltitude_));
  // @@protoc_insertion_point(copy_constructor:ProtoPackets.AirVehicleGroundRelativeState)
}

void AirVehicleGroundRelativeState::SharedCtor() {
  ::memset(&vehicleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&barometricaltitude_) -
      reinterpret_cast<char*>(&vehicleid_)) + sizeof(barometricaltitude_));
}

AirVehicleGroundRelativeState::~AirVehicleGroundRelativeState() {
  // @@protoc_insertion_point(destructor:ProtoPackets.AirVehicleGroundRelativeState)
  SharedDtor();
}

void AirVehicleGroundRelativeState::SharedDtor() {
}

void AirVehicleGroundRelativeState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AirVehicleGroundRelativeState::descriptor() {
  ::protobuf_ProtoPacketsV2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacketsV2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AirVehicleGroundRelativeState& AirVehicleGroundRelativeState::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ProtoPacketsV2_2eproto::scc_info_AirVehicleGroundRelativeState.base);
  return *internal_default_instance();
}


void AirVehicleGroundRelativeState::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoPackets.AirVehicleGroundRelativeState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&vehicleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&barometricaltitude_) -
      reinterpret_cast<char*>(&vehicleid_)) + sizeof(barometricaltitude_));
  _internal_metadata_.Clear();
}

bool AirVehicleGroundRelativeState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoPackets.AirVehicleGroundRelativeState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 vehicleid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vehicleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float angleofattack = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &angleofattack_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float angleofsideslip = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &angleofsideslip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float trueairspeed = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &trueairspeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float indicatedairspeed = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &indicatedairspeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float northwindspeed = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &northwindspeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float eastwindspeed = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &eastwindspeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float northgroundspeed = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &northgroundspeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float eastgroundspeed = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &eastgroundspeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float barometricpressure = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u /* 85 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &barometricpressure_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float barometricaltitude = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(93u /* 93 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &barometricaltitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoPackets.AirVehicleGroundRelativeState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoPackets.AirVehicleGroundRelativeState)
  return false;
#undef DO_
}

void AirVehicleGroundRelativeState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoPackets.AirVehicleGroundRelativeState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 vehicleid = 1;
  if (this->vehicleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->vehicleid(), output);
  }

  // float angleofattack = 2;
  if (this->angleofattack() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->angleofattack(), output);
  }

  // float angleofsideslip = 3;
  if (this->angleofsideslip() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->angleofsideslip(), output);
  }

  // float trueairspeed = 4;
  if (this->trueairspeed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->trueairspeed(), output);
  }

  // float indicatedairspeed = 5;
  if (this->indicatedairspeed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->indicatedairspeed(), output);
  }

  // float northwindspeed = 6;
  if (this->northwindspeed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->northwindspeed(), output);
  }

  // float eastwindspeed = 7;
  if (this->eastwindspeed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->eastwindspeed(), output);
  }

  // float northgroundspeed = 8;
  if (this->northgroundspeed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->northgroundspeed(), output);
  }

  // float eastgroundspeed = 9;
  if (this->eastgroundspeed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->eastgroundspeed(), output);
  }

  // float barometricpressure = 10;
  if (this->barometricpressure() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->barometricpressure(), output);
  }

  // float barometricaltitude = 11;
  if (this->barometricaltitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->barometricaltitude(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoPackets.AirVehicleGroundRelativeState)
}

::google::protobuf::uint8* AirVehicleGroundRelativeState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoPackets.AirVehicleGroundRelativeState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 vehicleid = 1;
  if (this->vehicleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->vehicleid(), target);
  }

  // float angleofattack = 2;
  if (this->angleofattack() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->angleofattack(), target);
  }

  // float angleofsideslip = 3;
  if (this->angleofsideslip() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->angleofsideslip(), target);
  }

  // float trueairspeed = 4;
  if (this->trueairspeed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->trueairspeed(), target);
  }

  // float indicatedairspeed = 5;
  if (this->indicatedairspeed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->indicatedairspeed(), target);
  }

  // float northwindspeed = 6;
  if (this->northwindspeed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->northwindspeed(), target);
  }

  // float eastwindspeed = 7;
  if (this->eastwindspeed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->eastwindspeed(), target);
  }

  // float northgroundspeed = 8;
  if (this->northgroundspeed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->northgroundspeed(), target);
  }

  // float eastgroundspeed = 9;
  if (this->eastgroundspeed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->eastgroundspeed(), target);
  }

  // float barometricpressure = 10;
  if (this->barometricpressure() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->barometricpressure(), target);
  }

  // float barometricaltitude = 11;
  if (this->barometricaltitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->barometricaltitude(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoPackets.AirVehicleGroundRelativeState)
  return target;
}

size_t AirVehicleGroundRelativeState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoPackets.AirVehicleGroundRelativeState)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 vehicleid = 1;
  if (this->vehicleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vehicleid());
  }

  // float angleofattack = 2;
  if (this->angleofattack() != 0) {
    total_size += 1 + 4;
  }

  // float angleofsideslip = 3;
  if (this->angleofsideslip() != 0) {
    total_size += 1 + 4;
  }

  // float trueairspeed = 4;
  if (this->trueairspeed() != 0) {
    total_size += 1 + 4;
  }

  // float indicatedairspeed = 5;
  if (this->indicatedairspeed() != 0) {
    total_size += 1 + 4;
  }

  // float northwindspeed = 6;
  if (this->northwindspeed() != 0) {
    total_size += 1 + 4;
  }

  // float eastwindspeed = 7;
  if (this->eastwindspeed() != 0) {
    total_size += 1 + 4;
  }

  // float northgroundspeed = 8;
  if (this->northgroundspeed() != 0) {
    total_size += 1 + 4;
  }

  // float eastgroundspeed = 9;
  if (this->eastgroundspeed() != 0) {
    total_size += 1 + 4;
  }

  // float barometricpressure = 10;
  if (this->barometricpressure() != 0) {
    total_size += 1 + 4;
  }

  // float barometricaltitude = 11;
  if (this->barometricaltitude() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AirVehicleGroundRelativeState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoPackets.AirVehicleGroundRelativeState)
  GOOGLE_DCHECK_NE(&from, this);
  const AirVehicleGroundRelativeState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AirVehicleGroundRelativeState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoPackets.AirVehicleGroundRelativeState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoPackets.AirVehicleGroundRelativeState)
    MergeFrom(*source);
  }
}

void AirVehicleGroundRelativeState::MergeFrom(const AirVehicleGroundRelativeState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoPackets.AirVehicleGroundRelativeState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.vehicleid() != 0) {
    set_vehicleid(from.vehicleid());
  }
  if (from.angleofattack() != 0) {
    set_angleofattack(from.angleofattack());
  }
  if (from.angleofsideslip() != 0) {
    set_angleofsideslip(from.angleofsideslip());
  }
  if (from.trueairspeed() != 0) {
    set_trueairspeed(from.trueairspeed());
  }
  if (from.indicatedairspeed() != 0) {
    set_indicatedairspeed(from.indicatedairspeed());
  }
  if (from.northwindspeed() != 0) {
    set_northwindspeed(from.northwindspeed());
  }
  if (from.eastwindspeed() != 0) {
    set_eastwindspeed(from.eastwindspeed());
  }
  if (from.northgroundspeed() != 0) {
    set_northgroundspeed(from.northgroundspeed());
  }
  if (from.eastgroundspeed() != 0) {
    set_eastgroundspeed(from.eastgroundspeed());
  }
  if (from.barometricpressure() != 0) {
    set_barometricpressure(from.barometricpressure());
  }
  if (from.barometricaltitude() != 0) {
    set_barometricaltitude(from.barometricaltitude());
  }
}

void AirVehicleGroundRelativeState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoPackets.AirVehicleGroundRelativeState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AirVehicleGroundRelativeState::CopyFrom(const AirVehicleGroundRelativeState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoPackets.AirVehicleGroundRelativeState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AirVehicleGroundRelativeState::IsInitialized() const {
  return true;
}

void AirVehicleGroundRelativeState::Swap(AirVehicleGroundRelativeState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AirVehicleGroundRelativeState::InternalSwap(AirVehicleGroundRelativeState* other) {
  using std::swap;
  swap(vehicleid_, other->vehicleid_);
  swap(angleofattack_, other->angleofattack_);
  swap(angleofsideslip_, other->angleofsideslip_);
  swap(trueairspeed_, other->trueairspeed_);
  swap(indicatedairspeed_, other->indicatedairspeed_);
  swap(northwindspeed_, other->northwindspeed_);
  swap(eastwindspeed_, other->eastwindspeed_);
  swap(northgroundspeed_, other->northgroundspeed_);
  swap(eastgroundspeed_, other->eastgroundspeed_);
  swap(barometricpressure_, other->barometricpressure_);
  swap(barometricaltitude_, other->barometricaltitude_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AirVehicleGroundRelativeState::GetMetadata() const {
  protobuf_ProtoPacketsV2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacketsV2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ArmCommand::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ArmCommand::kIdFieldNumber;
const int ArmCommand::kPositionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ArmCommand::ArmCommand()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ProtoPacketsV2_2eproto::scc_info_ArmCommand.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoPackets.ArmCommand)
}
ArmCommand::ArmCommand(const ArmCommand& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&position_) -
    reinterpret_cast<char*>(&id_)) + sizeof(position_));
  // @@protoc_insertion_point(copy_constructor:ProtoPackets.ArmCommand)
}

void ArmCommand::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&position_) -
      reinterpret_cast<char*>(&id_)) + sizeof(position_));
}

ArmCommand::~ArmCommand() {
  // @@protoc_insertion_point(destructor:ProtoPackets.ArmCommand)
  SharedDtor();
}

void ArmCommand::SharedDtor() {
}

void ArmCommand::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ArmCommand::descriptor() {
  ::protobuf_ProtoPacketsV2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacketsV2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ArmCommand& ArmCommand::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ProtoPacketsV2_2eproto::scc_info_ArmCommand.base);
  return *internal_default_instance();
}


void ArmCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoPackets.ArmCommand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&position_) -
      reinterpret_cast<char*>(&id_)) + sizeof(position_));
  _internal_metadata_.Clear();
}

bool ArmCommand::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoPackets.ArmCommand)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 position = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &position_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoPackets.ArmCommand)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoPackets.ArmCommand)
  return false;
#undef DO_
}

void ArmCommand::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoPackets.ArmCommand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // int32 position = 2;
  if (this->position() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->position(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoPackets.ArmCommand)
}

::google::protobuf::uint8* ArmCommand::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoPackets.ArmCommand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // int32 position = 2;
  if (this->position() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->position(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoPackets.ArmCommand)
  return target;
}

size_t ArmCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoPackets.ArmCommand)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // int32 position = 2;
  if (this->position() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->position());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ArmCommand::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoPackets.ArmCommand)
  GOOGLE_DCHECK_NE(&from, this);
  const ArmCommand* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ArmCommand>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoPackets.ArmCommand)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoPackets.ArmCommand)
    MergeFrom(*source);
  }
}

void ArmCommand::MergeFrom(const ArmCommand& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoPackets.ArmCommand)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.position() != 0) {
    set_position(from.position());
  }
}

void ArmCommand::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoPackets.ArmCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ArmCommand::CopyFrom(const ArmCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoPackets.ArmCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArmCommand::IsInitialized() const {
  return true;
}

void ArmCommand::Swap(ArmCommand* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ArmCommand::InternalSwap(ArmCommand* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(position_, other->position_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ArmCommand::GetMetadata() const {
  protobuf_ProtoPacketsV2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacketsV2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ArmPosition::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ArmPosition::kPosition1FieldNumber;
const int ArmPosition::kPosition2FieldNumber;
const int ArmPosition::kPosition3FieldNumber;
const int ArmPosition::kPosition4FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ArmPosition::ArmPosition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ProtoPacketsV2_2eproto::scc_info_ArmPosition.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoPackets.ArmPosition)
}
ArmPosition::ArmPosition(const ArmPosition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&position1_, &from.position1_,
    static_cast<size_t>(reinterpret_cast<char*>(&position4_) -
    reinterpret_cast<char*>(&position1_)) + sizeof(position4_));
  // @@protoc_insertion_point(copy_constructor:ProtoPackets.ArmPosition)
}

void ArmPosition::SharedCtor() {
  ::memset(&position1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&position4_) -
      reinterpret_cast<char*>(&position1_)) + sizeof(position4_));
}

ArmPosition::~ArmPosition() {
  // @@protoc_insertion_point(destructor:ProtoPackets.ArmPosition)
  SharedDtor();
}

void ArmPosition::SharedDtor() {
}

void ArmPosition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ArmPosition::descriptor() {
  ::protobuf_ProtoPacketsV2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacketsV2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ArmPosition& ArmPosition::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ProtoPacketsV2_2eproto::scc_info_ArmPosition.base);
  return *internal_default_instance();
}


void ArmPosition::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoPackets.ArmPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&position1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&position4_) -
      reinterpret_cast<char*>(&position1_)) + sizeof(position4_));
  _internal_metadata_.Clear();
}

bool ArmPosition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoPackets.ArmPosition)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 position1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &position1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 position2 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &position2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 position3 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &position3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 position4 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &position4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoPackets.ArmPosition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoPackets.ArmPosition)
  return false;
#undef DO_
}

void ArmPosition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoPackets.ArmPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 position1 = 1;
  if (this->position1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->position1(), output);
  }

  // int32 position2 = 2;
  if (this->position2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->position2(), output);
  }

  // int32 position3 = 3;
  if (this->position3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->position3(), output);
  }

  // int32 position4 = 4;
  if (this->position4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->position4(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoPackets.ArmPosition)
}

::google::protobuf::uint8* ArmPosition::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoPackets.ArmPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 position1 = 1;
  if (this->position1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->position1(), target);
  }

  // int32 position2 = 2;
  if (this->position2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->position2(), target);
  }

  // int32 position3 = 3;
  if (this->position3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->position3(), target);
  }

  // int32 position4 = 4;
  if (this->position4() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->position4(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoPackets.ArmPosition)
  return target;
}

size_t ArmPosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoPackets.ArmPosition)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 position1 = 1;
  if (this->position1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->position1());
  }

  // int32 position2 = 2;
  if (this->position2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->position2());
  }

  // int32 position3 = 3;
  if (this->position3() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->position3());
  }

  // int32 position4 = 4;
  if (this->position4() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->position4());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ArmPosition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoPackets.ArmPosition)
  GOOGLE_DCHECK_NE(&from, this);
  const ArmPosition* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ArmPosition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoPackets.ArmPosition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoPackets.ArmPosition)
    MergeFrom(*source);
  }
}

void ArmPosition::MergeFrom(const ArmPosition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoPackets.ArmPosition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.position1() != 0) {
    set_position1(from.position1());
  }
  if (from.position2() != 0) {
    set_position2(from.position2());
  }
  if (from.position3() != 0) {
    set_position3(from.position3());
  }
  if (from.position4() != 0) {
    set_position4(from.position4());
  }
}

void ArmPosition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoPackets.ArmPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ArmPosition::CopyFrom(const ArmPosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoPackets.ArmPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArmPosition::IsInitialized() const {
  return true;
}

void ArmPosition::Swap(ArmPosition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ArmPosition::InternalSwap(ArmPosition* other) {
  using std::swap;
  swap(position1_, other->position1_);
  swap(position2_, other->position2_);
  swap(position3_, other->position3_);
  swap(position4_, other->position4_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ArmPosition::GetMetadata() const {
  protobuf_ProtoPacketsV2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacketsV2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Battery::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Battery::kBatteryPercentageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Battery::Battery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ProtoPacketsV2_2eproto::scc_info_Battery.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoPackets.Battery)
}
Battery::Battery(const Battery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  batterypercentage_ = from.batterypercentage_;
  // @@protoc_insertion_point(copy_constructor:ProtoPackets.Battery)
}

void Battery::SharedCtor() {
  batterypercentage_ = 0u;
}

Battery::~Battery() {
  // @@protoc_insertion_point(destructor:ProtoPackets.Battery)
  SharedDtor();
}

void Battery::SharedDtor() {
}

void Battery::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Battery::descriptor() {
  ::protobuf_ProtoPacketsV2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacketsV2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Battery& Battery::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ProtoPacketsV2_2eproto::scc_info_Battery.base);
  return *internal_default_instance();
}


void Battery::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoPackets.Battery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  batterypercentage_ = 0u;
  _internal_metadata_.Clear();
}

bool Battery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoPackets.Battery)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 batteryPercentage = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &batterypercentage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoPackets.Battery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoPackets.Battery)
  return false;
#undef DO_
}

void Battery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoPackets.Battery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 batteryPercentage = 1;
  if (this->batterypercentage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->batterypercentage(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoPackets.Battery)
}

::google::protobuf::uint8* Battery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoPackets.Battery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 batteryPercentage = 1;
  if (this->batterypercentage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->batterypercentage(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoPackets.Battery)
  return target;
}

size_t Battery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoPackets.Battery)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 batteryPercentage = 1;
  if (this->batterypercentage() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->batterypercentage());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Battery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoPackets.Battery)
  GOOGLE_DCHECK_NE(&from, this);
  const Battery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Battery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoPackets.Battery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoPackets.Battery)
    MergeFrom(*source);
  }
}

void Battery::MergeFrom(const Battery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoPackets.Battery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.batterypercentage() != 0) {
    set_batterypercentage(from.batterypercentage());
  }
}

void Battery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoPackets.Battery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Battery::CopyFrom(const Battery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoPackets.Battery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Battery::IsInitialized() const {
  return true;
}

void Battery::Swap(Battery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Battery::InternalSwap(Battery* other) {
  using std::swap;
  swap(batterypercentage_, other->batterypercentage_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Battery::GetMetadata() const {
  protobuf_ProtoPacketsV2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacketsV2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TargetAcknowledgement::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TargetAcknowledgement::kTargetstatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TargetAcknowledgement::TargetAcknowledgement()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ProtoPacketsV2_2eproto::scc_info_TargetAcknowledgement.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoPackets.TargetAcknowledgement)
}
TargetAcknowledgement::TargetAcknowledgement(const TargetAcknowledgement& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  targetstatus_ = from.targetstatus_;
  // @@protoc_insertion_point(copy_constructor:ProtoPackets.TargetAcknowledgement)
}

void TargetAcknowledgement::SharedCtor() {
  targetstatus_ = 0u;
}

TargetAcknowledgement::~TargetAcknowledgement() {
  // @@protoc_insertion_point(destructor:ProtoPackets.TargetAcknowledgement)
  SharedDtor();
}

void TargetAcknowledgement::SharedDtor() {
}

void TargetAcknowledgement::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TargetAcknowledgement::descriptor() {
  ::protobuf_ProtoPacketsV2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacketsV2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TargetAcknowledgement& TargetAcknowledgement::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ProtoPacketsV2_2eproto::scc_info_TargetAcknowledgement.base);
  return *internal_default_instance();
}


void TargetAcknowledgement::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoPackets.TargetAcknowledgement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  targetstatus_ = 0u;
  _internal_metadata_.Clear();
}

bool TargetAcknowledgement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoPackets.TargetAcknowledgement)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 targetstatus = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &targetstatus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoPackets.TargetAcknowledgement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoPackets.TargetAcknowledgement)
  return false;
#undef DO_
}

void TargetAcknowledgement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoPackets.TargetAcknowledgement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 targetstatus = 1;
  if (this->targetstatus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->targetstatus(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoPackets.TargetAcknowledgement)
}

::google::protobuf::uint8* TargetAcknowledgement::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoPackets.TargetAcknowledgement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 targetstatus = 1;
  if (this->targetstatus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->targetstatus(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoPackets.TargetAcknowledgement)
  return target;
}

size_t TargetAcknowledgement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoPackets.TargetAcknowledgement)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 targetstatus = 1;
  if (this->targetstatus() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->targetstatus());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TargetAcknowledgement::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoPackets.TargetAcknowledgement)
  GOOGLE_DCHECK_NE(&from, this);
  const TargetAcknowledgement* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TargetAcknowledgement>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoPackets.TargetAcknowledgement)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoPackets.TargetAcknowledgement)
    MergeFrom(*source);
  }
}

void TargetAcknowledgement::MergeFrom(const TargetAcknowledgement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoPackets.TargetAcknowledgement)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.targetstatus() != 0) {
    set_targetstatus(from.targetstatus());
  }
}

void TargetAcknowledgement::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoPackets.TargetAcknowledgement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TargetAcknowledgement::CopyFrom(const TargetAcknowledgement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoPackets.TargetAcknowledgement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TargetAcknowledgement::IsInitialized() const {
  return true;
}

void TargetAcknowledgement::Swap(TargetAcknowledgement* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TargetAcknowledgement::InternalSwap(TargetAcknowledgement* other) {
  using std::swap;
  swap(targetstatus_, other->targetstatus_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TargetAcknowledgement::GetMetadata() const {
  protobuf_ProtoPacketsV2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacketsV2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TargetDesignationCommand::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TargetDesignationCommand::kVehicleidFieldNumber;
const int TargetDesignationCommand::kPayloadidFieldNumber;
const int TargetDesignationCommand::kTargetidFieldNumber;
const int TargetDesignationCommand::kTargettypeFieldNumber;
const int TargetDesignationCommand::kLongitudeFieldNumber;
const int TargetDesignationCommand::kLatitudeFieldNumber;
const int TargetDesignationCommand::kAltitudeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TargetDesignationCommand::TargetDesignationCommand()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ProtoPacketsV2_2eproto::scc_info_TargetDesignationCommand.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoPackets.TargetDesignationCommand)
}
TargetDesignationCommand::TargetDesignationCommand(const TargetDesignationCommand& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&vehicleid_, &from.vehicleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&altitude_) -
    reinterpret_cast<char*>(&vehicleid_)) + sizeof(altitude_));
  // @@protoc_insertion_point(copy_constructor:ProtoPackets.TargetDesignationCommand)
}

void TargetDesignationCommand::SharedCtor() {
  ::memset(&vehicleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&altitude_) -
      reinterpret_cast<char*>(&vehicleid_)) + sizeof(altitude_));
}

TargetDesignationCommand::~TargetDesignationCommand() {
  // @@protoc_insertion_point(destructor:ProtoPackets.TargetDesignationCommand)
  SharedDtor();
}

void TargetDesignationCommand::SharedDtor() {
}

void TargetDesignationCommand::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TargetDesignationCommand::descriptor() {
  ::protobuf_ProtoPacketsV2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacketsV2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TargetDesignationCommand& TargetDesignationCommand::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ProtoPacketsV2_2eproto::scc_info_TargetDesignationCommand.base);
  return *internal_default_instance();
}


void TargetDesignationCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoPackets.TargetDesignationCommand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&vehicleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&altitude_) -
      reinterpret_cast<char*>(&vehicleid_)) + sizeof(altitude_));
  _internal_metadata_.Clear();
}

bool TargetDesignationCommand::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoPackets.TargetDesignationCommand)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 vehicleid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vehicleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 payloadid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &payloadid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 targetid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &targetid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 targettype = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &targettype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float longitude = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &longitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float latitude = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &latitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float altitude = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &altitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoPackets.TargetDesignationCommand)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoPackets.TargetDesignationCommand)
  return false;
#undef DO_
}

void TargetDesignationCommand::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoPackets.TargetDesignationCommand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 vehicleid = 1;
  if (this->vehicleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->vehicleid(), output);
  }

  // uint32 payloadid = 2;
  if (this->payloadid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->payloadid(), output);
  }

  // uint32 targetid = 3;
  if (this->targetid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->targetid(), output);
  }

  // uint32 targettype = 4;
  if (this->targettype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->targettype(), output);
  }

  // float longitude = 5;
  if (this->longitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->longitude(), output);
  }

  // float latitude = 6;
  if (this->latitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->latitude(), output);
  }

  // float altitude = 7;
  if (this->altitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->altitude(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoPackets.TargetDesignationCommand)
}

::google::protobuf::uint8* TargetDesignationCommand::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoPackets.TargetDesignationCommand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 vehicleid = 1;
  if (this->vehicleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->vehicleid(), target);
  }

  // uint32 payloadid = 2;
  if (this->payloadid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->payloadid(), target);
  }

  // uint32 targetid = 3;
  if (this->targetid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->targetid(), target);
  }

  // uint32 targettype = 4;
  if (this->targettype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->targettype(), target);
  }

  // float longitude = 5;
  if (this->longitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->longitude(), target);
  }

  // float latitude = 6;
  if (this->latitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->latitude(), target);
  }

  // float altitude = 7;
  if (this->altitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->altitude(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoPackets.TargetDesignationCommand)
  return target;
}

size_t TargetDesignationCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoPackets.TargetDesignationCommand)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 vehicleid = 1;
  if (this->vehicleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vehicleid());
  }

  // uint32 payloadid = 2;
  if (this->payloadid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->payloadid());
  }

  // uint32 targetid = 3;
  if (this->targetid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->targetid());
  }

  // uint32 targettype = 4;
  if (this->targettype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->targettype());
  }

  // float longitude = 5;
  if (this->longitude() != 0) {
    total_size += 1 + 4;
  }

  // float latitude = 6;
  if (this->latitude() != 0) {
    total_size += 1 + 4;
  }

  // float altitude = 7;
  if (this->altitude() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TargetDesignationCommand::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoPackets.TargetDesignationCommand)
  GOOGLE_DCHECK_NE(&from, this);
  const TargetDesignationCommand* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TargetDesignationCommand>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoPackets.TargetDesignationCommand)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoPackets.TargetDesignationCommand)
    MergeFrom(*source);
  }
}

void TargetDesignationCommand::MergeFrom(const TargetDesignationCommand& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoPackets.TargetDesignationCommand)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.vehicleid() != 0) {
    set_vehicleid(from.vehicleid());
  }
  if (from.payloadid() != 0) {
    set_payloadid(from.payloadid());
  }
  if (from.targetid() != 0) {
    set_targetid(from.targetid());
  }
  if (from.targettype() != 0) {
    set_targettype(from.targettype());
  }
  if (from.longitude() != 0) {
    set_longitude(from.longitude());
  }
  if (from.latitude() != 0) {
    set_latitude(from.latitude());
  }
  if (from.altitude() != 0) {
    set_altitude(from.altitude());
  }
}

void TargetDesignationCommand::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoPackets.TargetDesignationCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TargetDesignationCommand::CopyFrom(const TargetDesignationCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoPackets.TargetDesignationCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TargetDesignationCommand::IsInitialized() const {
  return true;
}

void TargetDesignationCommand::Swap(TargetDesignationCommand* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TargetDesignationCommand::InternalSwap(TargetDesignationCommand* other) {
  using std::swap;
  swap(vehicleid_, other->vehicleid_);
  swap(payloadid_, other->payloadid_);
  swap(targetid_, other->targetid_);
  swap(targettype_, other->targettype_);
  swap(longitude_, other->longitude_);
  swap(latitude_, other->latitude_);
  swap(altitude_, other->altitude_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TargetDesignationCommand::GetMetadata() const {
  protobuf_ProtoPacketsV2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacketsV2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TargetStatus::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TargetStatus::kTargetradiusFieldNumber;
const int TargetStatus::kTargetangleFieldNumber;
const int TargetStatus::kTargetaltitudeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TargetStatus::TargetStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ProtoPacketsV2_2eproto::scc_info_TargetStatus.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoPackets.TargetStatus)
}
TargetStatus::TargetStatus(const TargetStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&targetradius_, &from.targetradius_,
    static_cast<size_t>(reinterpret_cast<char*>(&targetaltitude_) -
    reinterpret_cast<char*>(&targetradius_)) + sizeof(targetaltitude_));
  // @@protoc_insertion_point(copy_constructor:ProtoPackets.TargetStatus)
}

void TargetStatus::SharedCtor() {
  ::memset(&targetradius_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&targetaltitude_) -
      reinterpret_cast<char*>(&targetradius_)) + sizeof(targetaltitude_));
}

TargetStatus::~TargetStatus() {
  // @@protoc_insertion_point(destructor:ProtoPackets.TargetStatus)
  SharedDtor();
}

void TargetStatus::SharedDtor() {
}

void TargetStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TargetStatus::descriptor() {
  ::protobuf_ProtoPacketsV2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacketsV2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TargetStatus& TargetStatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ProtoPacketsV2_2eproto::scc_info_TargetStatus.base);
  return *internal_default_instance();
}


void TargetStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoPackets.TargetStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&targetradius_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&targetaltitude_) -
      reinterpret_cast<char*>(&targetradius_)) + sizeof(targetaltitude_));
  _internal_metadata_.Clear();
}

bool TargetStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoPackets.TargetStatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double targetradius = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &targetradius_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double targetangle = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &targetangle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double targetaltitude = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &targetaltitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoPackets.TargetStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoPackets.TargetStatus)
  return false;
#undef DO_
}

void TargetStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoPackets.TargetStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double targetradius = 1;
  if (this->targetradius() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->targetradius(), output);
  }

  // double targetangle = 2;
  if (this->targetangle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->targetangle(), output);
  }

  // double targetaltitude = 3;
  if (this->targetaltitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->targetaltitude(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoPackets.TargetStatus)
}

::google::protobuf::uint8* TargetStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoPackets.TargetStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double targetradius = 1;
  if (this->targetradius() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->targetradius(), target);
  }

  // double targetangle = 2;
  if (this->targetangle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->targetangle(), target);
  }

  // double targetaltitude = 3;
  if (this->targetaltitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->targetaltitude(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoPackets.TargetStatus)
  return target;
}

size_t TargetStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoPackets.TargetStatus)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double targetradius = 1;
  if (this->targetradius() != 0) {
    total_size += 1 + 8;
  }

  // double targetangle = 2;
  if (this->targetangle() != 0) {
    total_size += 1 + 8;
  }

  // double targetaltitude = 3;
  if (this->targetaltitude() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TargetStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoPackets.TargetStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const TargetStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TargetStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoPackets.TargetStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoPackets.TargetStatus)
    MergeFrom(*source);
  }
}

void TargetStatus::MergeFrom(const TargetStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoPackets.TargetStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.targetradius() != 0) {
    set_targetradius(from.targetradius());
  }
  if (from.targetangle() != 0) {
    set_targetangle(from.targetangle());
  }
  if (from.targetaltitude() != 0) {
    set_targetaltitude(from.targetaltitude());
  }
}

void TargetStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoPackets.TargetStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TargetStatus::CopyFrom(const TargetStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoPackets.TargetStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TargetStatus::IsInitialized() const {
  return true;
}

void TargetStatus::Swap(TargetStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TargetStatus::InternalSwap(TargetStatus* other) {
  using std::swap;
  swap(targetradius_, other->targetradius_);
  swap(targetangle_, other->targetangle_);
  swap(targetaltitude_, other->targetaltitude_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TargetStatus::GetMetadata() const {
  protobuf_ProtoPacketsV2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacketsV2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VehicleAttitude::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VehicleAttitude::kVehicleidFieldNumber;
const int VehicleAttitude::kRollFieldNumber;
const int VehicleAttitude::kPitchFieldNumber;
const int VehicleAttitude::kYawFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VehicleAttitude::VehicleAttitude()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ProtoPacketsV2_2eproto::scc_info_VehicleAttitude.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoPackets.VehicleAttitude)
}
VehicleAttitude::VehicleAttitude(const VehicleAttitude& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&vehicleid_, &from.vehicleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&yaw_) -
    reinterpret_cast<char*>(&vehicleid_)) + sizeof(yaw_));
  // @@protoc_insertion_point(copy_constructor:ProtoPackets.VehicleAttitude)
}

void VehicleAttitude::SharedCtor() {
  ::memset(&vehicleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&yaw_) -
      reinterpret_cast<char*>(&vehicleid_)) + sizeof(yaw_));
}

VehicleAttitude::~VehicleAttitude() {
  // @@protoc_insertion_point(destructor:ProtoPackets.VehicleAttitude)
  SharedDtor();
}

void VehicleAttitude::SharedDtor() {
}

void VehicleAttitude::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VehicleAttitude::descriptor() {
  ::protobuf_ProtoPacketsV2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacketsV2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VehicleAttitude& VehicleAttitude::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ProtoPacketsV2_2eproto::scc_info_VehicleAttitude.base);
  return *internal_default_instance();
}


void VehicleAttitude::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoPackets.VehicleAttitude)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&vehicleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&yaw_) -
      reinterpret_cast<char*>(&vehicleid_)) + sizeof(yaw_));
  _internal_metadata_.Clear();
}

bool VehicleAttitude::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoPackets.VehicleAttitude)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 vehicleid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vehicleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float roll = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &roll_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float pitch = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pitch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float yaw = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &yaw_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoPackets.VehicleAttitude)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoPackets.VehicleAttitude)
  return false;
#undef DO_
}

void VehicleAttitude::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoPackets.VehicleAttitude)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 vehicleid = 1;
  if (this->vehicleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->vehicleid(), output);
  }

  // float roll = 2;
  if (this->roll() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->roll(), output);
  }

  // float pitch = 3;
  if (this->pitch() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->pitch(), output);
  }

  // float yaw = 4;
  if (this->yaw() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->yaw(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoPackets.VehicleAttitude)
}

::google::protobuf::uint8* VehicleAttitude::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoPackets.VehicleAttitude)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 vehicleid = 1;
  if (this->vehicleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->vehicleid(), target);
  }

  // float roll = 2;
  if (this->roll() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->roll(), target);
  }

  // float pitch = 3;
  if (this->pitch() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->pitch(), target);
  }

  // float yaw = 4;
  if (this->yaw() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->yaw(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoPackets.VehicleAttitude)
  return target;
}

size_t VehicleAttitude::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoPackets.VehicleAttitude)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 vehicleid = 1;
  if (this->vehicleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vehicleid());
  }

  // float roll = 2;
  if (this->roll() != 0) {
    total_size += 1 + 4;
  }

  // float pitch = 3;
  if (this->pitch() != 0) {
    total_size += 1 + 4;
  }

  // float yaw = 4;
  if (this->yaw() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VehicleAttitude::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoPackets.VehicleAttitude)
  GOOGLE_DCHECK_NE(&from, this);
  const VehicleAttitude* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VehicleAttitude>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoPackets.VehicleAttitude)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoPackets.VehicleAttitude)
    MergeFrom(*source);
  }
}

void VehicleAttitude::MergeFrom(const VehicleAttitude& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoPackets.VehicleAttitude)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.vehicleid() != 0) {
    set_vehicleid(from.vehicleid());
  }
  if (from.roll() != 0) {
    set_roll(from.roll());
  }
  if (from.pitch() != 0) {
    set_pitch(from.pitch());
  }
  if (from.yaw() != 0) {
    set_yaw(from.yaw());
  }
}

void VehicleAttitude::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoPackets.VehicleAttitude)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VehicleAttitude::CopyFrom(const VehicleAttitude& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoPackets.VehicleAttitude)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VehicleAttitude::IsInitialized() const {
  return true;
}

void VehicleAttitude::Swap(VehicleAttitude* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VehicleAttitude::InternalSwap(VehicleAttitude* other) {
  using std::swap;
  swap(vehicleid_, other->vehicleid_);
  swap(roll_, other->roll_);
  swap(pitch_, other->pitch_);
  swap(yaw_, other->yaw_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VehicleAttitude::GetMetadata() const {
  protobuf_ProtoPacketsV2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacketsV2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VehicleAuthorizationReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VehicleAuthorizationReply::kVehicleidFieldNumber;
const int VehicleAuthorizationReply::kVehicletypeFieldNumber;
const int VehicleAuthorizationReply::kAuthorizedservicesFieldNumber;
const int VehicleAuthorizationReply::kGrantedservicesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VehicleAuthorizationReply::VehicleAuthorizationReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ProtoPacketsV2_2eproto::scc_info_VehicleAuthorizationReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoPackets.VehicleAuthorizationReply)
}
VehicleAuthorizationReply::VehicleAuthorizationReply(const VehicleAuthorizationReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&vehicleid_, &from.vehicleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&grantedservices_) -
    reinterpret_cast<char*>(&vehicleid_)) + sizeof(grantedservices_));
  // @@protoc_insertion_point(copy_constructor:ProtoPackets.VehicleAuthorizationReply)
}

void VehicleAuthorizationReply::SharedCtor() {
  ::memset(&vehicleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&grantedservices_) -
      reinterpret_cast<char*>(&vehicleid_)) + sizeof(grantedservices_));
}

VehicleAuthorizationReply::~VehicleAuthorizationReply() {
  // @@protoc_insertion_point(destructor:ProtoPackets.VehicleAuthorizationReply)
  SharedDtor();
}

void VehicleAuthorizationReply::SharedDtor() {
}

void VehicleAuthorizationReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VehicleAuthorizationReply::descriptor() {
  ::protobuf_ProtoPacketsV2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacketsV2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VehicleAuthorizationReply& VehicleAuthorizationReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ProtoPacketsV2_2eproto::scc_info_VehicleAuthorizationReply.base);
  return *internal_default_instance();
}


void VehicleAuthorizationReply::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoPackets.VehicleAuthorizationReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&vehicleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&grantedservices_) -
      reinterpret_cast<char*>(&vehicleid_)) + sizeof(grantedservices_));
  _internal_metadata_.Clear();
}

bool VehicleAuthorizationReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoPackets.VehicleAuthorizationReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 vehicleid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vehicleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 vehicletype = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vehicletype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 authorizedservices = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &authorizedservices_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 grantedservices = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &grantedservices_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoPackets.VehicleAuthorizationReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoPackets.VehicleAuthorizationReply)
  return false;
#undef DO_
}

void VehicleAuthorizationReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoPackets.VehicleAuthorizationReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 vehicleid = 1;
  if (this->vehicleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->vehicleid(), output);
  }

  // uint32 vehicletype = 2;
  if (this->vehicletype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->vehicletype(), output);
  }

  // uint32 authorizedservices = 3;
  if (this->authorizedservices() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->authorizedservices(), output);
  }

  // uint32 grantedservices = 4;
  if (this->grantedservices() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->grantedservices(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoPackets.VehicleAuthorizationReply)
}

::google::protobuf::uint8* VehicleAuthorizationReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoPackets.VehicleAuthorizationReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 vehicleid = 1;
  if (this->vehicleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->vehicleid(), target);
  }

  // uint32 vehicletype = 2;
  if (this->vehicletype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->vehicletype(), target);
  }

  // uint32 authorizedservices = 3;
  if (this->authorizedservices() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->authorizedservices(), target);
  }

  // uint32 grantedservices = 4;
  if (this->grantedservices() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->grantedservices(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoPackets.VehicleAuthorizationReply)
  return target;
}

size_t VehicleAuthorizationReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoPackets.VehicleAuthorizationReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 vehicleid = 1;
  if (this->vehicleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vehicleid());
  }

  // uint32 vehicletype = 2;
  if (this->vehicletype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vehicletype());
  }

  // uint32 authorizedservices = 3;
  if (this->authorizedservices() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->authorizedservices());
  }

  // uint32 grantedservices = 4;
  if (this->grantedservices() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->grantedservices());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VehicleAuthorizationReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoPackets.VehicleAuthorizationReply)
  GOOGLE_DCHECK_NE(&from, this);
  const VehicleAuthorizationReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VehicleAuthorizationReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoPackets.VehicleAuthorizationReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoPackets.VehicleAuthorizationReply)
    MergeFrom(*source);
  }
}

void VehicleAuthorizationReply::MergeFrom(const VehicleAuthorizationReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoPackets.VehicleAuthorizationReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.vehicleid() != 0) {
    set_vehicleid(from.vehicleid());
  }
  if (from.vehicletype() != 0) {
    set_vehicletype(from.vehicletype());
  }
  if (from.authorizedservices() != 0) {
    set_authorizedservices(from.authorizedservices());
  }
  if (from.grantedservices() != 0) {
    set_grantedservices(from.grantedservices());
  }
}

void VehicleAuthorizationReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoPackets.VehicleAuthorizationReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VehicleAuthorizationReply::CopyFrom(const VehicleAuthorizationReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoPackets.VehicleAuthorizationReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VehicleAuthorizationReply::IsInitialized() const {
  return true;
}

void VehicleAuthorizationReply::Swap(VehicleAuthorizationReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VehicleAuthorizationReply::InternalSwap(VehicleAuthorizationReply* other) {
  using std::swap;
  swap(vehicleid_, other->vehicleid_);
  swap(vehicletype_, other->vehicletype_);
  swap(authorizedservices_, other->authorizedservices_);
  swap(grantedservices_, other->grantedservices_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VehicleAuthorizationReply::GetMetadata() const {
  protobuf_ProtoPacketsV2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacketsV2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VehicleAuthorizationRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VehicleAuthorizationRequest::kVehicleidFieldNumber;
const int VehicleAuthorizationRequest::kVehicletypeFieldNumber;
const int VehicleAuthorizationRequest::kAuthorizedservicesFieldNumber;
const int VehicleAuthorizationRequest::kGrantedservicesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VehicleAuthorizationRequest::VehicleAuthorizationRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ProtoPacketsV2_2eproto::scc_info_VehicleAuthorizationRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoPackets.VehicleAuthorizationRequest)
}
VehicleAuthorizationRequest::VehicleAuthorizationRequest(const VehicleAuthorizationRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&vehicleid_, &from.vehicleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&grantedservices_) -
    reinterpret_cast<char*>(&vehicleid_)) + sizeof(grantedservices_));
  // @@protoc_insertion_point(copy_constructor:ProtoPackets.VehicleAuthorizationRequest)
}

void VehicleAuthorizationRequest::SharedCtor() {
  ::memset(&vehicleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&grantedservices_) -
      reinterpret_cast<char*>(&vehicleid_)) + sizeof(grantedservices_));
}

VehicleAuthorizationRequest::~VehicleAuthorizationRequest() {
  // @@protoc_insertion_point(destructor:ProtoPackets.VehicleAuthorizationRequest)
  SharedDtor();
}

void VehicleAuthorizationRequest::SharedDtor() {
}

void VehicleAuthorizationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VehicleAuthorizationRequest::descriptor() {
  ::protobuf_ProtoPacketsV2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacketsV2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VehicleAuthorizationRequest& VehicleAuthorizationRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ProtoPacketsV2_2eproto::scc_info_VehicleAuthorizationRequest.base);
  return *internal_default_instance();
}


void VehicleAuthorizationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoPackets.VehicleAuthorizationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&vehicleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&grantedservices_) -
      reinterpret_cast<char*>(&vehicleid_)) + sizeof(grantedservices_));
  _internal_metadata_.Clear();
}

bool VehicleAuthorizationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoPackets.VehicleAuthorizationRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 vehicleid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vehicleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 vehicletype = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vehicletype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 authorizedservices = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &authorizedservices_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 grantedservices = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &grantedservices_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoPackets.VehicleAuthorizationRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoPackets.VehicleAuthorizationRequest)
  return false;
#undef DO_
}

void VehicleAuthorizationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoPackets.VehicleAuthorizationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 vehicleid = 1;
  if (this->vehicleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->vehicleid(), output);
  }

  // uint32 vehicletype = 2;
  if (this->vehicletype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->vehicletype(), output);
  }

  // uint32 authorizedservices = 3;
  if (this->authorizedservices() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->authorizedservices(), output);
  }

  // uint32 grantedservices = 4;
  if (this->grantedservices() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->grantedservices(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoPackets.VehicleAuthorizationRequest)
}

::google::protobuf::uint8* VehicleAuthorizationRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoPackets.VehicleAuthorizationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 vehicleid = 1;
  if (this->vehicleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->vehicleid(), target);
  }

  // uint32 vehicletype = 2;
  if (this->vehicletype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->vehicletype(), target);
  }

  // uint32 authorizedservices = 3;
  if (this->authorizedservices() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->authorizedservices(), target);
  }

  // uint32 grantedservices = 4;
  if (this->grantedservices() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->grantedservices(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoPackets.VehicleAuthorizationRequest)
  return target;
}

size_t VehicleAuthorizationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoPackets.VehicleAuthorizationRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 vehicleid = 1;
  if (this->vehicleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vehicleid());
  }

  // uint32 vehicletype = 2;
  if (this->vehicletype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vehicletype());
  }

  // uint32 authorizedservices = 3;
  if (this->authorizedservices() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->authorizedservices());
  }

  // uint32 grantedservices = 4;
  if (this->grantedservices() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->grantedservices());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VehicleAuthorizationRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoPackets.VehicleAuthorizationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const VehicleAuthorizationRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VehicleAuthorizationRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoPackets.VehicleAuthorizationRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoPackets.VehicleAuthorizationRequest)
    MergeFrom(*source);
  }
}

void VehicleAuthorizationRequest::MergeFrom(const VehicleAuthorizationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoPackets.VehicleAuthorizationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.vehicleid() != 0) {
    set_vehicleid(from.vehicleid());
  }
  if (from.vehicletype() != 0) {
    set_vehicletype(from.vehicletype());
  }
  if (from.authorizedservices() != 0) {
    set_authorizedservices(from.authorizedservices());
  }
  if (from.grantedservices() != 0) {
    set_grantedservices(from.grantedservices());
  }
}

void VehicleAuthorizationRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoPackets.VehicleAuthorizationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VehicleAuthorizationRequest::CopyFrom(const VehicleAuthorizationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoPackets.VehicleAuthorizationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VehicleAuthorizationRequest::IsInitialized() const {
  return true;
}

void VehicleAuthorizationRequest::Swap(VehicleAuthorizationRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VehicleAuthorizationRequest::InternalSwap(VehicleAuthorizationRequest* other) {
  using std::swap;
  swap(vehicleid_, other->vehicleid_);
  swap(vehicletype_, other->vehicletype_);
  swap(authorizedservices_, other->authorizedservices_);
  swap(grantedservices_, other->grantedservices_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VehicleAuthorizationRequest::GetMetadata() const {
  protobuf_ProtoPacketsV2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacketsV2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VehicleBodySensedState::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VehicleBodySensedState::kVehicleidFieldNumber;
const int VehicleBodySensedState::kXaccelFieldNumber;
const int VehicleBodySensedState::kYaccelFieldNumber;
const int VehicleBodySensedState::kZaccelFieldNumber;
const int VehicleBodySensedState::kRollrateFieldNumber;
const int VehicleBodySensedState::kPitchrateFieldNumber;
const int VehicleBodySensedState::kYawrateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VehicleBodySensedState::VehicleBodySensedState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ProtoPacketsV2_2eproto::scc_info_VehicleBodySensedState.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoPackets.VehicleBodySensedState)
}
VehicleBodySensedState::VehicleBodySensedState(const VehicleBodySensedState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&vehicleid_, &from.vehicleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&yawrate_) -
    reinterpret_cast<char*>(&vehicleid_)) + sizeof(yawrate_));
  // @@protoc_insertion_point(copy_constructor:ProtoPackets.VehicleBodySensedState)
}

void VehicleBodySensedState::SharedCtor() {
  ::memset(&vehicleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&yawrate_) -
      reinterpret_cast<char*>(&vehicleid_)) + sizeof(yawrate_));
}

VehicleBodySensedState::~VehicleBodySensedState() {
  // @@protoc_insertion_point(destructor:ProtoPackets.VehicleBodySensedState)
  SharedDtor();
}

void VehicleBodySensedState::SharedDtor() {
}

void VehicleBodySensedState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VehicleBodySensedState::descriptor() {
  ::protobuf_ProtoPacketsV2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacketsV2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VehicleBodySensedState& VehicleBodySensedState::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ProtoPacketsV2_2eproto::scc_info_VehicleBodySensedState.base);
  return *internal_default_instance();
}


void VehicleBodySensedState::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoPackets.VehicleBodySensedState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&vehicleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&yawrate_) -
      reinterpret_cast<char*>(&vehicleid_)) + sizeof(yawrate_));
  _internal_metadata_.Clear();
}

bool VehicleBodySensedState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoPackets.VehicleBodySensedState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 vehicleid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vehicleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float xaccel = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &xaccel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float yaccel = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &yaccel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float zaccel = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &zaccel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float rollrate = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rollrate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float pitchrate = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pitchrate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float yawrate = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &yawrate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoPackets.VehicleBodySensedState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoPackets.VehicleBodySensedState)
  return false;
#undef DO_
}

void VehicleBodySensedState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoPackets.VehicleBodySensedState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 vehicleid = 1;
  if (this->vehicleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->vehicleid(), output);
  }

  // float xaccel = 2;
  if (this->xaccel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->xaccel(), output);
  }

  // float yaccel = 3;
  if (this->yaccel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->yaccel(), output);
  }

  // float zaccel = 4;
  if (this->zaccel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->zaccel(), output);
  }

  // float rollrate = 5;
  if (this->rollrate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->rollrate(), output);
  }

  // float pitchrate = 6;
  if (this->pitchrate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->pitchrate(), output);
  }

  // float yawrate = 7;
  if (this->yawrate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->yawrate(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoPackets.VehicleBodySensedState)
}

::google::protobuf::uint8* VehicleBodySensedState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoPackets.VehicleBodySensedState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 vehicleid = 1;
  if (this->vehicleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->vehicleid(), target);
  }

  // float xaccel = 2;
  if (this->xaccel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->xaccel(), target);
  }

  // float yaccel = 3;
  if (this->yaccel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->yaccel(), target);
  }

  // float zaccel = 4;
  if (this->zaccel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->zaccel(), target);
  }

  // float rollrate = 5;
  if (this->rollrate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->rollrate(), target);
  }

  // float pitchrate = 6;
  if (this->pitchrate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->pitchrate(), target);
  }

  // float yawrate = 7;
  if (this->yawrate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->yawrate(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoPackets.VehicleBodySensedState)
  return target;
}

size_t VehicleBodySensedState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoPackets.VehicleBodySensedState)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 vehicleid = 1;
  if (this->vehicleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vehicleid());
  }

  // float xaccel = 2;
  if (this->xaccel() != 0) {
    total_size += 1 + 4;
  }

  // float yaccel = 3;
  if (this->yaccel() != 0) {
    total_size += 1 + 4;
  }

  // float zaccel = 4;
  if (this->zaccel() != 0) {
    total_size += 1 + 4;
  }

  // float rollrate = 5;
  if (this->rollrate() != 0) {
    total_size += 1 + 4;
  }

  // float pitchrate = 6;
  if (this->pitchrate() != 0) {
    total_size += 1 + 4;
  }

  // float yawrate = 7;
  if (this->yawrate() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VehicleBodySensedState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoPackets.VehicleBodySensedState)
  GOOGLE_DCHECK_NE(&from, this);
  const VehicleBodySensedState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VehicleBodySensedState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoPackets.VehicleBodySensedState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoPackets.VehicleBodySensedState)
    MergeFrom(*source);
  }
}

void VehicleBodySensedState::MergeFrom(const VehicleBodySensedState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoPackets.VehicleBodySensedState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.vehicleid() != 0) {
    set_vehicleid(from.vehicleid());
  }
  if (from.xaccel() != 0) {
    set_xaccel(from.xaccel());
  }
  if (from.yaccel() != 0) {
    set_yaccel(from.yaccel());
  }
  if (from.zaccel() != 0) {
    set_zaccel(from.zaccel());
  }
  if (from.rollrate() != 0) {
    set_rollrate(from.rollrate());
  }
  if (from.pitchrate() != 0) {
    set_pitchrate(from.pitchrate());
  }
  if (from.yawrate() != 0) {
    set_yawrate(from.yawrate());
  }
}

void VehicleBodySensedState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoPackets.VehicleBodySensedState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VehicleBodySensedState::CopyFrom(const VehicleBodySensedState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoPackets.VehicleBodySensedState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VehicleBodySensedState::IsInitialized() const {
  return true;
}

void VehicleBodySensedState::Swap(VehicleBodySensedState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VehicleBodySensedState::InternalSwap(VehicleBodySensedState* other) {
  using std::swap;
  swap(vehicleid_, other->vehicleid_);
  swap(xaccel_, other->xaccel_);
  swap(yaccel_, other->yaccel_);
  swap(zaccel_, other->zaccel_);
  swap(rollrate_, other->rollrate_);
  swap(pitchrate_, other->pitchrate_);
  swap(yawrate_, other->yawrate_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VehicleBodySensedState::GetMetadata() const {
  protobuf_ProtoPacketsV2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacketsV2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VehicleGlobalPosition::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VehicleGlobalPosition::kVehicleidFieldNumber;
const int VehicleGlobalPosition::kLongitudeFieldNumber;
const int VehicleGlobalPosition::kLatitudeFieldNumber;
const int VehicleGlobalPosition::kAltitudeFieldNumber;
const int VehicleGlobalPosition::kXspeedFieldNumber;
const int VehicleGlobalPosition::kYspeedFieldNumber;
const int VehicleGlobalPosition::kZspeedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VehicleGlobalPosition::VehicleGlobalPosition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ProtoPacketsV2_2eproto::scc_info_VehicleGlobalPosition.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoPackets.VehicleGlobalPosition)
}
VehicleGlobalPosition::VehicleGlobalPosition(const VehicleGlobalPosition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&vehicleid_, &from.vehicleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&zspeed_) -
    reinterpret_cast<char*>(&vehicleid_)) + sizeof(zspeed_));
  // @@protoc_insertion_point(copy_constructor:ProtoPackets.VehicleGlobalPosition)
}

void VehicleGlobalPosition::SharedCtor() {
  ::memset(&vehicleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zspeed_) -
      reinterpret_cast<char*>(&vehicleid_)) + sizeof(zspeed_));
}

VehicleGlobalPosition::~VehicleGlobalPosition() {
  // @@protoc_insertion_point(destructor:ProtoPackets.VehicleGlobalPosition)
  SharedDtor();
}

void VehicleGlobalPosition::SharedDtor() {
}

void VehicleGlobalPosition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VehicleGlobalPosition::descriptor() {
  ::protobuf_ProtoPacketsV2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacketsV2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VehicleGlobalPosition& VehicleGlobalPosition::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ProtoPacketsV2_2eproto::scc_info_VehicleGlobalPosition.base);
  return *internal_default_instance();
}


void VehicleGlobalPosition::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoPackets.VehicleGlobalPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&vehicleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zspeed_) -
      reinterpret_cast<char*>(&vehicleid_)) + sizeof(zspeed_));
  _internal_metadata_.Clear();
}

bool VehicleGlobalPosition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoPackets.VehicleGlobalPosition)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 vehicleid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vehicleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float longitude = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &longitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float latitude = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &latitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float altitude = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &altitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float xspeed = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &xspeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float yspeed = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &yspeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float zspeed = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &zspeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoPackets.VehicleGlobalPosition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoPackets.VehicleGlobalPosition)
  return false;
#undef DO_
}

void VehicleGlobalPosition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoPackets.VehicleGlobalPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 vehicleid = 1;
  if (this->vehicleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->vehicleid(), output);
  }

  // float longitude = 2;
  if (this->longitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->longitude(), output);
  }

  // float latitude = 3;
  if (this->latitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->latitude(), output);
  }

  // float altitude = 4;
  if (this->altitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->altitude(), output);
  }

  // float xspeed = 5;
  if (this->xspeed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->xspeed(), output);
  }

  // float yspeed = 6;
  if (this->yspeed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->yspeed(), output);
  }

  // float zspeed = 7;
  if (this->zspeed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->zspeed(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoPackets.VehicleGlobalPosition)
}

::google::protobuf::uint8* VehicleGlobalPosition::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoPackets.VehicleGlobalPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 vehicleid = 1;
  if (this->vehicleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->vehicleid(), target);
  }

  // float longitude = 2;
  if (this->longitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->longitude(), target);
  }

  // float latitude = 3;
  if (this->latitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->latitude(), target);
  }

  // float altitude = 4;
  if (this->altitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->altitude(), target);
  }

  // float xspeed = 5;
  if (this->xspeed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->xspeed(), target);
  }

  // float yspeed = 6;
  if (this->yspeed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->yspeed(), target);
  }

  // float zspeed = 7;
  if (this->zspeed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->zspeed(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoPackets.VehicleGlobalPosition)
  return target;
}

size_t VehicleGlobalPosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoPackets.VehicleGlobalPosition)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 vehicleid = 1;
  if (this->vehicleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vehicleid());
  }

  // float longitude = 2;
  if (this->longitude() != 0) {
    total_size += 1 + 4;
  }

  // float latitude = 3;
  if (this->latitude() != 0) {
    total_size += 1 + 4;
  }

  // float altitude = 4;
  if (this->altitude() != 0) {
    total_size += 1 + 4;
  }

  // float xspeed = 5;
  if (this->xspeed() != 0) {
    total_size += 1 + 4;
  }

  // float yspeed = 6;
  if (this->yspeed() != 0) {
    total_size += 1 + 4;
  }

  // float zspeed = 7;
  if (this->zspeed() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VehicleGlobalPosition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoPackets.VehicleGlobalPosition)
  GOOGLE_DCHECK_NE(&from, this);
  const VehicleGlobalPosition* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VehicleGlobalPosition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoPackets.VehicleGlobalPosition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoPackets.VehicleGlobalPosition)
    MergeFrom(*source);
  }
}

void VehicleGlobalPosition::MergeFrom(const VehicleGlobalPosition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoPackets.VehicleGlobalPosition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.vehicleid() != 0) {
    set_vehicleid(from.vehicleid());
  }
  if (from.longitude() != 0) {
    set_longitude(from.longitude());
  }
  if (from.latitude() != 0) {
    set_latitude(from.latitude());
  }
  if (from.altitude() != 0) {
    set_altitude(from.altitude());
  }
  if (from.xspeed() != 0) {
    set_xspeed(from.xspeed());
  }
  if (from.yspeed() != 0) {
    set_yspeed(from.yspeed());
  }
  if (from.zspeed() != 0) {
    set_zspeed(from.zspeed());
  }
}

void VehicleGlobalPosition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoPackets.VehicleGlobalPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VehicleGlobalPosition::CopyFrom(const VehicleGlobalPosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoPackets.VehicleGlobalPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VehicleGlobalPosition::IsInitialized() const {
  return true;
}

void VehicleGlobalPosition::Swap(VehicleGlobalPosition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VehicleGlobalPosition::InternalSwap(VehicleGlobalPosition* other) {
  using std::swap;
  swap(vehicleid_, other->vehicleid_);
  swap(longitude_, other->longitude_);
  swap(latitude_, other->latitude_);
  swap(altitude_, other->altitude_);
  swap(xspeed_, other->xspeed_);
  swap(yspeed_, other->yspeed_);
  swap(zspeed_, other->zspeed_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VehicleGlobalPosition::GetMetadata() const {
  protobuf_ProtoPacketsV2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacketsV2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VehicleIdentification::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VehicleIdentification::kVehicleidFieldNumber;
const int VehicleIdentification::kVehicletypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VehicleIdentification::VehicleIdentification()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ProtoPacketsV2_2eproto::scc_info_VehicleIdentification.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoPackets.VehicleIdentification)
}
VehicleIdentification::VehicleIdentification(const VehicleIdentification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&vehicleid_, &from.vehicleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&vehicletype_) -
    reinterpret_cast<char*>(&vehicleid_)) + sizeof(vehicletype_));
  // @@protoc_insertion_point(copy_constructor:ProtoPackets.VehicleIdentification)
}

void VehicleIdentification::SharedCtor() {
  ::memset(&vehicleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vehicletype_) -
      reinterpret_cast<char*>(&vehicleid_)) + sizeof(vehicletype_));
}

VehicleIdentification::~VehicleIdentification() {
  // @@protoc_insertion_point(destructor:ProtoPackets.VehicleIdentification)
  SharedDtor();
}

void VehicleIdentification::SharedDtor() {
}

void VehicleIdentification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VehicleIdentification::descriptor() {
  ::protobuf_ProtoPacketsV2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacketsV2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VehicleIdentification& VehicleIdentification::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ProtoPacketsV2_2eproto::scc_info_VehicleIdentification.base);
  return *internal_default_instance();
}


void VehicleIdentification::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoPackets.VehicleIdentification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&vehicleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vehicletype_) -
      reinterpret_cast<char*>(&vehicleid_)) + sizeof(vehicletype_));
  _internal_metadata_.Clear();
}

bool VehicleIdentification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoPackets.VehicleIdentification)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 vehicleid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vehicleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 vehicletype = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vehicletype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoPackets.VehicleIdentification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoPackets.VehicleIdentification)
  return false;
#undef DO_
}

void VehicleIdentification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoPackets.VehicleIdentification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 vehicleid = 1;
  if (this->vehicleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->vehicleid(), output);
  }

  // uint32 vehicletype = 2;
  if (this->vehicletype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->vehicletype(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoPackets.VehicleIdentification)
}

::google::protobuf::uint8* VehicleIdentification::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoPackets.VehicleIdentification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 vehicleid = 1;
  if (this->vehicleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->vehicleid(), target);
  }

  // uint32 vehicletype = 2;
  if (this->vehicletype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->vehicletype(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoPackets.VehicleIdentification)
  return target;
}

size_t VehicleIdentification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoPackets.VehicleIdentification)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 vehicleid = 1;
  if (this->vehicleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vehicleid());
  }

  // uint32 vehicletype = 2;
  if (this->vehicletype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vehicletype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VehicleIdentification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoPackets.VehicleIdentification)
  GOOGLE_DCHECK_NE(&from, this);
  const VehicleIdentification* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VehicleIdentification>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoPackets.VehicleIdentification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoPackets.VehicleIdentification)
    MergeFrom(*source);
  }
}

void VehicleIdentification::MergeFrom(const VehicleIdentification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoPackets.VehicleIdentification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.vehicleid() != 0) {
    set_vehicleid(from.vehicleid());
  }
  if (from.vehicletype() != 0) {
    set_vehicletype(from.vehicletype());
  }
}

void VehicleIdentification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoPackets.VehicleIdentification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VehicleIdentification::CopyFrom(const VehicleIdentification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoPackets.VehicleIdentification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VehicleIdentification::IsInitialized() const {
  return true;
}

void VehicleIdentification::Swap(VehicleIdentification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VehicleIdentification::InternalSwap(VehicleIdentification* other) {
  using std::swap;
  swap(vehicleid_, other->vehicleid_);
  swap(vehicletype_, other->vehicletype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VehicleIdentification::GetMetadata() const {
  protobuf_ProtoPacketsV2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacketsV2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VehicleInertialState::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VehicleInertialState::kVehicleidFieldNumber;
const int VehicleInertialState::kLongitudeFieldNumber;
const int VehicleInertialState::kLatitudeFieldNumber;
const int VehicleInertialState::kAltitudeFieldNumber;
const int VehicleInertialState::kRollFieldNumber;
const int VehicleInertialState::kPitchFieldNumber;
const int VehicleInertialState::kHeadingFieldNumber;
const int VehicleInertialState::kNorthspeedFieldNumber;
const int VehicleInertialState::kEastspeedFieldNumber;
const int VehicleInertialState::kVerticalspeedFieldNumber;
const int VehicleInertialState::kRollrateFieldNumber;
const int VehicleInertialState::kPitchrateFieldNumber;
const int VehicleInertialState::kYawrateFieldNumber;
const int VehicleInertialState::kNorthaccelFieldNumber;
const int VehicleInertialState::kEastaccelFieldNumber;
const int VehicleInertialState::kVerticalaccelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VehicleInertialState::VehicleInertialState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ProtoPacketsV2_2eproto::scc_info_VehicleInertialState.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoPackets.VehicleInertialState)
}
VehicleInertialState::VehicleInertialState(const VehicleInertialState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&vehicleid_, &from.vehicleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&verticalaccel_) -
    reinterpret_cast<char*>(&vehicleid_)) + sizeof(verticalaccel_));
  // @@protoc_insertion_point(copy_constructor:ProtoPackets.VehicleInertialState)
}

void VehicleInertialState::SharedCtor() {
  ::memset(&vehicleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&verticalaccel_) -
      reinterpret_cast<char*>(&vehicleid_)) + sizeof(verticalaccel_));
}

VehicleInertialState::~VehicleInertialState() {
  // @@protoc_insertion_point(destructor:ProtoPackets.VehicleInertialState)
  SharedDtor();
}

void VehicleInertialState::SharedDtor() {
}

void VehicleInertialState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VehicleInertialState::descriptor() {
  ::protobuf_ProtoPacketsV2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacketsV2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VehicleInertialState& VehicleInertialState::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ProtoPacketsV2_2eproto::scc_info_VehicleInertialState.base);
  return *internal_default_instance();
}


void VehicleInertialState::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoPackets.VehicleInertialState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&vehicleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&verticalaccel_) -
      reinterpret_cast<char*>(&vehicleid_)) + sizeof(verticalaccel_));
  _internal_metadata_.Clear();
}

bool VehicleInertialState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoPackets.VehicleInertialState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 vehicleid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vehicleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float longitude = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &longitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float latitude = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &latitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float altitude = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &altitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float roll = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &roll_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float pitch = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pitch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float heading = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &heading_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float northspeed = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &northspeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float eastspeed = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &eastspeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float verticalspeed = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u /* 85 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &verticalspeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float rollrate = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(93u /* 93 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rollrate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float pitchrate = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(101u /* 101 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pitchrate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float yawrate = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(109u /* 109 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &yawrate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float northaccel = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(117u /* 117 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &northaccel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float eastaccel = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(125u /* 125 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &eastaccel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float verticalaccel = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(133u /* 133 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &verticalaccel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoPackets.VehicleInertialState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoPackets.VehicleInertialState)
  return false;
#undef DO_
}

void VehicleInertialState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoPackets.VehicleInertialState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 vehicleid = 1;
  if (this->vehicleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->vehicleid(), output);
  }

  // float longitude = 2;
  if (this->longitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->longitude(), output);
  }

  // float latitude = 3;
  if (this->latitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->latitude(), output);
  }

  // float altitude = 4;
  if (this->altitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->altitude(), output);
  }

  // float roll = 5;
  if (this->roll() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->roll(), output);
  }

  // float pitch = 6;
  if (this->pitch() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->pitch(), output);
  }

  // float heading = 7;
  if (this->heading() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->heading(), output);
  }

  // float northspeed = 8;
  if (this->northspeed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->northspeed(), output);
  }

  // float eastspeed = 9;
  if (this->eastspeed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->eastspeed(), output);
  }

  // float verticalspeed = 10;
  if (this->verticalspeed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->verticalspeed(), output);
  }

  // float rollrate = 11;
  if (this->rollrate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->rollrate(), output);
  }

  // float pitchrate = 12;
  if (this->pitchrate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->pitchrate(), output);
  }

  // float yawrate = 13;
  if (this->yawrate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(13, this->yawrate(), output);
  }

  // float northaccel = 14;
  if (this->northaccel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(14, this->northaccel(), output);
  }

  // float eastaccel = 15;
  if (this->eastaccel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(15, this->eastaccel(), output);
  }

  // float verticalaccel = 16;
  if (this->verticalaccel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(16, this->verticalaccel(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoPackets.VehicleInertialState)
}

::google::protobuf::uint8* VehicleInertialState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoPackets.VehicleInertialState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 vehicleid = 1;
  if (this->vehicleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->vehicleid(), target);
  }

  // float longitude = 2;
  if (this->longitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->longitude(), target);
  }

  // float latitude = 3;
  if (this->latitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->latitude(), target);
  }

  // float altitude = 4;
  if (this->altitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->altitude(), target);
  }

  // float roll = 5;
  if (this->roll() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->roll(), target);
  }

  // float pitch = 6;
  if (this->pitch() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->pitch(), target);
  }

  // float heading = 7;
  if (this->heading() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->heading(), target);
  }

  // float northspeed = 8;
  if (this->northspeed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->northspeed(), target);
  }

  // float eastspeed = 9;
  if (this->eastspeed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->eastspeed(), target);
  }

  // float verticalspeed = 10;
  if (this->verticalspeed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->verticalspeed(), target);
  }

  // float rollrate = 11;
  if (this->rollrate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->rollrate(), target);
  }

  // float pitchrate = 12;
  if (this->pitchrate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->pitchrate(), target);
  }

  // float yawrate = 13;
  if (this->yawrate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(13, this->yawrate(), target);
  }

  // float northaccel = 14;
  if (this->northaccel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(14, this->northaccel(), target);
  }

  // float eastaccel = 15;
  if (this->eastaccel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(15, this->eastaccel(), target);
  }

  // float verticalaccel = 16;
  if (this->verticalaccel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(16, this->verticalaccel(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoPackets.VehicleInertialState)
  return target;
}

size_t VehicleInertialState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoPackets.VehicleInertialState)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 vehicleid = 1;
  if (this->vehicleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vehicleid());
  }

  // float longitude = 2;
  if (this->longitude() != 0) {
    total_size += 1 + 4;
  }

  // float latitude = 3;
  if (this->latitude() != 0) {
    total_size += 1 + 4;
  }

  // float altitude = 4;
  if (this->altitude() != 0) {
    total_size += 1 + 4;
  }

  // float roll = 5;
  if (this->roll() != 0) {
    total_size += 1 + 4;
  }

  // float pitch = 6;
  if (this->pitch() != 0) {
    total_size += 1 + 4;
  }

  // float heading = 7;
  if (this->heading() != 0) {
    total_size += 1 + 4;
  }

  // float northspeed = 8;
  if (this->northspeed() != 0) {
    total_size += 1 + 4;
  }

  // float eastspeed = 9;
  if (this->eastspeed() != 0) {
    total_size += 1 + 4;
  }

  // float verticalspeed = 10;
  if (this->verticalspeed() != 0) {
    total_size += 1 + 4;
  }

  // float rollrate = 11;
  if (this->rollrate() != 0) {
    total_size += 1 + 4;
  }

  // float pitchrate = 12;
  if (this->pitchrate() != 0) {
    total_size += 1 + 4;
  }

  // float yawrate = 13;
  if (this->yawrate() != 0) {
    total_size += 1 + 4;
  }

  // float northaccel = 14;
  if (this->northaccel() != 0) {
    total_size += 1 + 4;
  }

  // float eastaccel = 15;
  if (this->eastaccel() != 0) {
    total_size += 1 + 4;
  }

  // float verticalaccel = 16;
  if (this->verticalaccel() != 0) {
    total_size += 2 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VehicleInertialState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoPackets.VehicleInertialState)
  GOOGLE_DCHECK_NE(&from, this);
  const VehicleInertialState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VehicleInertialState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoPackets.VehicleInertialState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoPackets.VehicleInertialState)
    MergeFrom(*source);
  }
}

void VehicleInertialState::MergeFrom(const VehicleInertialState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoPackets.VehicleInertialState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.vehicleid() != 0) {
    set_vehicleid(from.vehicleid());
  }
  if (from.longitude() != 0) {
    set_longitude(from.longitude());
  }
  if (from.latitude() != 0) {
    set_latitude(from.latitude());
  }
  if (from.altitude() != 0) {
    set_altitude(from.altitude());
  }
  if (from.roll() != 0) {
    set_roll(from.roll());
  }
  if (from.pitch() != 0) {
    set_pitch(from.pitch());
  }
  if (from.heading() != 0) {
    set_heading(from.heading());
  }
  if (from.northspeed() != 0) {
    set_northspeed(from.northspeed());
  }
  if (from.eastspeed() != 0) {
    set_eastspeed(from.eastspeed());
  }
  if (from.verticalspeed() != 0) {
    set_verticalspeed(from.verticalspeed());
  }
  if (from.rollrate() != 0) {
    set_rollrate(from.rollrate());
  }
  if (from.pitchrate() != 0) {
    set_pitchrate(from.pitchrate());
  }
  if (from.yawrate() != 0) {
    set_yawrate(from.yawrate());
  }
  if (from.northaccel() != 0) {
    set_northaccel(from.northaccel());
  }
  if (from.eastaccel() != 0) {
    set_eastaccel(from.eastaccel());
  }
  if (from.verticalaccel() != 0) {
    set_verticalaccel(from.verticalaccel());
  }
}

void VehicleInertialState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoPackets.VehicleInertialState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VehicleInertialState::CopyFrom(const VehicleInertialState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoPackets.VehicleInertialState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VehicleInertialState::IsInitialized() const {
  return true;
}

void VehicleInertialState::Swap(VehicleInertialState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VehicleInertialState::InternalSwap(VehicleInertialState* other) {
  using std::swap;
  swap(vehicleid_, other->vehicleid_);
  swap(longitude_, other->longitude_);
  swap(latitude_, other->latitude_);
  swap(altitude_, other->altitude_);
  swap(roll_, other->roll_);
  swap(pitch_, other->pitch_);
  swap(heading_, other->heading_);
  swap(northspeed_, other->northspeed_);
  swap(eastspeed_, other->eastspeed_);
  swap(verticalspeed_, other->verticalspeed_);
  swap(rollrate_, other->rollrate_);
  swap(pitchrate_, other->pitchrate_);
  swap(yawrate_, other->yawrate_);
  swap(northaccel_, other->northaccel_);
  swap(eastaccel_, other->eastaccel_);
  swap(verticalaccel_, other->verticalaccel_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VehicleInertialState::GetMetadata() const {
  protobuf_ProtoPacketsV2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacketsV2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VehicleModeCommand::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VehicleModeCommand::kVehicleidFieldNumber;
const int VehicleModeCommand::kVehiclemodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VehicleModeCommand::VehicleModeCommand()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ProtoPacketsV2_2eproto::scc_info_VehicleModeCommand.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoPackets.VehicleModeCommand)
}
VehicleModeCommand::VehicleModeCommand(const VehicleModeCommand& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&vehicleid_, &from.vehicleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&vehiclemode_) -
    reinterpret_cast<char*>(&vehicleid_)) + sizeof(vehiclemode_));
  // @@protoc_insertion_point(copy_constructor:ProtoPackets.VehicleModeCommand)
}

void VehicleModeCommand::SharedCtor() {
  ::memset(&vehicleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vehiclemode_) -
      reinterpret_cast<char*>(&vehicleid_)) + sizeof(vehiclemode_));
}

VehicleModeCommand::~VehicleModeCommand() {
  // @@protoc_insertion_point(destructor:ProtoPackets.VehicleModeCommand)
  SharedDtor();
}

void VehicleModeCommand::SharedDtor() {
}

void VehicleModeCommand::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VehicleModeCommand::descriptor() {
  ::protobuf_ProtoPacketsV2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacketsV2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VehicleModeCommand& VehicleModeCommand::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ProtoPacketsV2_2eproto::scc_info_VehicleModeCommand.base);
  return *internal_default_instance();
}


void VehicleModeCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoPackets.VehicleModeCommand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&vehicleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vehiclemode_) -
      reinterpret_cast<char*>(&vehicleid_)) + sizeof(vehiclemode_));
  _internal_metadata_.Clear();
}

bool VehicleModeCommand::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoPackets.VehicleModeCommand)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 vehicleid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vehicleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 vehiclemode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vehiclemode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoPackets.VehicleModeCommand)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoPackets.VehicleModeCommand)
  return false;
#undef DO_
}

void VehicleModeCommand::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoPackets.VehicleModeCommand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 vehicleid = 1;
  if (this->vehicleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->vehicleid(), output);
  }

  // uint32 vehiclemode = 2;
  if (this->vehiclemode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->vehiclemode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoPackets.VehicleModeCommand)
}

::google::protobuf::uint8* VehicleModeCommand::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoPackets.VehicleModeCommand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 vehicleid = 1;
  if (this->vehicleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->vehicleid(), target);
  }

  // uint32 vehiclemode = 2;
  if (this->vehiclemode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->vehiclemode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoPackets.VehicleModeCommand)
  return target;
}

size_t VehicleModeCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoPackets.VehicleModeCommand)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 vehicleid = 1;
  if (this->vehicleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vehicleid());
  }

  // uint32 vehiclemode = 2;
  if (this->vehiclemode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vehiclemode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VehicleModeCommand::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoPackets.VehicleModeCommand)
  GOOGLE_DCHECK_NE(&from, this);
  const VehicleModeCommand* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VehicleModeCommand>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoPackets.VehicleModeCommand)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoPackets.VehicleModeCommand)
    MergeFrom(*source);
  }
}

void VehicleModeCommand::MergeFrom(const VehicleModeCommand& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoPackets.VehicleModeCommand)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.vehicleid() != 0) {
    set_vehicleid(from.vehicleid());
  }
  if (from.vehiclemode() != 0) {
    set_vehiclemode(from.vehiclemode());
  }
}

void VehicleModeCommand::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoPackets.VehicleModeCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VehicleModeCommand::CopyFrom(const VehicleModeCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoPackets.VehicleModeCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VehicleModeCommand::IsInitialized() const {
  return true;
}

void VehicleModeCommand::Swap(VehicleModeCommand* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VehicleModeCommand::InternalSwap(VehicleModeCommand* other) {
  using std::swap;
  swap(vehicleid_, other->vehicleid_);
  swap(vehiclemode_, other->vehiclemode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VehicleModeCommand::GetMetadata() const {
  protobuf_ProtoPacketsV2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacketsV2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VehicleSystemStatus::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VehicleSystemStatus::kVehicleidFieldNumber;
const int VehicleSystemStatus::kVehiclemodeFieldNumber;
const int VehicleSystemStatus::kVehiclestateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VehicleSystemStatus::VehicleSystemStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ProtoPacketsV2_2eproto::scc_info_VehicleSystemStatus.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoPackets.VehicleSystemStatus)
}
VehicleSystemStatus::VehicleSystemStatus(const VehicleSystemStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&vehicleid_, &from.vehicleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&vehiclestate_) -
    reinterpret_cast<char*>(&vehicleid_)) + sizeof(vehiclestate_));
  // @@protoc_insertion_point(copy_constructor:ProtoPackets.VehicleSystemStatus)
}

void VehicleSystemStatus::SharedCtor() {
  ::memset(&vehicleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vehiclestate_) -
      reinterpret_cast<char*>(&vehicleid_)) + sizeof(vehiclestate_));
}

VehicleSystemStatus::~VehicleSystemStatus() {
  // @@protoc_insertion_point(destructor:ProtoPackets.VehicleSystemStatus)
  SharedDtor();
}

void VehicleSystemStatus::SharedDtor() {
}

void VehicleSystemStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VehicleSystemStatus::descriptor() {
  ::protobuf_ProtoPacketsV2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacketsV2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VehicleSystemStatus& VehicleSystemStatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ProtoPacketsV2_2eproto::scc_info_VehicleSystemStatus.base);
  return *internal_default_instance();
}


void VehicleSystemStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoPackets.VehicleSystemStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&vehicleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vehiclestate_) -
      reinterpret_cast<char*>(&vehicleid_)) + sizeof(vehiclestate_));
  _internal_metadata_.Clear();
}

bool VehicleSystemStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoPackets.VehicleSystemStatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 vehicleid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vehicleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 vehiclemode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vehiclemode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 vehiclestate = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vehiclestate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoPackets.VehicleSystemStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoPackets.VehicleSystemStatus)
  return false;
#undef DO_
}

void VehicleSystemStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoPackets.VehicleSystemStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 vehicleid = 1;
  if (this->vehicleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->vehicleid(), output);
  }

  // uint32 vehiclemode = 2;
  if (this->vehiclemode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->vehiclemode(), output);
  }

  // uint32 vehiclestate = 3;
  if (this->vehiclestate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->vehiclestate(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoPackets.VehicleSystemStatus)
}

::google::protobuf::uint8* VehicleSystemStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoPackets.VehicleSystemStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 vehicleid = 1;
  if (this->vehicleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->vehicleid(), target);
  }

  // uint32 vehiclemode = 2;
  if (this->vehiclemode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->vehiclemode(), target);
  }

  // uint32 vehiclestate = 3;
  if (this->vehiclestate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->vehiclestate(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoPackets.VehicleSystemStatus)
  return target;
}

size_t VehicleSystemStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoPackets.VehicleSystemStatus)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 vehicleid = 1;
  if (this->vehicleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vehicleid());
  }

  // uint32 vehiclemode = 2;
  if (this->vehiclemode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vehiclemode());
  }

  // uint32 vehiclestate = 3;
  if (this->vehiclestate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vehiclestate());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VehicleSystemStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoPackets.VehicleSystemStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const VehicleSystemStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VehicleSystemStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoPackets.VehicleSystemStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoPackets.VehicleSystemStatus)
    MergeFrom(*source);
  }
}

void VehicleSystemStatus::MergeFrom(const VehicleSystemStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoPackets.VehicleSystemStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.vehicleid() != 0) {
    set_vehicleid(from.vehicleid());
  }
  if (from.vehiclemode() != 0) {
    set_vehiclemode(from.vehiclemode());
  }
  if (from.vehiclestate() != 0) {
    set_vehiclestate(from.vehiclestate());
  }
}

void VehicleSystemStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoPackets.VehicleSystemStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VehicleSystemStatus::CopyFrom(const VehicleSystemStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoPackets.VehicleSystemStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VehicleSystemStatus::IsInitialized() const {
  return true;
}

void VehicleSystemStatus::Swap(VehicleSystemStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VehicleSystemStatus::InternalSwap(VehicleSystemStatus* other) {
  using std::swap;
  swap(vehicleid_, other->vehicleid_);
  swap(vehiclemode_, other->vehiclemode_);
  swap(vehiclestate_, other->vehiclestate_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VehicleSystemStatus::GetMetadata() const {
  protobuf_ProtoPacketsV2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacketsV2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VehicleTelemetryCommand::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VehicleTelemetryCommand::kVehicleidFieldNumber;
const int VehicleTelemetryCommand::kTelemetryselectFieldNumber;
const int VehicleTelemetryCommand::kTelemetryrateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VehicleTelemetryCommand::VehicleTelemetryCommand()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ProtoPacketsV2_2eproto::scc_info_VehicleTelemetryCommand.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoPackets.VehicleTelemetryCommand)
}
VehicleTelemetryCommand::VehicleTelemetryCommand(const VehicleTelemetryCommand& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&vehicleid_, &from.vehicleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&telemetryrate_) -
    reinterpret_cast<char*>(&vehicleid_)) + sizeof(telemetryrate_));
  // @@protoc_insertion_point(copy_constructor:ProtoPackets.VehicleTelemetryCommand)
}

void VehicleTelemetryCommand::SharedCtor() {
  ::memset(&vehicleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&telemetryrate_) -
      reinterpret_cast<char*>(&vehicleid_)) + sizeof(telemetryrate_));
}

VehicleTelemetryCommand::~VehicleTelemetryCommand() {
  // @@protoc_insertion_point(destructor:ProtoPackets.VehicleTelemetryCommand)
  SharedDtor();
}

void VehicleTelemetryCommand::SharedDtor() {
}

void VehicleTelemetryCommand::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VehicleTelemetryCommand::descriptor() {
  ::protobuf_ProtoPacketsV2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacketsV2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VehicleTelemetryCommand& VehicleTelemetryCommand::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ProtoPacketsV2_2eproto::scc_info_VehicleTelemetryCommand.base);
  return *internal_default_instance();
}


void VehicleTelemetryCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoPackets.VehicleTelemetryCommand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&vehicleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&telemetryrate_) -
      reinterpret_cast<char*>(&vehicleid_)) + sizeof(telemetryrate_));
  _internal_metadata_.Clear();
}

bool VehicleTelemetryCommand::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoPackets.VehicleTelemetryCommand)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 vehicleid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vehicleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 telemetryselect = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &telemetryselect_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 telemetryrate = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &telemetryrate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoPackets.VehicleTelemetryCommand)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoPackets.VehicleTelemetryCommand)
  return false;
#undef DO_
}

void VehicleTelemetryCommand::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoPackets.VehicleTelemetryCommand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 vehicleid = 1;
  if (this->vehicleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->vehicleid(), output);
  }

  // uint32 telemetryselect = 2;
  if (this->telemetryselect() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->telemetryselect(), output);
  }

  // uint32 telemetryrate = 3;
  if (this->telemetryrate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->telemetryrate(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoPackets.VehicleTelemetryCommand)
}

::google::protobuf::uint8* VehicleTelemetryCommand::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoPackets.VehicleTelemetryCommand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 vehicleid = 1;
  if (this->vehicleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->vehicleid(), target);
  }

  // uint32 telemetryselect = 2;
  if (this->telemetryselect() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->telemetryselect(), target);
  }

  // uint32 telemetryrate = 3;
  if (this->telemetryrate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->telemetryrate(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoPackets.VehicleTelemetryCommand)
  return target;
}

size_t VehicleTelemetryCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoPackets.VehicleTelemetryCommand)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 vehicleid = 1;
  if (this->vehicleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vehicleid());
  }

  // uint32 telemetryselect = 2;
  if (this->telemetryselect() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->telemetryselect());
  }

  // uint32 telemetryrate = 3;
  if (this->telemetryrate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->telemetryrate());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VehicleTelemetryCommand::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoPackets.VehicleTelemetryCommand)
  GOOGLE_DCHECK_NE(&from, this);
  const VehicleTelemetryCommand* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VehicleTelemetryCommand>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoPackets.VehicleTelemetryCommand)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoPackets.VehicleTelemetryCommand)
    MergeFrom(*source);
  }
}

void VehicleTelemetryCommand::MergeFrom(const VehicleTelemetryCommand& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoPackets.VehicleTelemetryCommand)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.vehicleid() != 0) {
    set_vehicleid(from.vehicleid());
  }
  if (from.telemetryselect() != 0) {
    set_telemetryselect(from.telemetryselect());
  }
  if (from.telemetryrate() != 0) {
    set_telemetryrate(from.telemetryrate());
  }
}

void VehicleTelemetryCommand::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoPackets.VehicleTelemetryCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VehicleTelemetryCommand::CopyFrom(const VehicleTelemetryCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoPackets.VehicleTelemetryCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VehicleTelemetryCommand::IsInitialized() const {
  return true;
}

void VehicleTelemetryCommand::Swap(VehicleTelemetryCommand* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VehicleTelemetryCommand::InternalSwap(VehicleTelemetryCommand* other) {
  using std::swap;
  swap(vehicleid_, other->vehicleid_);
  swap(telemetryselect_, other->telemetryselect_);
  swap(telemetryrate_, other->telemetryrate_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VehicleTelemetryCommand::GetMetadata() const {
  protobuf_ProtoPacketsV2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacketsV2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VehicleTerminationCommand::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VehicleTerminationCommand::kVehicleidFieldNumber;
const int VehicleTerminationCommand::kTerminationmodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VehicleTerminationCommand::VehicleTerminationCommand()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ProtoPacketsV2_2eproto::scc_info_VehicleTerminationCommand.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoPackets.VehicleTerminationCommand)
}
VehicleTerminationCommand::VehicleTerminationCommand(const VehicleTerminationCommand& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&vehicleid_, &from.vehicleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&terminationmode_) -
    reinterpret_cast<char*>(&vehicleid_)) + sizeof(terminationmode_));
  // @@protoc_insertion_point(copy_constructor:ProtoPackets.VehicleTerminationCommand)
}

void VehicleTerminationCommand::SharedCtor() {
  ::memset(&vehicleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&terminationmode_) -
      reinterpret_cast<char*>(&vehicleid_)) + sizeof(terminationmode_));
}

VehicleTerminationCommand::~VehicleTerminationCommand() {
  // @@protoc_insertion_point(destructor:ProtoPackets.VehicleTerminationCommand)
  SharedDtor();
}

void VehicleTerminationCommand::SharedDtor() {
}

void VehicleTerminationCommand::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VehicleTerminationCommand::descriptor() {
  ::protobuf_ProtoPacketsV2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacketsV2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VehicleTerminationCommand& VehicleTerminationCommand::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ProtoPacketsV2_2eproto::scc_info_VehicleTerminationCommand.base);
  return *internal_default_instance();
}


void VehicleTerminationCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoPackets.VehicleTerminationCommand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&vehicleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&terminationmode_) -
      reinterpret_cast<char*>(&vehicleid_)) + sizeof(terminationmode_));
  _internal_metadata_.Clear();
}

bool VehicleTerminationCommand::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoPackets.VehicleTerminationCommand)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 vehicleid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vehicleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 terminationmode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &terminationmode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoPackets.VehicleTerminationCommand)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoPackets.VehicleTerminationCommand)
  return false;
#undef DO_
}

void VehicleTerminationCommand::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoPackets.VehicleTerminationCommand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 vehicleid = 1;
  if (this->vehicleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->vehicleid(), output);
  }

  // uint32 terminationmode = 2;
  if (this->terminationmode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->terminationmode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoPackets.VehicleTerminationCommand)
}

::google::protobuf::uint8* VehicleTerminationCommand::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoPackets.VehicleTerminationCommand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 vehicleid = 1;
  if (this->vehicleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->vehicleid(), target);
  }

  // uint32 terminationmode = 2;
  if (this->terminationmode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->terminationmode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoPackets.VehicleTerminationCommand)
  return target;
}

size_t VehicleTerminationCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoPackets.VehicleTerminationCommand)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 vehicleid = 1;
  if (this->vehicleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vehicleid());
  }

  // uint32 terminationmode = 2;
  if (this->terminationmode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->terminationmode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VehicleTerminationCommand::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoPackets.VehicleTerminationCommand)
  GOOGLE_DCHECK_NE(&from, this);
  const VehicleTerminationCommand* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VehicleTerminationCommand>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoPackets.VehicleTerminationCommand)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoPackets.VehicleTerminationCommand)
    MergeFrom(*source);
  }
}

void VehicleTerminationCommand::MergeFrom(const VehicleTerminationCommand& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoPackets.VehicleTerminationCommand)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.vehicleid() != 0) {
    set_vehicleid(from.vehicleid());
  }
  if (from.terminationmode() != 0) {
    set_terminationmode(from.terminationmode());
  }
}

void VehicleTerminationCommand::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoPackets.VehicleTerminationCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VehicleTerminationCommand::CopyFrom(const VehicleTerminationCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoPackets.VehicleTerminationCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VehicleTerminationCommand::IsInitialized() const {
  return true;
}

void VehicleTerminationCommand::Swap(VehicleTerminationCommand* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VehicleTerminationCommand::InternalSwap(VehicleTerminationCommand* other) {
  using std::swap;
  swap(vehicleid_, other->vehicleid_);
  swap(terminationmode_, other->terminationmode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VehicleTerminationCommand::GetMetadata() const {
  protobuf_ProtoPacketsV2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacketsV2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VehicleWaypointCommand::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VehicleWaypointCommand::kVehicleidFieldNumber;
const int VehicleWaypointCommand::kLongitudeFieldNumber;
const int VehicleWaypointCommand::kLatitudeFieldNumber;
const int VehicleWaypointCommand::kAltitudeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VehicleWaypointCommand::VehicleWaypointCommand()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ProtoPacketsV2_2eproto::scc_info_VehicleWaypointCommand.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoPackets.VehicleWaypointCommand)
}
VehicleWaypointCommand::VehicleWaypointCommand(const VehicleWaypointCommand& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&vehicleid_, &from.vehicleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&altitude_) -
    reinterpret_cast<char*>(&vehicleid_)) + sizeof(altitude_));
  // @@protoc_insertion_point(copy_constructor:ProtoPackets.VehicleWaypointCommand)
}

void VehicleWaypointCommand::SharedCtor() {
  ::memset(&vehicleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&altitude_) -
      reinterpret_cast<char*>(&vehicleid_)) + sizeof(altitude_));
}

VehicleWaypointCommand::~VehicleWaypointCommand() {
  // @@protoc_insertion_point(destructor:ProtoPackets.VehicleWaypointCommand)
  SharedDtor();
}

void VehicleWaypointCommand::SharedDtor() {
}

void VehicleWaypointCommand::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VehicleWaypointCommand::descriptor() {
  ::protobuf_ProtoPacketsV2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacketsV2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VehicleWaypointCommand& VehicleWaypointCommand::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ProtoPacketsV2_2eproto::scc_info_VehicleWaypointCommand.base);
  return *internal_default_instance();
}


void VehicleWaypointCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoPackets.VehicleWaypointCommand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&vehicleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&altitude_) -
      reinterpret_cast<char*>(&vehicleid_)) + sizeof(altitude_));
  _internal_metadata_.Clear();
}

bool VehicleWaypointCommand::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoPackets.VehicleWaypointCommand)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 vehicleid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vehicleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float longitude = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &longitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float latitude = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &latitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float altitude = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &altitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoPackets.VehicleWaypointCommand)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoPackets.VehicleWaypointCommand)
  return false;
#undef DO_
}

void VehicleWaypointCommand::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoPackets.VehicleWaypointCommand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 vehicleid = 1;
  if (this->vehicleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->vehicleid(), output);
  }

  // float longitude = 2;
  if (this->longitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->longitude(), output);
  }

  // float latitude = 3;
  if (this->latitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->latitude(), output);
  }

  // float altitude = 4;
  if (this->altitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->altitude(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoPackets.VehicleWaypointCommand)
}

::google::protobuf::uint8* VehicleWaypointCommand::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoPackets.VehicleWaypointCommand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 vehicleid = 1;
  if (this->vehicleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->vehicleid(), target);
  }

  // float longitude = 2;
  if (this->longitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->longitude(), target);
  }

  // float latitude = 3;
  if (this->latitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->latitude(), target);
  }

  // float altitude = 4;
  if (this->altitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->altitude(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoPackets.VehicleWaypointCommand)
  return target;
}

size_t VehicleWaypointCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoPackets.VehicleWaypointCommand)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 vehicleid = 1;
  if (this->vehicleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vehicleid());
  }

  // float longitude = 2;
  if (this->longitude() != 0) {
    total_size += 1 + 4;
  }

  // float latitude = 3;
  if (this->latitude() != 0) {
    total_size += 1 + 4;
  }

  // float altitude = 4;
  if (this->altitude() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VehicleWaypointCommand::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoPackets.VehicleWaypointCommand)
  GOOGLE_DCHECK_NE(&from, this);
  const VehicleWaypointCommand* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VehicleWaypointCommand>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoPackets.VehicleWaypointCommand)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoPackets.VehicleWaypointCommand)
    MergeFrom(*source);
  }
}

void VehicleWaypointCommand::MergeFrom(const VehicleWaypointCommand& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoPackets.VehicleWaypointCommand)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.vehicleid() != 0) {
    set_vehicleid(from.vehicleid());
  }
  if (from.longitude() != 0) {
    set_longitude(from.longitude());
  }
  if (from.latitude() != 0) {
    set_latitude(from.latitude());
  }
  if (from.altitude() != 0) {
    set_altitude(from.altitude());
  }
}

void VehicleWaypointCommand::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoPackets.VehicleWaypointCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VehicleWaypointCommand::CopyFrom(const VehicleWaypointCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoPackets.VehicleWaypointCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VehicleWaypointCommand::IsInitialized() const {
  return true;
}

void VehicleWaypointCommand::Swap(VehicleWaypointCommand* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VehicleWaypointCommand::InternalSwap(VehicleWaypointCommand* other) {
  using std::swap;
  swap(vehicleid_, other->vehicleid_);
  swap(longitude_, other->longitude_);
  swap(latitude_, other->latitude_);
  swap(altitude_, other->altitude_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VehicleWaypointCommand::GetMetadata() const {
  protobuf_ProtoPacketsV2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacketsV2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Packet::InitAsDefaultInstance() {
  ::ProtoPackets::_Packet_default_instance_._instance.get_mutable()->airvehiclegroundrelativestate_ = const_cast< ::ProtoPackets::AirVehicleGroundRelativeState*>(
      ::ProtoPackets::AirVehicleGroundRelativeState::internal_default_instance());
  ::ProtoPackets::_Packet_default_instance_._instance.get_mutable()->armcommand_ = const_cast< ::ProtoPackets::ArmCommand*>(
      ::ProtoPackets::ArmCommand::internal_default_instance());
  ::ProtoPackets::_Packet_default_instance_._instance.get_mutable()->armposition_ = const_cast< ::ProtoPackets::ArmPosition*>(
      ::ProtoPackets::ArmPosition::internal_default_instance());
  ::ProtoPackets::_Packet_default_instance_._instance.get_mutable()->battery_ = const_cast< ::ProtoPackets::Battery*>(
      ::ProtoPackets::Battery::internal_default_instance());
  ::ProtoPackets::_Packet_default_instance_._instance.get_mutable()->targetacknowledgement_ = const_cast< ::ProtoPackets::TargetAcknowledgement*>(
      ::ProtoPackets::TargetAcknowledgement::internal_default_instance());
  ::ProtoPackets::_Packet_default_instance_._instance.get_mutable()->targetdesignationcommand_ = const_cast< ::ProtoPackets::TargetDesignationCommand*>(
      ::ProtoPackets::TargetDesignationCommand::internal_default_instance());
  ::ProtoPackets::_Packet_default_instance_._instance.get_mutable()->targetstatus_ = const_cast< ::ProtoPackets::TargetStatus*>(
      ::ProtoPackets::TargetStatus::internal_default_instance());
  ::ProtoPackets::_Packet_default_instance_._instance.get_mutable()->vehicleattitude_ = const_cast< ::ProtoPackets::VehicleAttitude*>(
      ::ProtoPackets::VehicleAttitude::internal_default_instance());
  ::ProtoPackets::_Packet_default_instance_._instance.get_mutable()->vehicleauthorizationreply_ = const_cast< ::ProtoPackets::VehicleAuthorizationReply*>(
      ::ProtoPackets::VehicleAuthorizationReply::internal_default_instance());
  ::ProtoPackets::_Packet_default_instance_._instance.get_mutable()->vehicleauthorizationrequest_ = const_cast< ::ProtoPackets::VehicleAuthorizationRequest*>(
      ::ProtoPackets::VehicleAuthorizationRequest::internal_default_instance());
  ::ProtoPackets::_Packet_default_instance_._instance.get_mutable()->vehiclebodysensedstate_ = const_cast< ::ProtoPackets::VehicleBodySensedState*>(
      ::ProtoPackets::VehicleBodySensedState::internal_default_instance());
  ::ProtoPackets::_Packet_default_instance_._instance.get_mutable()->vehicleglobalposition_ = const_cast< ::ProtoPackets::VehicleGlobalPosition*>(
      ::ProtoPackets::VehicleGlobalPosition::internal_default_instance());
  ::ProtoPackets::_Packet_default_instance_._instance.get_mutable()->vehicleidentification_ = const_cast< ::ProtoPackets::VehicleIdentification*>(
      ::ProtoPackets::VehicleIdentification::internal_default_instance());
  ::ProtoPackets::_Packet_default_instance_._instance.get_mutable()->vehicleinertialstate_ = const_cast< ::ProtoPackets::VehicleInertialState*>(
      ::ProtoPackets::VehicleInertialState::internal_default_instance());
  ::ProtoPackets::_Packet_default_instance_._instance.get_mutable()->vehiclemodecommand_ = const_cast< ::ProtoPackets::VehicleModeCommand*>(
      ::ProtoPackets::VehicleModeCommand::internal_default_instance());
  ::ProtoPackets::_Packet_default_instance_._instance.get_mutable()->vehiclesystemstatus_ = const_cast< ::ProtoPackets::VehicleSystemStatus*>(
      ::ProtoPackets::VehicleSystemStatus::internal_default_instance());
  ::ProtoPackets::_Packet_default_instance_._instance.get_mutable()->vehicletelemetrycommand_ = const_cast< ::ProtoPackets::VehicleTelemetryCommand*>(
      ::ProtoPackets::VehicleTelemetryCommand::internal_default_instance());
  ::ProtoPackets::_Packet_default_instance_._instance.get_mutable()->vehicleterminationcommand_ = const_cast< ::ProtoPackets::VehicleTerminationCommand*>(
      ::ProtoPackets::VehicleTerminationCommand::internal_default_instance());
  ::ProtoPackets::_Packet_default_instance_._instance.get_mutable()->vehiclewaypointcommand_ = const_cast< ::ProtoPackets::VehicleWaypointCommand*>(
      ::ProtoPackets::VehicleWaypointCommand::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Packet::kAirVehicleGroundRelativeStateFieldNumber;
const int Packet::kArmCommandFieldNumber;
const int Packet::kArmPositionFieldNumber;
const int Packet::kBatteryFieldNumber;
const int Packet::kTargetAcknowledgementFieldNumber;
const int Packet::kTargetDesignationCommandFieldNumber;
const int Packet::kTargetStatusFieldNumber;
const int Packet::kVehicleAttitudeFieldNumber;
const int Packet::kVehicleAuthorizationReplyFieldNumber;
const int Packet::kVehicleAuthorizationRequestFieldNumber;
const int Packet::kVehicleBodySensedStateFieldNumber;
const int Packet::kVehicleGlobalPositionFieldNumber;
const int Packet::kVehicleIdentificationFieldNumber;
const int Packet::kVehicleInertialStateFieldNumber;
const int Packet::kVehicleModeCommandFieldNumber;
const int Packet::kVehicleSystemStatusFieldNumber;
const int Packet::kVehicleTelemetryCommandFieldNumber;
const int Packet::kVehicleTerminationCommandFieldNumber;
const int Packet::kVehicleWaypointCommandFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Packet::Packet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ProtoPacketsV2_2eproto::scc_info_Packet.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoPackets.Packet)
}
Packet::Packet(const Packet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_airvehiclegroundrelativestate()) {
    airvehiclegroundrelativestate_ = new ::ProtoPackets::AirVehicleGroundRelativeState(*from.airvehiclegroundrelativestate_);
  } else {
    airvehiclegroundrelativestate_ = NULL;
  }
  if (from.has_armcommand()) {
    armcommand_ = new ::ProtoPackets::ArmCommand(*from.armcommand_);
  } else {
    armcommand_ = NULL;
  }
  if (from.has_armposition()) {
    armposition_ = new ::ProtoPackets::ArmPosition(*from.armposition_);
  } else {
    armposition_ = NULL;
  }
  if (from.has_battery()) {
    battery_ = new ::ProtoPackets::Battery(*from.battery_);
  } else {
    battery_ = NULL;
  }
  if (from.has_targetacknowledgement()) {
    targetacknowledgement_ = new ::ProtoPackets::TargetAcknowledgement(*from.targetacknowledgement_);
  } else {
    targetacknowledgement_ = NULL;
  }
  if (from.has_targetdesignationcommand()) {
    targetdesignationcommand_ = new ::ProtoPackets::TargetDesignationCommand(*from.targetdesignationcommand_);
  } else {
    targetdesignationcommand_ = NULL;
  }
  if (from.has_targetstatus()) {
    targetstatus_ = new ::ProtoPackets::TargetStatus(*from.targetstatus_);
  } else {
    targetstatus_ = NULL;
  }
  if (from.has_vehicleattitude()) {
    vehicleattitude_ = new ::ProtoPackets::VehicleAttitude(*from.vehicleattitude_);
  } else {
    vehicleattitude_ = NULL;
  }
  if (from.has_vehicleauthorizationreply()) {
    vehicleauthorizationreply_ = new ::ProtoPackets::VehicleAuthorizationReply(*from.vehicleauthorizationreply_);
  } else {
    vehicleauthorizationreply_ = NULL;
  }
  if (from.has_vehicleauthorizationrequest()) {
    vehicleauthorizationrequest_ = new ::ProtoPackets::VehicleAuthorizationRequest(*from.vehicleauthorizationrequest_);
  } else {
    vehicleauthorizationrequest_ = NULL;
  }
  if (from.has_vehiclebodysensedstate()) {
    vehiclebodysensedstate_ = new ::ProtoPackets::VehicleBodySensedState(*from.vehiclebodysensedstate_);
  } else {
    vehiclebodysensedstate_ = NULL;
  }
  if (from.has_vehicleglobalposition()) {
    vehicleglobalposition_ = new ::ProtoPackets::VehicleGlobalPosition(*from.vehicleglobalposition_);
  } else {
    vehicleglobalposition_ = NULL;
  }
  if (from.has_vehicleidentification()) {
    vehicleidentification_ = new ::ProtoPackets::VehicleIdentification(*from.vehicleidentification_);
  } else {
    vehicleidentification_ = NULL;
  }
  if (from.has_vehicleinertialstate()) {
    vehicleinertialstate_ = new ::ProtoPackets::VehicleInertialState(*from.vehicleinertialstate_);
  } else {
    vehicleinertialstate_ = NULL;
  }
  if (from.has_vehiclemodecommand()) {
    vehiclemodecommand_ = new ::ProtoPackets::VehicleModeCommand(*from.vehiclemodecommand_);
  } else {
    vehiclemodecommand_ = NULL;
  }
  if (from.has_vehiclesystemstatus()) {
    vehiclesystemstatus_ = new ::ProtoPackets::VehicleSystemStatus(*from.vehiclesystemstatus_);
  } else {
    vehiclesystemstatus_ = NULL;
  }
  if (from.has_vehicletelemetrycommand()) {
    vehicletelemetrycommand_ = new ::ProtoPackets::VehicleTelemetryCommand(*from.vehicletelemetrycommand_);
  } else {
    vehicletelemetrycommand_ = NULL;
  }
  if (from.has_vehicleterminationcommand()) {
    vehicleterminationcommand_ = new ::ProtoPackets::VehicleTerminationCommand(*from.vehicleterminationcommand_);
  } else {
    vehicleterminationcommand_ = NULL;
  }
  if (from.has_vehiclewaypointcommand()) {
    vehiclewaypointcommand_ = new ::ProtoPackets::VehicleWaypointCommand(*from.vehiclewaypointcommand_);
  } else {
    vehiclewaypointcommand_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ProtoPackets.Packet)
}

void Packet::SharedCtor() {
  ::memset(&airvehiclegroundrelativestate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vehiclewaypointcommand_) -
      reinterpret_cast<char*>(&airvehiclegroundrelativestate_)) + sizeof(vehiclewaypointcommand_));
}

Packet::~Packet() {
  // @@protoc_insertion_point(destructor:ProtoPackets.Packet)
  SharedDtor();
}

void Packet::SharedDtor() {
  if (this != internal_default_instance()) delete airvehiclegroundrelativestate_;
  if (this != internal_default_instance()) delete armcommand_;
  if (this != internal_default_instance()) delete armposition_;
  if (this != internal_default_instance()) delete battery_;
  if (this != internal_default_instance()) delete targetacknowledgement_;
  if (this != internal_default_instance()) delete targetdesignationcommand_;
  if (this != internal_default_instance()) delete targetstatus_;
  if (this != internal_default_instance()) delete vehicleattitude_;
  if (this != internal_default_instance()) delete vehicleauthorizationreply_;
  if (this != internal_default_instance()) delete vehicleauthorizationrequest_;
  if (this != internal_default_instance()) delete vehiclebodysensedstate_;
  if (this != internal_default_instance()) delete vehicleglobalposition_;
  if (this != internal_default_instance()) delete vehicleidentification_;
  if (this != internal_default_instance()) delete vehicleinertialstate_;
  if (this != internal_default_instance()) delete vehiclemodecommand_;
  if (this != internal_default_instance()) delete vehiclesystemstatus_;
  if (this != internal_default_instance()) delete vehicletelemetrycommand_;
  if (this != internal_default_instance()) delete vehicleterminationcommand_;
  if (this != internal_default_instance()) delete vehiclewaypointcommand_;
}

void Packet::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Packet::descriptor() {
  ::protobuf_ProtoPacketsV2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacketsV2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Packet& Packet::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ProtoPacketsV2_2eproto::scc_info_Packet.base);
  return *internal_default_instance();
}


void Packet::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoPackets.Packet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && airvehiclegroundrelativestate_ != NULL) {
    delete airvehiclegroundrelativestate_;
  }
  airvehiclegroundrelativestate_ = NULL;
  if (GetArenaNoVirtual() == NULL && armcommand_ != NULL) {
    delete armcommand_;
  }
  armcommand_ = NULL;
  if (GetArenaNoVirtual() == NULL && armposition_ != NULL) {
    delete armposition_;
  }
  armposition_ = NULL;
  if (GetArenaNoVirtual() == NULL && battery_ != NULL) {
    delete battery_;
  }
  battery_ = NULL;
  if (GetArenaNoVirtual() == NULL && targetacknowledgement_ != NULL) {
    delete targetacknowledgement_;
  }
  targetacknowledgement_ = NULL;
  if (GetArenaNoVirtual() == NULL && targetdesignationcommand_ != NULL) {
    delete targetdesignationcommand_;
  }
  targetdesignationcommand_ = NULL;
  if (GetArenaNoVirtual() == NULL && targetstatus_ != NULL) {
    delete targetstatus_;
  }
  targetstatus_ = NULL;
  if (GetArenaNoVirtual() == NULL && vehicleattitude_ != NULL) {
    delete vehicleattitude_;
  }
  vehicleattitude_ = NULL;
  if (GetArenaNoVirtual() == NULL && vehicleauthorizationreply_ != NULL) {
    delete vehicleauthorizationreply_;
  }
  vehicleauthorizationreply_ = NULL;
  if (GetArenaNoVirtual() == NULL && vehicleauthorizationrequest_ != NULL) {
    delete vehicleauthorizationrequest_;
  }
  vehicleauthorizationrequest_ = NULL;
  if (GetArenaNoVirtual() == NULL && vehiclebodysensedstate_ != NULL) {
    delete vehiclebodysensedstate_;
  }
  vehiclebodysensedstate_ = NULL;
  if (GetArenaNoVirtual() == NULL && vehicleglobalposition_ != NULL) {
    delete vehicleglobalposition_;
  }
  vehicleglobalposition_ = NULL;
  if (GetArenaNoVirtual() == NULL && vehicleidentification_ != NULL) {
    delete vehicleidentification_;
  }
  vehicleidentification_ = NULL;
  if (GetArenaNoVirtual() == NULL && vehicleinertialstate_ != NULL) {
    delete vehicleinertialstate_;
  }
  vehicleinertialstate_ = NULL;
  if (GetArenaNoVirtual() == NULL && vehiclemodecommand_ != NULL) {
    delete vehiclemodecommand_;
  }
  vehiclemodecommand_ = NULL;
  if (GetArenaNoVirtual() == NULL && vehiclesystemstatus_ != NULL) {
    delete vehiclesystemstatus_;
  }
  vehiclesystemstatus_ = NULL;
  if (GetArenaNoVirtual() == NULL && vehicletelemetrycommand_ != NULL) {
    delete vehicletelemetrycommand_;
  }
  vehicletelemetrycommand_ = NULL;
  if (GetArenaNoVirtual() == NULL && vehicleterminationcommand_ != NULL) {
    delete vehicleterminationcommand_;
  }
  vehicleterminationcommand_ = NULL;
  if (GetArenaNoVirtual() == NULL && vehiclewaypointcommand_ != NULL) {
    delete vehiclewaypointcommand_;
  }
  vehiclewaypointcommand_ = NULL;
  _internal_metadata_.Clear();
}

bool Packet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoPackets.Packet)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ProtoPackets.AirVehicleGroundRelativeState AirVehicleGroundRelativeState = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_airvehiclegroundrelativestate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtoPackets.ArmCommand ArmCommand = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_armcommand()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtoPackets.ArmPosition ArmPosition = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_armposition()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtoPackets.Battery Battery = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_battery()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtoPackets.TargetAcknowledgement TargetAcknowledgement = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_targetacknowledgement()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtoPackets.TargetDesignationCommand TargetDesignationCommand = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_targetdesignationcommand()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtoPackets.TargetStatus TargetStatus = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_targetstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtoPackets.VehicleAttitude VehicleAttitude = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vehicleattitude()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtoPackets.VehicleAuthorizationReply VehicleAuthorizationReply = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vehicleauthorizationreply()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtoPackets.VehicleAuthorizationRequest VehicleAuthorizationRequest = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vehicleauthorizationrequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtoPackets.VehicleBodySensedState VehicleBodySensedState = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vehiclebodysensedstate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtoPackets.VehicleGlobalPosition VehicleGlobalPosition = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vehicleglobalposition()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtoPackets.VehicleIdentification VehicleIdentification = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vehicleidentification()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtoPackets.VehicleInertialState VehicleInertialState = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vehicleinertialstate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtoPackets.VehicleModeCommand VehicleModeCommand = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vehiclemodecommand()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtoPackets.VehicleSystemStatus VehicleSystemStatus = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vehiclesystemstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtoPackets.VehicleTelemetryCommand VehicleTelemetryCommand = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vehicletelemetrycommand()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtoPackets.VehicleTerminationCommand VehicleTerminationCommand = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vehicleterminationcommand()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtoPackets.VehicleWaypointCommand VehicleWaypointCommand = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vehiclewaypointcommand()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoPackets.Packet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoPackets.Packet)
  return false;
#undef DO_
}

void Packet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoPackets.Packet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ProtoPackets.AirVehicleGroundRelativeState AirVehicleGroundRelativeState = 1;
  if (this->has_airvehiclegroundrelativestate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_airvehiclegroundrelativestate(), output);
  }

  // .ProtoPackets.ArmCommand ArmCommand = 2;
  if (this->has_armcommand()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_armcommand(), output);
  }

  // .ProtoPackets.ArmPosition ArmPosition = 3;
  if (this->has_armposition()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_armposition(), output);
  }

  // .ProtoPackets.Battery Battery = 4;
  if (this->has_battery()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_battery(), output);
  }

  // .ProtoPackets.TargetAcknowledgement TargetAcknowledgement = 5;
  if (this->has_targetacknowledgement()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_targetacknowledgement(), output);
  }

  // .ProtoPackets.TargetDesignationCommand TargetDesignationCommand = 6;
  if (this->has_targetdesignationcommand()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_targetdesignationcommand(), output);
  }

  // .ProtoPackets.TargetStatus TargetStatus = 7;
  if (this->has_targetstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_targetstatus(), output);
  }

  // .ProtoPackets.VehicleAttitude VehicleAttitude = 8;
  if (this->has_vehicleattitude()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_vehicleattitude(), output);
  }

  // .ProtoPackets.VehicleAuthorizationReply VehicleAuthorizationReply = 9;
  if (this->has_vehicleauthorizationreply()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_vehicleauthorizationreply(), output);
  }

  // .ProtoPackets.VehicleAuthorizationRequest VehicleAuthorizationRequest = 10;
  if (this->has_vehicleauthorizationrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_vehicleauthorizationrequest(), output);
  }

  // .ProtoPackets.VehicleBodySensedState VehicleBodySensedState = 11;
  if (this->has_vehiclebodysensedstate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_vehiclebodysensedstate(), output);
  }

  // .ProtoPackets.VehicleGlobalPosition VehicleGlobalPosition = 12;
  if (this->has_vehicleglobalposition()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_vehicleglobalposition(), output);
  }

  // .ProtoPackets.VehicleIdentification VehicleIdentification = 13;
  if (this->has_vehicleidentification()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_vehicleidentification(), output);
  }

  // .ProtoPackets.VehicleInertialState VehicleInertialState = 14;
  if (this->has_vehicleinertialstate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_vehicleinertialstate(), output);
  }

  // .ProtoPackets.VehicleModeCommand VehicleModeCommand = 15;
  if (this->has_vehiclemodecommand()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->_internal_vehiclemodecommand(), output);
  }

  // .ProtoPackets.VehicleSystemStatus VehicleSystemStatus = 16;
  if (this->has_vehiclesystemstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->_internal_vehiclesystemstatus(), output);
  }

  // .ProtoPackets.VehicleTelemetryCommand VehicleTelemetryCommand = 17;
  if (this->has_vehicletelemetrycommand()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->_internal_vehicletelemetrycommand(), output);
  }

  // .ProtoPackets.VehicleTerminationCommand VehicleTerminationCommand = 18;
  if (this->has_vehicleterminationcommand()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->_internal_vehicleterminationcommand(), output);
  }

  // .ProtoPackets.VehicleWaypointCommand VehicleWaypointCommand = 19;
  if (this->has_vehiclewaypointcommand()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->_internal_vehiclewaypointcommand(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoPackets.Packet)
}

::google::protobuf::uint8* Packet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoPackets.Packet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ProtoPackets.AirVehicleGroundRelativeState AirVehicleGroundRelativeState = 1;
  if (this->has_airvehiclegroundrelativestate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_airvehiclegroundrelativestate(), deterministic, target);
  }

  // .ProtoPackets.ArmCommand ArmCommand = 2;
  if (this->has_armcommand()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_armcommand(), deterministic, target);
  }

  // .ProtoPackets.ArmPosition ArmPosition = 3;
  if (this->has_armposition()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_armposition(), deterministic, target);
  }

  // .ProtoPackets.Battery Battery = 4;
  if (this->has_battery()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_battery(), deterministic, target);
  }

  // .ProtoPackets.TargetAcknowledgement TargetAcknowledgement = 5;
  if (this->has_targetacknowledgement()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_targetacknowledgement(), deterministic, target);
  }

  // .ProtoPackets.TargetDesignationCommand TargetDesignationCommand = 6;
  if (this->has_targetdesignationcommand()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_targetdesignationcommand(), deterministic, target);
  }

  // .ProtoPackets.TargetStatus TargetStatus = 7;
  if (this->has_targetstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_targetstatus(), deterministic, target);
  }

  // .ProtoPackets.VehicleAttitude VehicleAttitude = 8;
  if (this->has_vehicleattitude()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_vehicleattitude(), deterministic, target);
  }

  // .ProtoPackets.VehicleAuthorizationReply VehicleAuthorizationReply = 9;
  if (this->has_vehicleauthorizationreply()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_vehicleauthorizationreply(), deterministic, target);
  }

  // .ProtoPackets.VehicleAuthorizationRequest VehicleAuthorizationRequest = 10;
  if (this->has_vehicleauthorizationrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_vehicleauthorizationrequest(), deterministic, target);
  }

  // .ProtoPackets.VehicleBodySensedState VehicleBodySensedState = 11;
  if (this->has_vehiclebodysensedstate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_vehiclebodysensedstate(), deterministic, target);
  }

  // .ProtoPackets.VehicleGlobalPosition VehicleGlobalPosition = 12;
  if (this->has_vehicleglobalposition()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_vehicleglobalposition(), deterministic, target);
  }

  // .ProtoPackets.VehicleIdentification VehicleIdentification = 13;
  if (this->has_vehicleidentification()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_vehicleidentification(), deterministic, target);
  }

  // .ProtoPackets.VehicleInertialState VehicleInertialState = 14;
  if (this->has_vehicleinertialstate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_vehicleinertialstate(), deterministic, target);
  }

  // .ProtoPackets.VehicleModeCommand VehicleModeCommand = 15;
  if (this->has_vehiclemodecommand()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->_internal_vehiclemodecommand(), deterministic, target);
  }

  // .ProtoPackets.VehicleSystemStatus VehicleSystemStatus = 16;
  if (this->has_vehiclesystemstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->_internal_vehiclesystemstatus(), deterministic, target);
  }

  // .ProtoPackets.VehicleTelemetryCommand VehicleTelemetryCommand = 17;
  if (this->has_vehicletelemetrycommand()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->_internal_vehicletelemetrycommand(), deterministic, target);
  }

  // .ProtoPackets.VehicleTerminationCommand VehicleTerminationCommand = 18;
  if (this->has_vehicleterminationcommand()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->_internal_vehicleterminationcommand(), deterministic, target);
  }

  // .ProtoPackets.VehicleWaypointCommand VehicleWaypointCommand = 19;
  if (this->has_vehiclewaypointcommand()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, this->_internal_vehiclewaypointcommand(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoPackets.Packet)
  return target;
}

size_t Packet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoPackets.Packet)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ProtoPackets.AirVehicleGroundRelativeState AirVehicleGroundRelativeState = 1;
  if (this->has_airvehiclegroundrelativestate()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *airvehiclegroundrelativestate_);
  }

  // .ProtoPackets.ArmCommand ArmCommand = 2;
  if (this->has_armcommand()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *armcommand_);
  }

  // .ProtoPackets.ArmPosition ArmPosition = 3;
  if (this->has_armposition()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *armposition_);
  }

  // .ProtoPackets.Battery Battery = 4;
  if (this->has_battery()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *battery_);
  }

  // .ProtoPackets.TargetAcknowledgement TargetAcknowledgement = 5;
  if (this->has_targetacknowledgement()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *targetacknowledgement_);
  }

  // .ProtoPackets.TargetDesignationCommand TargetDesignationCommand = 6;
  if (this->has_targetdesignationcommand()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *targetdesignationcommand_);
  }

  // .ProtoPackets.TargetStatus TargetStatus = 7;
  if (this->has_targetstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *targetstatus_);
  }

  // .ProtoPackets.VehicleAttitude VehicleAttitude = 8;
  if (this->has_vehicleattitude()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *vehicleattitude_);
  }

  // .ProtoPackets.VehicleAuthorizationReply VehicleAuthorizationReply = 9;
  if (this->has_vehicleauthorizationreply()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *vehicleauthorizationreply_);
  }

  // .ProtoPackets.VehicleAuthorizationRequest VehicleAuthorizationRequest = 10;
  if (this->has_vehicleauthorizationrequest()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *vehicleauthorizationrequest_);
  }

  // .ProtoPackets.VehicleBodySensedState VehicleBodySensedState = 11;
  if (this->has_vehiclebodysensedstate()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *vehiclebodysensedstate_);
  }

  // .ProtoPackets.VehicleGlobalPosition VehicleGlobalPosition = 12;
  if (this->has_vehicleglobalposition()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *vehicleglobalposition_);
  }

  // .ProtoPackets.VehicleIdentification VehicleIdentification = 13;
  if (this->has_vehicleidentification()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *vehicleidentification_);
  }

  // .ProtoPackets.VehicleInertialState VehicleInertialState = 14;
  if (this->has_vehicleinertialstate()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *vehicleinertialstate_);
  }

  // .ProtoPackets.VehicleModeCommand VehicleModeCommand = 15;
  if (this->has_vehiclemodecommand()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *vehiclemodecommand_);
  }

  // .ProtoPackets.VehicleSystemStatus VehicleSystemStatus = 16;
  if (this->has_vehiclesystemstatus()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *vehiclesystemstatus_);
  }

  // .ProtoPackets.VehicleTelemetryCommand VehicleTelemetryCommand = 17;
  if (this->has_vehicletelemetrycommand()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *vehicletelemetrycommand_);
  }

  // .ProtoPackets.VehicleTerminationCommand VehicleTerminationCommand = 18;
  if (this->has_vehicleterminationcommand()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *vehicleterminationcommand_);
  }

  // .ProtoPackets.VehicleWaypointCommand VehicleWaypointCommand = 19;
  if (this->has_vehiclewaypointcommand()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *vehiclewaypointcommand_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Packet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoPackets.Packet)
  GOOGLE_DCHECK_NE(&from, this);
  const Packet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Packet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoPackets.Packet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoPackets.Packet)
    MergeFrom(*source);
  }
}

void Packet::MergeFrom(const Packet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoPackets.Packet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_airvehiclegroundrelativestate()) {
    mutable_airvehiclegroundrelativestate()->::ProtoPackets::AirVehicleGroundRelativeState::MergeFrom(from.airvehiclegroundrelativestate());
  }
  if (from.has_armcommand()) {
    mutable_armcommand()->::ProtoPackets::ArmCommand::MergeFrom(from.armcommand());
  }
  if (from.has_armposition()) {
    mutable_armposition()->::ProtoPackets::ArmPosition::MergeFrom(from.armposition());
  }
  if (from.has_battery()) {
    mutable_battery()->::ProtoPackets::Battery::MergeFrom(from.battery());
  }
  if (from.has_targetacknowledgement()) {
    mutable_targetacknowledgement()->::ProtoPackets::TargetAcknowledgement::MergeFrom(from.targetacknowledgement());
  }
  if (from.has_targetdesignationcommand()) {
    mutable_targetdesignationcommand()->::ProtoPackets::TargetDesignationCommand::MergeFrom(from.targetdesignationcommand());
  }
  if (from.has_targetstatus()) {
    mutable_targetstatus()->::ProtoPackets::TargetStatus::MergeFrom(from.targetstatus());
  }
  if (from.has_vehicleattitude()) {
    mutable_vehicleattitude()->::ProtoPackets::VehicleAttitude::MergeFrom(from.vehicleattitude());
  }
  if (from.has_vehicleauthorizationreply()) {
    mutable_vehicleauthorizationreply()->::ProtoPackets::VehicleAuthorizationReply::MergeFrom(from.vehicleauthorizationreply());
  }
  if (from.has_vehicleauthorizationrequest()) {
    mutable_vehicleauthorizationrequest()->::ProtoPackets::VehicleAuthorizationRequest::MergeFrom(from.vehicleauthorizationrequest());
  }
  if (from.has_vehiclebodysensedstate()) {
    mutable_vehiclebodysensedstate()->::ProtoPackets::VehicleBodySensedState::MergeFrom(from.vehiclebodysensedstate());
  }
  if (from.has_vehicleglobalposition()) {
    mutable_vehicleglobalposition()->::ProtoPackets::VehicleGlobalPosition::MergeFrom(from.vehicleglobalposition());
  }
  if (from.has_vehicleidentification()) {
    mutable_vehicleidentification()->::ProtoPackets::VehicleIdentification::MergeFrom(from.vehicleidentification());
  }
  if (from.has_vehicleinertialstate()) {
    mutable_vehicleinertialstate()->::ProtoPackets::VehicleInertialState::MergeFrom(from.vehicleinertialstate());
  }
  if (from.has_vehiclemodecommand()) {
    mutable_vehiclemodecommand()->::ProtoPackets::VehicleModeCommand::MergeFrom(from.vehiclemodecommand());
  }
  if (from.has_vehiclesystemstatus()) {
    mutable_vehiclesystemstatus()->::ProtoPackets::VehicleSystemStatus::MergeFrom(from.vehiclesystemstatus());
  }
  if (from.has_vehicletelemetrycommand()) {
    mutable_vehicletelemetrycommand()->::ProtoPackets::VehicleTelemetryCommand::MergeFrom(from.vehicletelemetrycommand());
  }
  if (from.has_vehicleterminationcommand()) {
    mutable_vehicleterminationcommand()->::ProtoPackets::VehicleTerminationCommand::MergeFrom(from.vehicleterminationcommand());
  }
  if (from.has_vehiclewaypointcommand()) {
    mutable_vehiclewaypointcommand()->::ProtoPackets::VehicleWaypointCommand::MergeFrom(from.vehiclewaypointcommand());
  }
}

void Packet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoPackets.Packet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Packet::CopyFrom(const Packet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoPackets.Packet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Packet::IsInitialized() const {
  return true;
}

void Packet::Swap(Packet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Packet::InternalSwap(Packet* other) {
  using std::swap;
  swap(airvehiclegroundrelativestate_, other->airvehiclegroundrelativestate_);
  swap(armcommand_, other->armcommand_);
  swap(armposition_, other->armposition_);
  swap(battery_, other->battery_);
  swap(targetacknowledgement_, other->targetacknowledgement_);
  swap(targetdesignationcommand_, other->targetdesignationcommand_);
  swap(targetstatus_, other->targetstatus_);
  swap(vehicleattitude_, other->vehicleattitude_);
  swap(vehicleauthorizationreply_, other->vehicleauthorizationreply_);
  swap(vehicleauthorizationrequest_, other->vehicleauthorizationrequest_);
  swap(vehiclebodysensedstate_, other->vehiclebodysensedstate_);
  swap(vehicleglobalposition_, other->vehicleglobalposition_);
  swap(vehicleidentification_, other->vehicleidentification_);
  swap(vehicleinertialstate_, other->vehicleinertialstate_);
  swap(vehiclemodecommand_, other->vehiclemodecommand_);
  swap(vehiclesystemstatus_, other->vehiclesystemstatus_);
  swap(vehicletelemetrycommand_, other->vehicletelemetrycommand_);
  swap(vehicleterminationcommand_, other->vehicleterminationcommand_);
  swap(vehiclewaypointcommand_, other->vehiclewaypointcommand_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Packet::GetMetadata() const {
  protobuf_ProtoPacketsV2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacketsV2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace ProtoPackets
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoPackets::AirVehicleGroundRelativeState* Arena::CreateMaybeMessage< ::ProtoPackets::AirVehicleGroundRelativeState >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoPackets::AirVehicleGroundRelativeState >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoPackets::ArmCommand* Arena::CreateMaybeMessage< ::ProtoPackets::ArmCommand >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoPackets::ArmCommand >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoPackets::ArmPosition* Arena::CreateMaybeMessage< ::ProtoPackets::ArmPosition >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoPackets::ArmPosition >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoPackets::Battery* Arena::CreateMaybeMessage< ::ProtoPackets::Battery >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoPackets::Battery >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoPackets::TargetAcknowledgement* Arena::CreateMaybeMessage< ::ProtoPackets::TargetAcknowledgement >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoPackets::TargetAcknowledgement >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoPackets::TargetDesignationCommand* Arena::CreateMaybeMessage< ::ProtoPackets::TargetDesignationCommand >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoPackets::TargetDesignationCommand >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoPackets::TargetStatus* Arena::CreateMaybeMessage< ::ProtoPackets::TargetStatus >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoPackets::TargetStatus >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoPackets::VehicleAttitude* Arena::CreateMaybeMessage< ::ProtoPackets::VehicleAttitude >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoPackets::VehicleAttitude >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoPackets::VehicleAuthorizationReply* Arena::CreateMaybeMessage< ::ProtoPackets::VehicleAuthorizationReply >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoPackets::VehicleAuthorizationReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoPackets::VehicleAuthorizationRequest* Arena::CreateMaybeMessage< ::ProtoPackets::VehicleAuthorizationRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoPackets::VehicleAuthorizationRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoPackets::VehicleBodySensedState* Arena::CreateMaybeMessage< ::ProtoPackets::VehicleBodySensedState >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoPackets::VehicleBodySensedState >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoPackets::VehicleGlobalPosition* Arena::CreateMaybeMessage< ::ProtoPackets::VehicleGlobalPosition >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoPackets::VehicleGlobalPosition >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoPackets::VehicleIdentification* Arena::CreateMaybeMessage< ::ProtoPackets::VehicleIdentification >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoPackets::VehicleIdentification >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoPackets::VehicleInertialState* Arena::CreateMaybeMessage< ::ProtoPackets::VehicleInertialState >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoPackets::VehicleInertialState >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoPackets::VehicleModeCommand* Arena::CreateMaybeMessage< ::ProtoPackets::VehicleModeCommand >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoPackets::VehicleModeCommand >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoPackets::VehicleSystemStatus* Arena::CreateMaybeMessage< ::ProtoPackets::VehicleSystemStatus >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoPackets::VehicleSystemStatus >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoPackets::VehicleTelemetryCommand* Arena::CreateMaybeMessage< ::ProtoPackets::VehicleTelemetryCommand >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoPackets::VehicleTelemetryCommand >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoPackets::VehicleTerminationCommand* Arena::CreateMaybeMessage< ::ProtoPackets::VehicleTerminationCommand >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoPackets::VehicleTerminationCommand >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoPackets::VehicleWaypointCommand* Arena::CreateMaybeMessage< ::ProtoPackets::VehicleWaypointCommand >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoPackets::VehicleWaypointCommand >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoPackets::Packet* Arena::CreateMaybeMessage< ::ProtoPackets::Packet >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoPackets::Packet >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
