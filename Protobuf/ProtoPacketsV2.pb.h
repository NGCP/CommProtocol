// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoPacketsV2.proto

#ifndef PROTOBUF_INCLUDED_ProtoPacketsV2_2eproto
#define PROTOBUF_INCLUDED_ProtoPacketsV2_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_ProtoPacketsV2_2eproto 

namespace protobuf_ProtoPacketsV2_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[20];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_ProtoPacketsV2_2eproto
namespace ProtoPackets {
class AirVehicleGroundRelativeState;
class AirVehicleGroundRelativeStateDefaultTypeInternal;
extern AirVehicleGroundRelativeStateDefaultTypeInternal _AirVehicleGroundRelativeState_default_instance_;
class ArmCommand;
class ArmCommandDefaultTypeInternal;
extern ArmCommandDefaultTypeInternal _ArmCommand_default_instance_;
class ArmPosition;
class ArmPositionDefaultTypeInternal;
extern ArmPositionDefaultTypeInternal _ArmPosition_default_instance_;
class Battery;
class BatteryDefaultTypeInternal;
extern BatteryDefaultTypeInternal _Battery_default_instance_;
class Packet;
class PacketDefaultTypeInternal;
extern PacketDefaultTypeInternal _Packet_default_instance_;
class TargetAcknowledgement;
class TargetAcknowledgementDefaultTypeInternal;
extern TargetAcknowledgementDefaultTypeInternal _TargetAcknowledgement_default_instance_;
class TargetDesignationCommand;
class TargetDesignationCommandDefaultTypeInternal;
extern TargetDesignationCommandDefaultTypeInternal _TargetDesignationCommand_default_instance_;
class TargetStatus;
class TargetStatusDefaultTypeInternal;
extern TargetStatusDefaultTypeInternal _TargetStatus_default_instance_;
class VehicleAttitude;
class VehicleAttitudeDefaultTypeInternal;
extern VehicleAttitudeDefaultTypeInternal _VehicleAttitude_default_instance_;
class VehicleAuthorizationReply;
class VehicleAuthorizationReplyDefaultTypeInternal;
extern VehicleAuthorizationReplyDefaultTypeInternal _VehicleAuthorizationReply_default_instance_;
class VehicleAuthorizationRequest;
class VehicleAuthorizationRequestDefaultTypeInternal;
extern VehicleAuthorizationRequestDefaultTypeInternal _VehicleAuthorizationRequest_default_instance_;
class VehicleBodySensedState;
class VehicleBodySensedStateDefaultTypeInternal;
extern VehicleBodySensedStateDefaultTypeInternal _VehicleBodySensedState_default_instance_;
class VehicleGlobalPosition;
class VehicleGlobalPositionDefaultTypeInternal;
extern VehicleGlobalPositionDefaultTypeInternal _VehicleGlobalPosition_default_instance_;
class VehicleIdentification;
class VehicleIdentificationDefaultTypeInternal;
extern VehicleIdentificationDefaultTypeInternal _VehicleIdentification_default_instance_;
class VehicleInertialState;
class VehicleInertialStateDefaultTypeInternal;
extern VehicleInertialStateDefaultTypeInternal _VehicleInertialState_default_instance_;
class VehicleModeCommand;
class VehicleModeCommandDefaultTypeInternal;
extern VehicleModeCommandDefaultTypeInternal _VehicleModeCommand_default_instance_;
class VehicleSystemStatus;
class VehicleSystemStatusDefaultTypeInternal;
extern VehicleSystemStatusDefaultTypeInternal _VehicleSystemStatus_default_instance_;
class VehicleTelemetryCommand;
class VehicleTelemetryCommandDefaultTypeInternal;
extern VehicleTelemetryCommandDefaultTypeInternal _VehicleTelemetryCommand_default_instance_;
class VehicleTerminationCommand;
class VehicleTerminationCommandDefaultTypeInternal;
extern VehicleTerminationCommandDefaultTypeInternal _VehicleTerminationCommand_default_instance_;
class VehicleWaypointCommand;
class VehicleWaypointCommandDefaultTypeInternal;
extern VehicleWaypointCommandDefaultTypeInternal _VehicleWaypointCommand_default_instance_;
}  // namespace ProtoPackets
namespace google {
namespace protobuf {
template<> ::ProtoPackets::AirVehicleGroundRelativeState* Arena::CreateMaybeMessage<::ProtoPackets::AirVehicleGroundRelativeState>(Arena*);
template<> ::ProtoPackets::ArmCommand* Arena::CreateMaybeMessage<::ProtoPackets::ArmCommand>(Arena*);
template<> ::ProtoPackets::ArmPosition* Arena::CreateMaybeMessage<::ProtoPackets::ArmPosition>(Arena*);
template<> ::ProtoPackets::Battery* Arena::CreateMaybeMessage<::ProtoPackets::Battery>(Arena*);
template<> ::ProtoPackets::Packet* Arena::CreateMaybeMessage<::ProtoPackets::Packet>(Arena*);
template<> ::ProtoPackets::TargetAcknowledgement* Arena::CreateMaybeMessage<::ProtoPackets::TargetAcknowledgement>(Arena*);
template<> ::ProtoPackets::TargetDesignationCommand* Arena::CreateMaybeMessage<::ProtoPackets::TargetDesignationCommand>(Arena*);
template<> ::ProtoPackets::TargetStatus* Arena::CreateMaybeMessage<::ProtoPackets::TargetStatus>(Arena*);
template<> ::ProtoPackets::VehicleAttitude* Arena::CreateMaybeMessage<::ProtoPackets::VehicleAttitude>(Arena*);
template<> ::ProtoPackets::VehicleAuthorizationReply* Arena::CreateMaybeMessage<::ProtoPackets::VehicleAuthorizationReply>(Arena*);
template<> ::ProtoPackets::VehicleAuthorizationRequest* Arena::CreateMaybeMessage<::ProtoPackets::VehicleAuthorizationRequest>(Arena*);
template<> ::ProtoPackets::VehicleBodySensedState* Arena::CreateMaybeMessage<::ProtoPackets::VehicleBodySensedState>(Arena*);
template<> ::ProtoPackets::VehicleGlobalPosition* Arena::CreateMaybeMessage<::ProtoPackets::VehicleGlobalPosition>(Arena*);
template<> ::ProtoPackets::VehicleIdentification* Arena::CreateMaybeMessage<::ProtoPackets::VehicleIdentification>(Arena*);
template<> ::ProtoPackets::VehicleInertialState* Arena::CreateMaybeMessage<::ProtoPackets::VehicleInertialState>(Arena*);
template<> ::ProtoPackets::VehicleModeCommand* Arena::CreateMaybeMessage<::ProtoPackets::VehicleModeCommand>(Arena*);
template<> ::ProtoPackets::VehicleSystemStatus* Arena::CreateMaybeMessage<::ProtoPackets::VehicleSystemStatus>(Arena*);
template<> ::ProtoPackets::VehicleTelemetryCommand* Arena::CreateMaybeMessage<::ProtoPackets::VehicleTelemetryCommand>(Arena*);
template<> ::ProtoPackets::VehicleTerminationCommand* Arena::CreateMaybeMessage<::ProtoPackets::VehicleTerminationCommand>(Arena*);
template<> ::ProtoPackets::VehicleWaypointCommand* Arena::CreateMaybeMessage<::ProtoPackets::VehicleWaypointCommand>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace ProtoPackets {

// ===================================================================

class AirVehicleGroundRelativeState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoPackets.AirVehicleGroundRelativeState) */ {
 public:
  AirVehicleGroundRelativeState();
  virtual ~AirVehicleGroundRelativeState();

  AirVehicleGroundRelativeState(const AirVehicleGroundRelativeState& from);

  inline AirVehicleGroundRelativeState& operator=(const AirVehicleGroundRelativeState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AirVehicleGroundRelativeState(AirVehicleGroundRelativeState&& from) noexcept
    : AirVehicleGroundRelativeState() {
    *this = ::std::move(from);
  }

  inline AirVehicleGroundRelativeState& operator=(AirVehicleGroundRelativeState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AirVehicleGroundRelativeState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AirVehicleGroundRelativeState* internal_default_instance() {
    return reinterpret_cast<const AirVehicleGroundRelativeState*>(
               &_AirVehicleGroundRelativeState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(AirVehicleGroundRelativeState* other);
  friend void swap(AirVehicleGroundRelativeState& a, AirVehicleGroundRelativeState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AirVehicleGroundRelativeState* New() const final {
    return CreateMaybeMessage<AirVehicleGroundRelativeState>(NULL);
  }

  AirVehicleGroundRelativeState* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AirVehicleGroundRelativeState>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AirVehicleGroundRelativeState& from);
  void MergeFrom(const AirVehicleGroundRelativeState& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AirVehicleGroundRelativeState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 vehicleid = 1;
  void clear_vehicleid();
  static const int kVehicleidFieldNumber = 1;
  ::google::protobuf::uint32 vehicleid() const;
  void set_vehicleid(::google::protobuf::uint32 value);

  // float angleofattack = 2;
  void clear_angleofattack();
  static const int kAngleofattackFieldNumber = 2;
  float angleofattack() const;
  void set_angleofattack(float value);

  // float angleofsideslip = 3;
  void clear_angleofsideslip();
  static const int kAngleofsideslipFieldNumber = 3;
  float angleofsideslip() const;
  void set_angleofsideslip(float value);

  // float trueairspeed = 4;
  void clear_trueairspeed();
  static const int kTrueairspeedFieldNumber = 4;
  float trueairspeed() const;
  void set_trueairspeed(float value);

  // float indicatedairspeed = 5;
  void clear_indicatedairspeed();
  static const int kIndicatedairspeedFieldNumber = 5;
  float indicatedairspeed() const;
  void set_indicatedairspeed(float value);

  // float northwindspeed = 6;
  void clear_northwindspeed();
  static const int kNorthwindspeedFieldNumber = 6;
  float northwindspeed() const;
  void set_northwindspeed(float value);

  // float eastwindspeed = 7;
  void clear_eastwindspeed();
  static const int kEastwindspeedFieldNumber = 7;
  float eastwindspeed() const;
  void set_eastwindspeed(float value);

  // float northgroundspeed = 8;
  void clear_northgroundspeed();
  static const int kNorthgroundspeedFieldNumber = 8;
  float northgroundspeed() const;
  void set_northgroundspeed(float value);

  // float eastgroundspeed = 9;
  void clear_eastgroundspeed();
  static const int kEastgroundspeedFieldNumber = 9;
  float eastgroundspeed() const;
  void set_eastgroundspeed(float value);

  // float barometricpressure = 10;
  void clear_barometricpressure();
  static const int kBarometricpressureFieldNumber = 10;
  float barometricpressure() const;
  void set_barometricpressure(float value);

  // float barometricaltitude = 11;
  void clear_barometricaltitude();
  static const int kBarometricaltitudeFieldNumber = 11;
  float barometricaltitude() const;
  void set_barometricaltitude(float value);

  // @@protoc_insertion_point(class_scope:ProtoPackets.AirVehicleGroundRelativeState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 vehicleid_;
  float angleofattack_;
  float angleofsideslip_;
  float trueairspeed_;
  float indicatedairspeed_;
  float northwindspeed_;
  float eastwindspeed_;
  float northgroundspeed_;
  float eastgroundspeed_;
  float barometricpressure_;
  float barometricaltitude_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ProtoPacketsV2_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ArmCommand : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoPackets.ArmCommand) */ {
 public:
  ArmCommand();
  virtual ~ArmCommand();

  ArmCommand(const ArmCommand& from);

  inline ArmCommand& operator=(const ArmCommand& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ArmCommand(ArmCommand&& from) noexcept
    : ArmCommand() {
    *this = ::std::move(from);
  }

  inline ArmCommand& operator=(ArmCommand&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ArmCommand& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ArmCommand* internal_default_instance() {
    return reinterpret_cast<const ArmCommand*>(
               &_ArmCommand_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ArmCommand* other);
  friend void swap(ArmCommand& a, ArmCommand& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ArmCommand* New() const final {
    return CreateMaybeMessage<ArmCommand>(NULL);
  }

  ArmCommand* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ArmCommand>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ArmCommand& from);
  void MergeFrom(const ArmCommand& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ArmCommand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // int32 position = 2;
  void clear_position();
  static const int kPositionFieldNumber = 2;
  ::google::protobuf::int32 position() const;
  void set_position(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProtoPackets.ArmCommand)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::int32 position_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ProtoPacketsV2_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ArmPosition : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoPackets.ArmPosition) */ {
 public:
  ArmPosition();
  virtual ~ArmPosition();

  ArmPosition(const ArmPosition& from);

  inline ArmPosition& operator=(const ArmPosition& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ArmPosition(ArmPosition&& from) noexcept
    : ArmPosition() {
    *this = ::std::move(from);
  }

  inline ArmPosition& operator=(ArmPosition&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ArmPosition& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ArmPosition* internal_default_instance() {
    return reinterpret_cast<const ArmPosition*>(
               &_ArmPosition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(ArmPosition* other);
  friend void swap(ArmPosition& a, ArmPosition& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ArmPosition* New() const final {
    return CreateMaybeMessage<ArmPosition>(NULL);
  }

  ArmPosition* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ArmPosition>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ArmPosition& from);
  void MergeFrom(const ArmPosition& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ArmPosition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 position1 = 1;
  void clear_position1();
  static const int kPosition1FieldNumber = 1;
  ::google::protobuf::int32 position1() const;
  void set_position1(::google::protobuf::int32 value);

  // int32 position2 = 2;
  void clear_position2();
  static const int kPosition2FieldNumber = 2;
  ::google::protobuf::int32 position2() const;
  void set_position2(::google::protobuf::int32 value);

  // int32 position3 = 3;
  void clear_position3();
  static const int kPosition3FieldNumber = 3;
  ::google::protobuf::int32 position3() const;
  void set_position3(::google::protobuf::int32 value);

  // int32 position4 = 4;
  void clear_position4();
  static const int kPosition4FieldNumber = 4;
  ::google::protobuf::int32 position4() const;
  void set_position4(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProtoPackets.ArmPosition)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 position1_;
  ::google::protobuf::int32 position2_;
  ::google::protobuf::int32 position3_;
  ::google::protobuf::int32 position4_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ProtoPacketsV2_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Battery : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoPackets.Battery) */ {
 public:
  Battery();
  virtual ~Battery();

  Battery(const Battery& from);

  inline Battery& operator=(const Battery& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Battery(Battery&& from) noexcept
    : Battery() {
    *this = ::std::move(from);
  }

  inline Battery& operator=(Battery&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Battery& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Battery* internal_default_instance() {
    return reinterpret_cast<const Battery*>(
               &_Battery_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(Battery* other);
  friend void swap(Battery& a, Battery& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Battery* New() const final {
    return CreateMaybeMessage<Battery>(NULL);
  }

  Battery* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Battery>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Battery& from);
  void MergeFrom(const Battery& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Battery* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 batteryPercentage = 1;
  void clear_batterypercentage();
  static const int kBatteryPercentageFieldNumber = 1;
  ::google::protobuf::uint32 batterypercentage() const;
  void set_batterypercentage(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoPackets.Battery)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 batterypercentage_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ProtoPacketsV2_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TargetAcknowledgement : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoPackets.TargetAcknowledgement) */ {
 public:
  TargetAcknowledgement();
  virtual ~TargetAcknowledgement();

  TargetAcknowledgement(const TargetAcknowledgement& from);

  inline TargetAcknowledgement& operator=(const TargetAcknowledgement& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TargetAcknowledgement(TargetAcknowledgement&& from) noexcept
    : TargetAcknowledgement() {
    *this = ::std::move(from);
  }

  inline TargetAcknowledgement& operator=(TargetAcknowledgement&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TargetAcknowledgement& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TargetAcknowledgement* internal_default_instance() {
    return reinterpret_cast<const TargetAcknowledgement*>(
               &_TargetAcknowledgement_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(TargetAcknowledgement* other);
  friend void swap(TargetAcknowledgement& a, TargetAcknowledgement& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TargetAcknowledgement* New() const final {
    return CreateMaybeMessage<TargetAcknowledgement>(NULL);
  }

  TargetAcknowledgement* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TargetAcknowledgement>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TargetAcknowledgement& from);
  void MergeFrom(const TargetAcknowledgement& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TargetAcknowledgement* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 targetstatus = 1;
  void clear_targetstatus();
  static const int kTargetstatusFieldNumber = 1;
  ::google::protobuf::uint32 targetstatus() const;
  void set_targetstatus(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoPackets.TargetAcknowledgement)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 targetstatus_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ProtoPacketsV2_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TargetDesignationCommand : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoPackets.TargetDesignationCommand) */ {
 public:
  TargetDesignationCommand();
  virtual ~TargetDesignationCommand();

  TargetDesignationCommand(const TargetDesignationCommand& from);

  inline TargetDesignationCommand& operator=(const TargetDesignationCommand& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TargetDesignationCommand(TargetDesignationCommand&& from) noexcept
    : TargetDesignationCommand() {
    *this = ::std::move(from);
  }

  inline TargetDesignationCommand& operator=(TargetDesignationCommand&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TargetDesignationCommand& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TargetDesignationCommand* internal_default_instance() {
    return reinterpret_cast<const TargetDesignationCommand*>(
               &_TargetDesignationCommand_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(TargetDesignationCommand* other);
  friend void swap(TargetDesignationCommand& a, TargetDesignationCommand& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TargetDesignationCommand* New() const final {
    return CreateMaybeMessage<TargetDesignationCommand>(NULL);
  }

  TargetDesignationCommand* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TargetDesignationCommand>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TargetDesignationCommand& from);
  void MergeFrom(const TargetDesignationCommand& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TargetDesignationCommand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 vehicleid = 1;
  void clear_vehicleid();
  static const int kVehicleidFieldNumber = 1;
  ::google::protobuf::uint32 vehicleid() const;
  void set_vehicleid(::google::protobuf::uint32 value);

  // uint32 payloadid = 2;
  void clear_payloadid();
  static const int kPayloadidFieldNumber = 2;
  ::google::protobuf::uint32 payloadid() const;
  void set_payloadid(::google::protobuf::uint32 value);

  // uint32 targetid = 3;
  void clear_targetid();
  static const int kTargetidFieldNumber = 3;
  ::google::protobuf::uint32 targetid() const;
  void set_targetid(::google::protobuf::uint32 value);

  // uint32 targettype = 4;
  void clear_targettype();
  static const int kTargettypeFieldNumber = 4;
  ::google::protobuf::uint32 targettype() const;
  void set_targettype(::google::protobuf::uint32 value);

  // float longitude = 5;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 5;
  float longitude() const;
  void set_longitude(float value);

  // float latitude = 6;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 6;
  float latitude() const;
  void set_latitude(float value);

  // float altitude = 7;
  void clear_altitude();
  static const int kAltitudeFieldNumber = 7;
  float altitude() const;
  void set_altitude(float value);

  // @@protoc_insertion_point(class_scope:ProtoPackets.TargetDesignationCommand)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 vehicleid_;
  ::google::protobuf::uint32 payloadid_;
  ::google::protobuf::uint32 targetid_;
  ::google::protobuf::uint32 targettype_;
  float longitude_;
  float latitude_;
  float altitude_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ProtoPacketsV2_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TargetStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoPackets.TargetStatus) */ {
 public:
  TargetStatus();
  virtual ~TargetStatus();

  TargetStatus(const TargetStatus& from);

  inline TargetStatus& operator=(const TargetStatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TargetStatus(TargetStatus&& from) noexcept
    : TargetStatus() {
    *this = ::std::move(from);
  }

  inline TargetStatus& operator=(TargetStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TargetStatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TargetStatus* internal_default_instance() {
    return reinterpret_cast<const TargetStatus*>(
               &_TargetStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(TargetStatus* other);
  friend void swap(TargetStatus& a, TargetStatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TargetStatus* New() const final {
    return CreateMaybeMessage<TargetStatus>(NULL);
  }

  TargetStatus* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TargetStatus>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TargetStatus& from);
  void MergeFrom(const TargetStatus& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TargetStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double targetradius = 1;
  void clear_targetradius();
  static const int kTargetradiusFieldNumber = 1;
  double targetradius() const;
  void set_targetradius(double value);

  // double targetangle = 2;
  void clear_targetangle();
  static const int kTargetangleFieldNumber = 2;
  double targetangle() const;
  void set_targetangle(double value);

  // double targetaltitude = 3;
  void clear_targetaltitude();
  static const int kTargetaltitudeFieldNumber = 3;
  double targetaltitude() const;
  void set_targetaltitude(double value);

  // @@protoc_insertion_point(class_scope:ProtoPackets.TargetStatus)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double targetradius_;
  double targetangle_;
  double targetaltitude_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ProtoPacketsV2_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VehicleAttitude : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoPackets.VehicleAttitude) */ {
 public:
  VehicleAttitude();
  virtual ~VehicleAttitude();

  VehicleAttitude(const VehicleAttitude& from);

  inline VehicleAttitude& operator=(const VehicleAttitude& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VehicleAttitude(VehicleAttitude&& from) noexcept
    : VehicleAttitude() {
    *this = ::std::move(from);
  }

  inline VehicleAttitude& operator=(VehicleAttitude&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VehicleAttitude& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VehicleAttitude* internal_default_instance() {
    return reinterpret_cast<const VehicleAttitude*>(
               &_VehicleAttitude_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(VehicleAttitude* other);
  friend void swap(VehicleAttitude& a, VehicleAttitude& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VehicleAttitude* New() const final {
    return CreateMaybeMessage<VehicleAttitude>(NULL);
  }

  VehicleAttitude* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VehicleAttitude>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VehicleAttitude& from);
  void MergeFrom(const VehicleAttitude& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VehicleAttitude* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 vehicleid = 1;
  void clear_vehicleid();
  static const int kVehicleidFieldNumber = 1;
  ::google::protobuf::uint32 vehicleid() const;
  void set_vehicleid(::google::protobuf::uint32 value);

  // float roll = 2;
  void clear_roll();
  static const int kRollFieldNumber = 2;
  float roll() const;
  void set_roll(float value);

  // float pitch = 3;
  void clear_pitch();
  static const int kPitchFieldNumber = 3;
  float pitch() const;
  void set_pitch(float value);

  // float yaw = 4;
  void clear_yaw();
  static const int kYawFieldNumber = 4;
  float yaw() const;
  void set_yaw(float value);

  // @@protoc_insertion_point(class_scope:ProtoPackets.VehicleAttitude)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 vehicleid_;
  float roll_;
  float pitch_;
  float yaw_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ProtoPacketsV2_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VehicleAuthorizationReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoPackets.VehicleAuthorizationReply) */ {
 public:
  VehicleAuthorizationReply();
  virtual ~VehicleAuthorizationReply();

  VehicleAuthorizationReply(const VehicleAuthorizationReply& from);

  inline VehicleAuthorizationReply& operator=(const VehicleAuthorizationReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VehicleAuthorizationReply(VehicleAuthorizationReply&& from) noexcept
    : VehicleAuthorizationReply() {
    *this = ::std::move(from);
  }

  inline VehicleAuthorizationReply& operator=(VehicleAuthorizationReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VehicleAuthorizationReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VehicleAuthorizationReply* internal_default_instance() {
    return reinterpret_cast<const VehicleAuthorizationReply*>(
               &_VehicleAuthorizationReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(VehicleAuthorizationReply* other);
  friend void swap(VehicleAuthorizationReply& a, VehicleAuthorizationReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VehicleAuthorizationReply* New() const final {
    return CreateMaybeMessage<VehicleAuthorizationReply>(NULL);
  }

  VehicleAuthorizationReply* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VehicleAuthorizationReply>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VehicleAuthorizationReply& from);
  void MergeFrom(const VehicleAuthorizationReply& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VehicleAuthorizationReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 vehicleid = 1;
  void clear_vehicleid();
  static const int kVehicleidFieldNumber = 1;
  ::google::protobuf::uint32 vehicleid() const;
  void set_vehicleid(::google::protobuf::uint32 value);

  // uint32 vehicletype = 2;
  void clear_vehicletype();
  static const int kVehicletypeFieldNumber = 2;
  ::google::protobuf::uint32 vehicletype() const;
  void set_vehicletype(::google::protobuf::uint32 value);

  // uint32 authorizedservices = 3;
  void clear_authorizedservices();
  static const int kAuthorizedservicesFieldNumber = 3;
  ::google::protobuf::uint32 authorizedservices() const;
  void set_authorizedservices(::google::protobuf::uint32 value);

  // uint32 grantedservices = 4;
  void clear_grantedservices();
  static const int kGrantedservicesFieldNumber = 4;
  ::google::protobuf::uint32 grantedservices() const;
  void set_grantedservices(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoPackets.VehicleAuthorizationReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 vehicleid_;
  ::google::protobuf::uint32 vehicletype_;
  ::google::protobuf::uint32 authorizedservices_;
  ::google::protobuf::uint32 grantedservices_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ProtoPacketsV2_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VehicleAuthorizationRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoPackets.VehicleAuthorizationRequest) */ {
 public:
  VehicleAuthorizationRequest();
  virtual ~VehicleAuthorizationRequest();

  VehicleAuthorizationRequest(const VehicleAuthorizationRequest& from);

  inline VehicleAuthorizationRequest& operator=(const VehicleAuthorizationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VehicleAuthorizationRequest(VehicleAuthorizationRequest&& from) noexcept
    : VehicleAuthorizationRequest() {
    *this = ::std::move(from);
  }

  inline VehicleAuthorizationRequest& operator=(VehicleAuthorizationRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VehicleAuthorizationRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VehicleAuthorizationRequest* internal_default_instance() {
    return reinterpret_cast<const VehicleAuthorizationRequest*>(
               &_VehicleAuthorizationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(VehicleAuthorizationRequest* other);
  friend void swap(VehicleAuthorizationRequest& a, VehicleAuthorizationRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VehicleAuthorizationRequest* New() const final {
    return CreateMaybeMessage<VehicleAuthorizationRequest>(NULL);
  }

  VehicleAuthorizationRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VehicleAuthorizationRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VehicleAuthorizationRequest& from);
  void MergeFrom(const VehicleAuthorizationRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VehicleAuthorizationRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 vehicleid = 1;
  void clear_vehicleid();
  static const int kVehicleidFieldNumber = 1;
  ::google::protobuf::uint32 vehicleid() const;
  void set_vehicleid(::google::protobuf::uint32 value);

  // uint32 vehicletype = 2;
  void clear_vehicletype();
  static const int kVehicletypeFieldNumber = 2;
  ::google::protobuf::uint32 vehicletype() const;
  void set_vehicletype(::google::protobuf::uint32 value);

  // uint32 authorizedservices = 3;
  void clear_authorizedservices();
  static const int kAuthorizedservicesFieldNumber = 3;
  ::google::protobuf::uint32 authorizedservices() const;
  void set_authorizedservices(::google::protobuf::uint32 value);

  // uint32 grantedservices = 4;
  void clear_grantedservices();
  static const int kGrantedservicesFieldNumber = 4;
  ::google::protobuf::uint32 grantedservices() const;
  void set_grantedservices(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoPackets.VehicleAuthorizationRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 vehicleid_;
  ::google::protobuf::uint32 vehicletype_;
  ::google::protobuf::uint32 authorizedservices_;
  ::google::protobuf::uint32 grantedservices_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ProtoPacketsV2_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VehicleBodySensedState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoPackets.VehicleBodySensedState) */ {
 public:
  VehicleBodySensedState();
  virtual ~VehicleBodySensedState();

  VehicleBodySensedState(const VehicleBodySensedState& from);

  inline VehicleBodySensedState& operator=(const VehicleBodySensedState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VehicleBodySensedState(VehicleBodySensedState&& from) noexcept
    : VehicleBodySensedState() {
    *this = ::std::move(from);
  }

  inline VehicleBodySensedState& operator=(VehicleBodySensedState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VehicleBodySensedState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VehicleBodySensedState* internal_default_instance() {
    return reinterpret_cast<const VehicleBodySensedState*>(
               &_VehicleBodySensedState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(VehicleBodySensedState* other);
  friend void swap(VehicleBodySensedState& a, VehicleBodySensedState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VehicleBodySensedState* New() const final {
    return CreateMaybeMessage<VehicleBodySensedState>(NULL);
  }

  VehicleBodySensedState* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VehicleBodySensedState>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VehicleBodySensedState& from);
  void MergeFrom(const VehicleBodySensedState& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VehicleBodySensedState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 vehicleid = 1;
  void clear_vehicleid();
  static const int kVehicleidFieldNumber = 1;
  ::google::protobuf::uint32 vehicleid() const;
  void set_vehicleid(::google::protobuf::uint32 value);

  // float xaccel = 2;
  void clear_xaccel();
  static const int kXaccelFieldNumber = 2;
  float xaccel() const;
  void set_xaccel(float value);

  // float yaccel = 3;
  void clear_yaccel();
  static const int kYaccelFieldNumber = 3;
  float yaccel() const;
  void set_yaccel(float value);

  // float zaccel = 4;
  void clear_zaccel();
  static const int kZaccelFieldNumber = 4;
  float zaccel() const;
  void set_zaccel(float value);

  // float rollrate = 5;
  void clear_rollrate();
  static const int kRollrateFieldNumber = 5;
  float rollrate() const;
  void set_rollrate(float value);

  // float pitchrate = 6;
  void clear_pitchrate();
  static const int kPitchrateFieldNumber = 6;
  float pitchrate() const;
  void set_pitchrate(float value);

  // float yawrate = 7;
  void clear_yawrate();
  static const int kYawrateFieldNumber = 7;
  float yawrate() const;
  void set_yawrate(float value);

  // @@protoc_insertion_point(class_scope:ProtoPackets.VehicleBodySensedState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 vehicleid_;
  float xaccel_;
  float yaccel_;
  float zaccel_;
  float rollrate_;
  float pitchrate_;
  float yawrate_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ProtoPacketsV2_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VehicleGlobalPosition : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoPackets.VehicleGlobalPosition) */ {
 public:
  VehicleGlobalPosition();
  virtual ~VehicleGlobalPosition();

  VehicleGlobalPosition(const VehicleGlobalPosition& from);

  inline VehicleGlobalPosition& operator=(const VehicleGlobalPosition& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VehicleGlobalPosition(VehicleGlobalPosition&& from) noexcept
    : VehicleGlobalPosition() {
    *this = ::std::move(from);
  }

  inline VehicleGlobalPosition& operator=(VehicleGlobalPosition&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VehicleGlobalPosition& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VehicleGlobalPosition* internal_default_instance() {
    return reinterpret_cast<const VehicleGlobalPosition*>(
               &_VehicleGlobalPosition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(VehicleGlobalPosition* other);
  friend void swap(VehicleGlobalPosition& a, VehicleGlobalPosition& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VehicleGlobalPosition* New() const final {
    return CreateMaybeMessage<VehicleGlobalPosition>(NULL);
  }

  VehicleGlobalPosition* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VehicleGlobalPosition>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VehicleGlobalPosition& from);
  void MergeFrom(const VehicleGlobalPosition& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VehicleGlobalPosition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 vehicleid = 1;
  void clear_vehicleid();
  static const int kVehicleidFieldNumber = 1;
  ::google::protobuf::uint32 vehicleid() const;
  void set_vehicleid(::google::protobuf::uint32 value);

  // float longitude = 2;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 2;
  float longitude() const;
  void set_longitude(float value);

  // float latitude = 3;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 3;
  float latitude() const;
  void set_latitude(float value);

  // float altitude = 4;
  void clear_altitude();
  static const int kAltitudeFieldNumber = 4;
  float altitude() const;
  void set_altitude(float value);

  // float xspeed = 5;
  void clear_xspeed();
  static const int kXspeedFieldNumber = 5;
  float xspeed() const;
  void set_xspeed(float value);

  // float yspeed = 6;
  void clear_yspeed();
  static const int kYspeedFieldNumber = 6;
  float yspeed() const;
  void set_yspeed(float value);

  // float zspeed = 7;
  void clear_zspeed();
  static const int kZspeedFieldNumber = 7;
  float zspeed() const;
  void set_zspeed(float value);

  // @@protoc_insertion_point(class_scope:ProtoPackets.VehicleGlobalPosition)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 vehicleid_;
  float longitude_;
  float latitude_;
  float altitude_;
  float xspeed_;
  float yspeed_;
  float zspeed_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ProtoPacketsV2_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VehicleIdentification : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoPackets.VehicleIdentification) */ {
 public:
  VehicleIdentification();
  virtual ~VehicleIdentification();

  VehicleIdentification(const VehicleIdentification& from);

  inline VehicleIdentification& operator=(const VehicleIdentification& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VehicleIdentification(VehicleIdentification&& from) noexcept
    : VehicleIdentification() {
    *this = ::std::move(from);
  }

  inline VehicleIdentification& operator=(VehicleIdentification&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VehicleIdentification& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VehicleIdentification* internal_default_instance() {
    return reinterpret_cast<const VehicleIdentification*>(
               &_VehicleIdentification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(VehicleIdentification* other);
  friend void swap(VehicleIdentification& a, VehicleIdentification& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VehicleIdentification* New() const final {
    return CreateMaybeMessage<VehicleIdentification>(NULL);
  }

  VehicleIdentification* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VehicleIdentification>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VehicleIdentification& from);
  void MergeFrom(const VehicleIdentification& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VehicleIdentification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 vehicleid = 1;
  void clear_vehicleid();
  static const int kVehicleidFieldNumber = 1;
  ::google::protobuf::uint32 vehicleid() const;
  void set_vehicleid(::google::protobuf::uint32 value);

  // uint32 vehicletype = 2;
  void clear_vehicletype();
  static const int kVehicletypeFieldNumber = 2;
  ::google::protobuf::uint32 vehicletype() const;
  void set_vehicletype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoPackets.VehicleIdentification)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 vehicleid_;
  ::google::protobuf::uint32 vehicletype_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ProtoPacketsV2_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VehicleInertialState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoPackets.VehicleInertialState) */ {
 public:
  VehicleInertialState();
  virtual ~VehicleInertialState();

  VehicleInertialState(const VehicleInertialState& from);

  inline VehicleInertialState& operator=(const VehicleInertialState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VehicleInertialState(VehicleInertialState&& from) noexcept
    : VehicleInertialState() {
    *this = ::std::move(from);
  }

  inline VehicleInertialState& operator=(VehicleInertialState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VehicleInertialState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VehicleInertialState* internal_default_instance() {
    return reinterpret_cast<const VehicleInertialState*>(
               &_VehicleInertialState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(VehicleInertialState* other);
  friend void swap(VehicleInertialState& a, VehicleInertialState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VehicleInertialState* New() const final {
    return CreateMaybeMessage<VehicleInertialState>(NULL);
  }

  VehicleInertialState* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VehicleInertialState>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VehicleInertialState& from);
  void MergeFrom(const VehicleInertialState& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VehicleInertialState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 vehicleid = 1;
  void clear_vehicleid();
  static const int kVehicleidFieldNumber = 1;
  ::google::protobuf::uint32 vehicleid() const;
  void set_vehicleid(::google::protobuf::uint32 value);

  // float longitude = 2;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 2;
  float longitude() const;
  void set_longitude(float value);

  // float latitude = 3;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 3;
  float latitude() const;
  void set_latitude(float value);

  // float altitude = 4;
  void clear_altitude();
  static const int kAltitudeFieldNumber = 4;
  float altitude() const;
  void set_altitude(float value);

  // float roll = 5;
  void clear_roll();
  static const int kRollFieldNumber = 5;
  float roll() const;
  void set_roll(float value);

  // float pitch = 6;
  void clear_pitch();
  static const int kPitchFieldNumber = 6;
  float pitch() const;
  void set_pitch(float value);

  // float heading = 7;
  void clear_heading();
  static const int kHeadingFieldNumber = 7;
  float heading() const;
  void set_heading(float value);

  // float northspeed = 8;
  void clear_northspeed();
  static const int kNorthspeedFieldNumber = 8;
  float northspeed() const;
  void set_northspeed(float value);

  // float eastspeed = 9;
  void clear_eastspeed();
  static const int kEastspeedFieldNumber = 9;
  float eastspeed() const;
  void set_eastspeed(float value);

  // float verticalspeed = 10;
  void clear_verticalspeed();
  static const int kVerticalspeedFieldNumber = 10;
  float verticalspeed() const;
  void set_verticalspeed(float value);

  // float rollrate = 11;
  void clear_rollrate();
  static const int kRollrateFieldNumber = 11;
  float rollrate() const;
  void set_rollrate(float value);

  // float pitchrate = 12;
  void clear_pitchrate();
  static const int kPitchrateFieldNumber = 12;
  float pitchrate() const;
  void set_pitchrate(float value);

  // float yawrate = 13;
  void clear_yawrate();
  static const int kYawrateFieldNumber = 13;
  float yawrate() const;
  void set_yawrate(float value);

  // float northaccel = 14;
  void clear_northaccel();
  static const int kNorthaccelFieldNumber = 14;
  float northaccel() const;
  void set_northaccel(float value);

  // float eastaccel = 15;
  void clear_eastaccel();
  static const int kEastaccelFieldNumber = 15;
  float eastaccel() const;
  void set_eastaccel(float value);

  // float verticalaccel = 16;
  void clear_verticalaccel();
  static const int kVerticalaccelFieldNumber = 16;
  float verticalaccel() const;
  void set_verticalaccel(float value);

  // @@protoc_insertion_point(class_scope:ProtoPackets.VehicleInertialState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 vehicleid_;
  float longitude_;
  float latitude_;
  float altitude_;
  float roll_;
  float pitch_;
  float heading_;
  float northspeed_;
  float eastspeed_;
  float verticalspeed_;
  float rollrate_;
  float pitchrate_;
  float yawrate_;
  float northaccel_;
  float eastaccel_;
  float verticalaccel_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ProtoPacketsV2_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VehicleModeCommand : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoPackets.VehicleModeCommand) */ {
 public:
  VehicleModeCommand();
  virtual ~VehicleModeCommand();

  VehicleModeCommand(const VehicleModeCommand& from);

  inline VehicleModeCommand& operator=(const VehicleModeCommand& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VehicleModeCommand(VehicleModeCommand&& from) noexcept
    : VehicleModeCommand() {
    *this = ::std::move(from);
  }

  inline VehicleModeCommand& operator=(VehicleModeCommand&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VehicleModeCommand& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VehicleModeCommand* internal_default_instance() {
    return reinterpret_cast<const VehicleModeCommand*>(
               &_VehicleModeCommand_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(VehicleModeCommand* other);
  friend void swap(VehicleModeCommand& a, VehicleModeCommand& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VehicleModeCommand* New() const final {
    return CreateMaybeMessage<VehicleModeCommand>(NULL);
  }

  VehicleModeCommand* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VehicleModeCommand>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VehicleModeCommand& from);
  void MergeFrom(const VehicleModeCommand& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VehicleModeCommand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 vehicleid = 1;
  void clear_vehicleid();
  static const int kVehicleidFieldNumber = 1;
  ::google::protobuf::uint32 vehicleid() const;
  void set_vehicleid(::google::protobuf::uint32 value);

  // uint32 vehiclemode = 2;
  void clear_vehiclemode();
  static const int kVehiclemodeFieldNumber = 2;
  ::google::protobuf::uint32 vehiclemode() const;
  void set_vehiclemode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoPackets.VehicleModeCommand)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 vehicleid_;
  ::google::protobuf::uint32 vehiclemode_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ProtoPacketsV2_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VehicleSystemStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoPackets.VehicleSystemStatus) */ {
 public:
  VehicleSystemStatus();
  virtual ~VehicleSystemStatus();

  VehicleSystemStatus(const VehicleSystemStatus& from);

  inline VehicleSystemStatus& operator=(const VehicleSystemStatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VehicleSystemStatus(VehicleSystemStatus&& from) noexcept
    : VehicleSystemStatus() {
    *this = ::std::move(from);
  }

  inline VehicleSystemStatus& operator=(VehicleSystemStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VehicleSystemStatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VehicleSystemStatus* internal_default_instance() {
    return reinterpret_cast<const VehicleSystemStatus*>(
               &_VehicleSystemStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(VehicleSystemStatus* other);
  friend void swap(VehicleSystemStatus& a, VehicleSystemStatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VehicleSystemStatus* New() const final {
    return CreateMaybeMessage<VehicleSystemStatus>(NULL);
  }

  VehicleSystemStatus* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VehicleSystemStatus>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VehicleSystemStatus& from);
  void MergeFrom(const VehicleSystemStatus& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VehicleSystemStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 vehicleid = 1;
  void clear_vehicleid();
  static const int kVehicleidFieldNumber = 1;
  ::google::protobuf::uint32 vehicleid() const;
  void set_vehicleid(::google::protobuf::uint32 value);

  // uint32 vehiclemode = 2;
  void clear_vehiclemode();
  static const int kVehiclemodeFieldNumber = 2;
  ::google::protobuf::uint32 vehiclemode() const;
  void set_vehiclemode(::google::protobuf::uint32 value);

  // uint32 vehiclestate = 3;
  void clear_vehiclestate();
  static const int kVehiclestateFieldNumber = 3;
  ::google::protobuf::uint32 vehiclestate() const;
  void set_vehiclestate(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoPackets.VehicleSystemStatus)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 vehicleid_;
  ::google::protobuf::uint32 vehiclemode_;
  ::google::protobuf::uint32 vehiclestate_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ProtoPacketsV2_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VehicleTelemetryCommand : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoPackets.VehicleTelemetryCommand) */ {
 public:
  VehicleTelemetryCommand();
  virtual ~VehicleTelemetryCommand();

  VehicleTelemetryCommand(const VehicleTelemetryCommand& from);

  inline VehicleTelemetryCommand& operator=(const VehicleTelemetryCommand& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VehicleTelemetryCommand(VehicleTelemetryCommand&& from) noexcept
    : VehicleTelemetryCommand() {
    *this = ::std::move(from);
  }

  inline VehicleTelemetryCommand& operator=(VehicleTelemetryCommand&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VehicleTelemetryCommand& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VehicleTelemetryCommand* internal_default_instance() {
    return reinterpret_cast<const VehicleTelemetryCommand*>(
               &_VehicleTelemetryCommand_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(VehicleTelemetryCommand* other);
  friend void swap(VehicleTelemetryCommand& a, VehicleTelemetryCommand& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VehicleTelemetryCommand* New() const final {
    return CreateMaybeMessage<VehicleTelemetryCommand>(NULL);
  }

  VehicleTelemetryCommand* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VehicleTelemetryCommand>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VehicleTelemetryCommand& from);
  void MergeFrom(const VehicleTelemetryCommand& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VehicleTelemetryCommand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 vehicleid = 1;
  void clear_vehicleid();
  static const int kVehicleidFieldNumber = 1;
  ::google::protobuf::uint32 vehicleid() const;
  void set_vehicleid(::google::protobuf::uint32 value);

  // uint32 telemetryselect = 2;
  void clear_telemetryselect();
  static const int kTelemetryselectFieldNumber = 2;
  ::google::protobuf::uint32 telemetryselect() const;
  void set_telemetryselect(::google::protobuf::uint32 value);

  // uint32 telemetryrate = 3;
  void clear_telemetryrate();
  static const int kTelemetryrateFieldNumber = 3;
  ::google::protobuf::uint32 telemetryrate() const;
  void set_telemetryrate(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoPackets.VehicleTelemetryCommand)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 vehicleid_;
  ::google::protobuf::uint32 telemetryselect_;
  ::google::protobuf::uint32 telemetryrate_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ProtoPacketsV2_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VehicleTerminationCommand : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoPackets.VehicleTerminationCommand) */ {
 public:
  VehicleTerminationCommand();
  virtual ~VehicleTerminationCommand();

  VehicleTerminationCommand(const VehicleTerminationCommand& from);

  inline VehicleTerminationCommand& operator=(const VehicleTerminationCommand& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VehicleTerminationCommand(VehicleTerminationCommand&& from) noexcept
    : VehicleTerminationCommand() {
    *this = ::std::move(from);
  }

  inline VehicleTerminationCommand& operator=(VehicleTerminationCommand&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VehicleTerminationCommand& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VehicleTerminationCommand* internal_default_instance() {
    return reinterpret_cast<const VehicleTerminationCommand*>(
               &_VehicleTerminationCommand_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(VehicleTerminationCommand* other);
  friend void swap(VehicleTerminationCommand& a, VehicleTerminationCommand& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VehicleTerminationCommand* New() const final {
    return CreateMaybeMessage<VehicleTerminationCommand>(NULL);
  }

  VehicleTerminationCommand* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VehicleTerminationCommand>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VehicleTerminationCommand& from);
  void MergeFrom(const VehicleTerminationCommand& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VehicleTerminationCommand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 vehicleid = 1;
  void clear_vehicleid();
  static const int kVehicleidFieldNumber = 1;
  ::google::protobuf::uint32 vehicleid() const;
  void set_vehicleid(::google::protobuf::uint32 value);

  // uint32 terminationmode = 2;
  void clear_terminationmode();
  static const int kTerminationmodeFieldNumber = 2;
  ::google::protobuf::uint32 terminationmode() const;
  void set_terminationmode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoPackets.VehicleTerminationCommand)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 vehicleid_;
  ::google::protobuf::uint32 terminationmode_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ProtoPacketsV2_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VehicleWaypointCommand : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoPackets.VehicleWaypointCommand) */ {
 public:
  VehicleWaypointCommand();
  virtual ~VehicleWaypointCommand();

  VehicleWaypointCommand(const VehicleWaypointCommand& from);

  inline VehicleWaypointCommand& operator=(const VehicleWaypointCommand& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VehicleWaypointCommand(VehicleWaypointCommand&& from) noexcept
    : VehicleWaypointCommand() {
    *this = ::std::move(from);
  }

  inline VehicleWaypointCommand& operator=(VehicleWaypointCommand&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VehicleWaypointCommand& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VehicleWaypointCommand* internal_default_instance() {
    return reinterpret_cast<const VehicleWaypointCommand*>(
               &_VehicleWaypointCommand_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(VehicleWaypointCommand* other);
  friend void swap(VehicleWaypointCommand& a, VehicleWaypointCommand& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VehicleWaypointCommand* New() const final {
    return CreateMaybeMessage<VehicleWaypointCommand>(NULL);
  }

  VehicleWaypointCommand* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VehicleWaypointCommand>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VehicleWaypointCommand& from);
  void MergeFrom(const VehicleWaypointCommand& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VehicleWaypointCommand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 vehicleid = 1;
  void clear_vehicleid();
  static const int kVehicleidFieldNumber = 1;
  ::google::protobuf::uint32 vehicleid() const;
  void set_vehicleid(::google::protobuf::uint32 value);

  // float longitude = 2;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 2;
  float longitude() const;
  void set_longitude(float value);

  // float latitude = 3;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 3;
  float latitude() const;
  void set_latitude(float value);

  // float altitude = 4;
  void clear_altitude();
  static const int kAltitudeFieldNumber = 4;
  float altitude() const;
  void set_altitude(float value);

  // @@protoc_insertion_point(class_scope:ProtoPackets.VehicleWaypointCommand)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 vehicleid_;
  float longitude_;
  float latitude_;
  float altitude_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ProtoPacketsV2_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Packet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoPackets.Packet) */ {
 public:
  Packet();
  virtual ~Packet();

  Packet(const Packet& from);

  inline Packet& operator=(const Packet& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Packet(Packet&& from) noexcept
    : Packet() {
    *this = ::std::move(from);
  }

  inline Packet& operator=(Packet&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Packet& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Packet* internal_default_instance() {
    return reinterpret_cast<const Packet*>(
               &_Packet_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(Packet* other);
  friend void swap(Packet& a, Packet& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Packet* New() const final {
    return CreateMaybeMessage<Packet>(NULL);
  }

  Packet* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Packet>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Packet& from);
  void MergeFrom(const Packet& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Packet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ProtoPackets.AirVehicleGroundRelativeState AirVehicleGroundRelativeState = 1;
  bool has_airvehiclegroundrelativestate() const;
  void clear_airvehiclegroundrelativestate();
  static const int kAirVehicleGroundRelativeStateFieldNumber = 1;
  private:
  const ::ProtoPackets::AirVehicleGroundRelativeState& _internal_airvehiclegroundrelativestate() const;
  public:
  const ::ProtoPackets::AirVehicleGroundRelativeState& airvehiclegroundrelativestate() const;
  ::ProtoPackets::AirVehicleGroundRelativeState* release_airvehiclegroundrelativestate();
  ::ProtoPackets::AirVehicleGroundRelativeState* mutable_airvehiclegroundrelativestate();
  void set_allocated_airvehiclegroundrelativestate(::ProtoPackets::AirVehicleGroundRelativeState* airvehiclegroundrelativestate);

  // .ProtoPackets.ArmCommand ArmCommand = 2;
  bool has_armcommand() const;
  void clear_armcommand();
  static const int kArmCommandFieldNumber = 2;
  private:
  const ::ProtoPackets::ArmCommand& _internal_armcommand() const;
  public:
  const ::ProtoPackets::ArmCommand& armcommand() const;
  ::ProtoPackets::ArmCommand* release_armcommand();
  ::ProtoPackets::ArmCommand* mutable_armcommand();
  void set_allocated_armcommand(::ProtoPackets::ArmCommand* armcommand);

  // .ProtoPackets.ArmPosition ArmPosition = 3;
  bool has_armposition() const;
  void clear_armposition();
  static const int kArmPositionFieldNumber = 3;
  private:
  const ::ProtoPackets::ArmPosition& _internal_armposition() const;
  public:
  const ::ProtoPackets::ArmPosition& armposition() const;
  ::ProtoPackets::ArmPosition* release_armposition();
  ::ProtoPackets::ArmPosition* mutable_armposition();
  void set_allocated_armposition(::ProtoPackets::ArmPosition* armposition);

  // .ProtoPackets.Battery Battery = 4;
  bool has_battery() const;
  void clear_battery();
  static const int kBatteryFieldNumber = 4;
  private:
  const ::ProtoPackets::Battery& _internal_battery() const;
  public:
  const ::ProtoPackets::Battery& battery() const;
  ::ProtoPackets::Battery* release_battery();
  ::ProtoPackets::Battery* mutable_battery();
  void set_allocated_battery(::ProtoPackets::Battery* battery);

  // .ProtoPackets.TargetAcknowledgement TargetAcknowledgement = 5;
  bool has_targetacknowledgement() const;
  void clear_targetacknowledgement();
  static const int kTargetAcknowledgementFieldNumber = 5;
  private:
  const ::ProtoPackets::TargetAcknowledgement& _internal_targetacknowledgement() const;
  public:
  const ::ProtoPackets::TargetAcknowledgement& targetacknowledgement() const;
  ::ProtoPackets::TargetAcknowledgement* release_targetacknowledgement();
  ::ProtoPackets::TargetAcknowledgement* mutable_targetacknowledgement();
  void set_allocated_targetacknowledgement(::ProtoPackets::TargetAcknowledgement* targetacknowledgement);

  // .ProtoPackets.TargetDesignationCommand TargetDesignationCommand = 6;
  bool has_targetdesignationcommand() const;
  void clear_targetdesignationcommand();
  static const int kTargetDesignationCommandFieldNumber = 6;
  private:
  const ::ProtoPackets::TargetDesignationCommand& _internal_targetdesignationcommand() const;
  public:
  const ::ProtoPackets::TargetDesignationCommand& targetdesignationcommand() const;
  ::ProtoPackets::TargetDesignationCommand* release_targetdesignationcommand();
  ::ProtoPackets::TargetDesignationCommand* mutable_targetdesignationcommand();
  void set_allocated_targetdesignationcommand(::ProtoPackets::TargetDesignationCommand* targetdesignationcommand);

  // .ProtoPackets.TargetStatus TargetStatus = 7;
  bool has_targetstatus() const;
  void clear_targetstatus();
  static const int kTargetStatusFieldNumber = 7;
  private:
  const ::ProtoPackets::TargetStatus& _internal_targetstatus() const;
  public:
  const ::ProtoPackets::TargetStatus& targetstatus() const;
  ::ProtoPackets::TargetStatus* release_targetstatus();
  ::ProtoPackets::TargetStatus* mutable_targetstatus();
  void set_allocated_targetstatus(::ProtoPackets::TargetStatus* targetstatus);

  // .ProtoPackets.VehicleAttitude VehicleAttitude = 8;
  bool has_vehicleattitude() const;
  void clear_vehicleattitude();
  static const int kVehicleAttitudeFieldNumber = 8;
  private:
  const ::ProtoPackets::VehicleAttitude& _internal_vehicleattitude() const;
  public:
  const ::ProtoPackets::VehicleAttitude& vehicleattitude() const;
  ::ProtoPackets::VehicleAttitude* release_vehicleattitude();
  ::ProtoPackets::VehicleAttitude* mutable_vehicleattitude();
  void set_allocated_vehicleattitude(::ProtoPackets::VehicleAttitude* vehicleattitude);

  // .ProtoPackets.VehicleAuthorizationReply VehicleAuthorizationReply = 9;
  bool has_vehicleauthorizationreply() const;
  void clear_vehicleauthorizationreply();
  static const int kVehicleAuthorizationReplyFieldNumber = 9;
  private:
  const ::ProtoPackets::VehicleAuthorizationReply& _internal_vehicleauthorizationreply() const;
  public:
  const ::ProtoPackets::VehicleAuthorizationReply& vehicleauthorizationreply() const;
  ::ProtoPackets::VehicleAuthorizationReply* release_vehicleauthorizationreply();
  ::ProtoPackets::VehicleAuthorizationReply* mutable_vehicleauthorizationreply();
  void set_allocated_vehicleauthorizationreply(::ProtoPackets::VehicleAuthorizationReply* vehicleauthorizationreply);

  // .ProtoPackets.VehicleAuthorizationRequest VehicleAuthorizationRequest = 10;
  bool has_vehicleauthorizationrequest() const;
  void clear_vehicleauthorizationrequest();
  static const int kVehicleAuthorizationRequestFieldNumber = 10;
  private:
  const ::ProtoPackets::VehicleAuthorizationRequest& _internal_vehicleauthorizationrequest() const;
  public:
  const ::ProtoPackets::VehicleAuthorizationRequest& vehicleauthorizationrequest() const;
  ::ProtoPackets::VehicleAuthorizationRequest* release_vehicleauthorizationrequest();
  ::ProtoPackets::VehicleAuthorizationRequest* mutable_vehicleauthorizationrequest();
  void set_allocated_vehicleauthorizationrequest(::ProtoPackets::VehicleAuthorizationRequest* vehicleauthorizationrequest);

  // .ProtoPackets.VehicleBodySensedState VehicleBodySensedState = 11;
  bool has_vehiclebodysensedstate() const;
  void clear_vehiclebodysensedstate();
  static const int kVehicleBodySensedStateFieldNumber = 11;
  private:
  const ::ProtoPackets::VehicleBodySensedState& _internal_vehiclebodysensedstate() const;
  public:
  const ::ProtoPackets::VehicleBodySensedState& vehiclebodysensedstate() const;
  ::ProtoPackets::VehicleBodySensedState* release_vehiclebodysensedstate();
  ::ProtoPackets::VehicleBodySensedState* mutable_vehiclebodysensedstate();
  void set_allocated_vehiclebodysensedstate(::ProtoPackets::VehicleBodySensedState* vehiclebodysensedstate);

  // .ProtoPackets.VehicleGlobalPosition VehicleGlobalPosition = 12;
  bool has_vehicleglobalposition() const;
  void clear_vehicleglobalposition();
  static const int kVehicleGlobalPositionFieldNumber = 12;
  private:
  const ::ProtoPackets::VehicleGlobalPosition& _internal_vehicleglobalposition() const;
  public:
  const ::ProtoPackets::VehicleGlobalPosition& vehicleglobalposition() const;
  ::ProtoPackets::VehicleGlobalPosition* release_vehicleglobalposition();
  ::ProtoPackets::VehicleGlobalPosition* mutable_vehicleglobalposition();
  void set_allocated_vehicleglobalposition(::ProtoPackets::VehicleGlobalPosition* vehicleglobalposition);

  // .ProtoPackets.VehicleIdentification VehicleIdentification = 13;
  bool has_vehicleidentification() const;
  void clear_vehicleidentification();
  static const int kVehicleIdentificationFieldNumber = 13;
  private:
  const ::ProtoPackets::VehicleIdentification& _internal_vehicleidentification() const;
  public:
  const ::ProtoPackets::VehicleIdentification& vehicleidentification() const;
  ::ProtoPackets::VehicleIdentification* release_vehicleidentification();
  ::ProtoPackets::VehicleIdentification* mutable_vehicleidentification();
  void set_allocated_vehicleidentification(::ProtoPackets::VehicleIdentification* vehicleidentification);

  // .ProtoPackets.VehicleInertialState VehicleInertialState = 14;
  bool has_vehicleinertialstate() const;
  void clear_vehicleinertialstate();
  static const int kVehicleInertialStateFieldNumber = 14;
  private:
  const ::ProtoPackets::VehicleInertialState& _internal_vehicleinertialstate() const;
  public:
  const ::ProtoPackets::VehicleInertialState& vehicleinertialstate() const;
  ::ProtoPackets::VehicleInertialState* release_vehicleinertialstate();
  ::ProtoPackets::VehicleInertialState* mutable_vehicleinertialstate();
  void set_allocated_vehicleinertialstate(::ProtoPackets::VehicleInertialState* vehicleinertialstate);

  // .ProtoPackets.VehicleModeCommand VehicleModeCommand = 15;
  bool has_vehiclemodecommand() const;
  void clear_vehiclemodecommand();
  static const int kVehicleModeCommandFieldNumber = 15;
  private:
  const ::ProtoPackets::VehicleModeCommand& _internal_vehiclemodecommand() const;
  public:
  const ::ProtoPackets::VehicleModeCommand& vehiclemodecommand() const;
  ::ProtoPackets::VehicleModeCommand* release_vehiclemodecommand();
  ::ProtoPackets::VehicleModeCommand* mutable_vehiclemodecommand();
  void set_allocated_vehiclemodecommand(::ProtoPackets::VehicleModeCommand* vehiclemodecommand);

  // .ProtoPackets.VehicleSystemStatus VehicleSystemStatus = 16;
  bool has_vehiclesystemstatus() const;
  void clear_vehiclesystemstatus();
  static const int kVehicleSystemStatusFieldNumber = 16;
  private:
  const ::ProtoPackets::VehicleSystemStatus& _internal_vehiclesystemstatus() const;
  public:
  const ::ProtoPackets::VehicleSystemStatus& vehiclesystemstatus() const;
  ::ProtoPackets::VehicleSystemStatus* release_vehiclesystemstatus();
  ::ProtoPackets::VehicleSystemStatus* mutable_vehiclesystemstatus();
  void set_allocated_vehiclesystemstatus(::ProtoPackets::VehicleSystemStatus* vehiclesystemstatus);

  // .ProtoPackets.VehicleTelemetryCommand VehicleTelemetryCommand = 17;
  bool has_vehicletelemetrycommand() const;
  void clear_vehicletelemetrycommand();
  static const int kVehicleTelemetryCommandFieldNumber = 17;
  private:
  const ::ProtoPackets::VehicleTelemetryCommand& _internal_vehicletelemetrycommand() const;
  public:
  const ::ProtoPackets::VehicleTelemetryCommand& vehicletelemetrycommand() const;
  ::ProtoPackets::VehicleTelemetryCommand* release_vehicletelemetrycommand();
  ::ProtoPackets::VehicleTelemetryCommand* mutable_vehicletelemetrycommand();
  void set_allocated_vehicletelemetrycommand(::ProtoPackets::VehicleTelemetryCommand* vehicletelemetrycommand);

  // .ProtoPackets.VehicleTerminationCommand VehicleTerminationCommand = 18;
  bool has_vehicleterminationcommand() const;
  void clear_vehicleterminationcommand();
  static const int kVehicleTerminationCommandFieldNumber = 18;
  private:
  const ::ProtoPackets::VehicleTerminationCommand& _internal_vehicleterminationcommand() const;
  public:
  const ::ProtoPackets::VehicleTerminationCommand& vehicleterminationcommand() const;
  ::ProtoPackets::VehicleTerminationCommand* release_vehicleterminationcommand();
  ::ProtoPackets::VehicleTerminationCommand* mutable_vehicleterminationcommand();
  void set_allocated_vehicleterminationcommand(::ProtoPackets::VehicleTerminationCommand* vehicleterminationcommand);

  // .ProtoPackets.VehicleWaypointCommand VehicleWaypointCommand = 19;
  bool has_vehiclewaypointcommand() const;
  void clear_vehiclewaypointcommand();
  static const int kVehicleWaypointCommandFieldNumber = 19;
  private:
  const ::ProtoPackets::VehicleWaypointCommand& _internal_vehiclewaypointcommand() const;
  public:
  const ::ProtoPackets::VehicleWaypointCommand& vehiclewaypointcommand() const;
  ::ProtoPackets::VehicleWaypointCommand* release_vehiclewaypointcommand();
  ::ProtoPackets::VehicleWaypointCommand* mutable_vehiclewaypointcommand();
  void set_allocated_vehiclewaypointcommand(::ProtoPackets::VehicleWaypointCommand* vehiclewaypointcommand);

  // @@protoc_insertion_point(class_scope:ProtoPackets.Packet)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ProtoPackets::AirVehicleGroundRelativeState* airvehiclegroundrelativestate_;
  ::ProtoPackets::ArmCommand* armcommand_;
  ::ProtoPackets::ArmPosition* armposition_;
  ::ProtoPackets::Battery* battery_;
  ::ProtoPackets::TargetAcknowledgement* targetacknowledgement_;
  ::ProtoPackets::TargetDesignationCommand* targetdesignationcommand_;
  ::ProtoPackets::TargetStatus* targetstatus_;
  ::ProtoPackets::VehicleAttitude* vehicleattitude_;
  ::ProtoPackets::VehicleAuthorizationReply* vehicleauthorizationreply_;
  ::ProtoPackets::VehicleAuthorizationRequest* vehicleauthorizationrequest_;
  ::ProtoPackets::VehicleBodySensedState* vehiclebodysensedstate_;
  ::ProtoPackets::VehicleGlobalPosition* vehicleglobalposition_;
  ::ProtoPackets::VehicleIdentification* vehicleidentification_;
  ::ProtoPackets::VehicleInertialState* vehicleinertialstate_;
  ::ProtoPackets::VehicleModeCommand* vehiclemodecommand_;
  ::ProtoPackets::VehicleSystemStatus* vehiclesystemstatus_;
  ::ProtoPackets::VehicleTelemetryCommand* vehicletelemetrycommand_;
  ::ProtoPackets::VehicleTerminationCommand* vehicleterminationcommand_;
  ::ProtoPackets::VehicleWaypointCommand* vehiclewaypointcommand_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ProtoPacketsV2_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AirVehicleGroundRelativeState

// uint32 vehicleid = 1;
inline void AirVehicleGroundRelativeState::clear_vehicleid() {
  vehicleid_ = 0u;
}
inline ::google::protobuf::uint32 AirVehicleGroundRelativeState::vehicleid() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.AirVehicleGroundRelativeState.vehicleid)
  return vehicleid_;
}
inline void AirVehicleGroundRelativeState::set_vehicleid(::google::protobuf::uint32 value) {
  
  vehicleid_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.AirVehicleGroundRelativeState.vehicleid)
}

// float angleofattack = 2;
inline void AirVehicleGroundRelativeState::clear_angleofattack() {
  angleofattack_ = 0;
}
inline float AirVehicleGroundRelativeState::angleofattack() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.AirVehicleGroundRelativeState.angleofattack)
  return angleofattack_;
}
inline void AirVehicleGroundRelativeState::set_angleofattack(float value) {
  
  angleofattack_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.AirVehicleGroundRelativeState.angleofattack)
}

// float angleofsideslip = 3;
inline void AirVehicleGroundRelativeState::clear_angleofsideslip() {
  angleofsideslip_ = 0;
}
inline float AirVehicleGroundRelativeState::angleofsideslip() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.AirVehicleGroundRelativeState.angleofsideslip)
  return angleofsideslip_;
}
inline void AirVehicleGroundRelativeState::set_angleofsideslip(float value) {
  
  angleofsideslip_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.AirVehicleGroundRelativeState.angleofsideslip)
}

// float trueairspeed = 4;
inline void AirVehicleGroundRelativeState::clear_trueairspeed() {
  trueairspeed_ = 0;
}
inline float AirVehicleGroundRelativeState::trueairspeed() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.AirVehicleGroundRelativeState.trueairspeed)
  return trueairspeed_;
}
inline void AirVehicleGroundRelativeState::set_trueairspeed(float value) {
  
  trueairspeed_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.AirVehicleGroundRelativeState.trueairspeed)
}

// float indicatedairspeed = 5;
inline void AirVehicleGroundRelativeState::clear_indicatedairspeed() {
  indicatedairspeed_ = 0;
}
inline float AirVehicleGroundRelativeState::indicatedairspeed() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.AirVehicleGroundRelativeState.indicatedairspeed)
  return indicatedairspeed_;
}
inline void AirVehicleGroundRelativeState::set_indicatedairspeed(float value) {
  
  indicatedairspeed_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.AirVehicleGroundRelativeState.indicatedairspeed)
}

// float northwindspeed = 6;
inline void AirVehicleGroundRelativeState::clear_northwindspeed() {
  northwindspeed_ = 0;
}
inline float AirVehicleGroundRelativeState::northwindspeed() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.AirVehicleGroundRelativeState.northwindspeed)
  return northwindspeed_;
}
inline void AirVehicleGroundRelativeState::set_northwindspeed(float value) {
  
  northwindspeed_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.AirVehicleGroundRelativeState.northwindspeed)
}

// float eastwindspeed = 7;
inline void AirVehicleGroundRelativeState::clear_eastwindspeed() {
  eastwindspeed_ = 0;
}
inline float AirVehicleGroundRelativeState::eastwindspeed() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.AirVehicleGroundRelativeState.eastwindspeed)
  return eastwindspeed_;
}
inline void AirVehicleGroundRelativeState::set_eastwindspeed(float value) {
  
  eastwindspeed_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.AirVehicleGroundRelativeState.eastwindspeed)
}

// float northgroundspeed = 8;
inline void AirVehicleGroundRelativeState::clear_northgroundspeed() {
  northgroundspeed_ = 0;
}
inline float AirVehicleGroundRelativeState::northgroundspeed() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.AirVehicleGroundRelativeState.northgroundspeed)
  return northgroundspeed_;
}
inline void AirVehicleGroundRelativeState::set_northgroundspeed(float value) {
  
  northgroundspeed_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.AirVehicleGroundRelativeState.northgroundspeed)
}

// float eastgroundspeed = 9;
inline void AirVehicleGroundRelativeState::clear_eastgroundspeed() {
  eastgroundspeed_ = 0;
}
inline float AirVehicleGroundRelativeState::eastgroundspeed() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.AirVehicleGroundRelativeState.eastgroundspeed)
  return eastgroundspeed_;
}
inline void AirVehicleGroundRelativeState::set_eastgroundspeed(float value) {
  
  eastgroundspeed_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.AirVehicleGroundRelativeState.eastgroundspeed)
}

// float barometricpressure = 10;
inline void AirVehicleGroundRelativeState::clear_barometricpressure() {
  barometricpressure_ = 0;
}
inline float AirVehicleGroundRelativeState::barometricpressure() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.AirVehicleGroundRelativeState.barometricpressure)
  return barometricpressure_;
}
inline void AirVehicleGroundRelativeState::set_barometricpressure(float value) {
  
  barometricpressure_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.AirVehicleGroundRelativeState.barometricpressure)
}

// float barometricaltitude = 11;
inline void AirVehicleGroundRelativeState::clear_barometricaltitude() {
  barometricaltitude_ = 0;
}
inline float AirVehicleGroundRelativeState::barometricaltitude() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.AirVehicleGroundRelativeState.barometricaltitude)
  return barometricaltitude_;
}
inline void AirVehicleGroundRelativeState::set_barometricaltitude(float value) {
  
  barometricaltitude_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.AirVehicleGroundRelativeState.barometricaltitude)
}

// -------------------------------------------------------------------

// ArmCommand

// uint32 id = 1;
inline void ArmCommand::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 ArmCommand::id() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.ArmCommand.id)
  return id_;
}
inline void ArmCommand::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.ArmCommand.id)
}

// int32 position = 2;
inline void ArmCommand::clear_position() {
  position_ = 0;
}
inline ::google::protobuf::int32 ArmCommand::position() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.ArmCommand.position)
  return position_;
}
inline void ArmCommand::set_position(::google::protobuf::int32 value) {
  
  position_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.ArmCommand.position)
}

// -------------------------------------------------------------------

// ArmPosition

// int32 position1 = 1;
inline void ArmPosition::clear_position1() {
  position1_ = 0;
}
inline ::google::protobuf::int32 ArmPosition::position1() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.ArmPosition.position1)
  return position1_;
}
inline void ArmPosition::set_position1(::google::protobuf::int32 value) {
  
  position1_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.ArmPosition.position1)
}

// int32 position2 = 2;
inline void ArmPosition::clear_position2() {
  position2_ = 0;
}
inline ::google::protobuf::int32 ArmPosition::position2() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.ArmPosition.position2)
  return position2_;
}
inline void ArmPosition::set_position2(::google::protobuf::int32 value) {
  
  position2_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.ArmPosition.position2)
}

// int32 position3 = 3;
inline void ArmPosition::clear_position3() {
  position3_ = 0;
}
inline ::google::protobuf::int32 ArmPosition::position3() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.ArmPosition.position3)
  return position3_;
}
inline void ArmPosition::set_position3(::google::protobuf::int32 value) {
  
  position3_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.ArmPosition.position3)
}

// int32 position4 = 4;
inline void ArmPosition::clear_position4() {
  position4_ = 0;
}
inline ::google::protobuf::int32 ArmPosition::position4() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.ArmPosition.position4)
  return position4_;
}
inline void ArmPosition::set_position4(::google::protobuf::int32 value) {
  
  position4_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.ArmPosition.position4)
}

// -------------------------------------------------------------------

// Battery

// uint32 batteryPercentage = 1;
inline void Battery::clear_batterypercentage() {
  batterypercentage_ = 0u;
}
inline ::google::protobuf::uint32 Battery::batterypercentage() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.Battery.batteryPercentage)
  return batterypercentage_;
}
inline void Battery::set_batterypercentage(::google::protobuf::uint32 value) {
  
  batterypercentage_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.Battery.batteryPercentage)
}

// -------------------------------------------------------------------

// TargetAcknowledgement

// uint32 targetstatus = 1;
inline void TargetAcknowledgement::clear_targetstatus() {
  targetstatus_ = 0u;
}
inline ::google::protobuf::uint32 TargetAcknowledgement::targetstatus() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.TargetAcknowledgement.targetstatus)
  return targetstatus_;
}
inline void TargetAcknowledgement::set_targetstatus(::google::protobuf::uint32 value) {
  
  targetstatus_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.TargetAcknowledgement.targetstatus)
}

// -------------------------------------------------------------------

// TargetDesignationCommand

// uint32 vehicleid = 1;
inline void TargetDesignationCommand::clear_vehicleid() {
  vehicleid_ = 0u;
}
inline ::google::protobuf::uint32 TargetDesignationCommand::vehicleid() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.TargetDesignationCommand.vehicleid)
  return vehicleid_;
}
inline void TargetDesignationCommand::set_vehicleid(::google::protobuf::uint32 value) {
  
  vehicleid_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.TargetDesignationCommand.vehicleid)
}

// uint32 payloadid = 2;
inline void TargetDesignationCommand::clear_payloadid() {
  payloadid_ = 0u;
}
inline ::google::protobuf::uint32 TargetDesignationCommand::payloadid() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.TargetDesignationCommand.payloadid)
  return payloadid_;
}
inline void TargetDesignationCommand::set_payloadid(::google::protobuf::uint32 value) {
  
  payloadid_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.TargetDesignationCommand.payloadid)
}

// uint32 targetid = 3;
inline void TargetDesignationCommand::clear_targetid() {
  targetid_ = 0u;
}
inline ::google::protobuf::uint32 TargetDesignationCommand::targetid() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.TargetDesignationCommand.targetid)
  return targetid_;
}
inline void TargetDesignationCommand::set_targetid(::google::protobuf::uint32 value) {
  
  targetid_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.TargetDesignationCommand.targetid)
}

// uint32 targettype = 4;
inline void TargetDesignationCommand::clear_targettype() {
  targettype_ = 0u;
}
inline ::google::protobuf::uint32 TargetDesignationCommand::targettype() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.TargetDesignationCommand.targettype)
  return targettype_;
}
inline void TargetDesignationCommand::set_targettype(::google::protobuf::uint32 value) {
  
  targettype_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.TargetDesignationCommand.targettype)
}

// float longitude = 5;
inline void TargetDesignationCommand::clear_longitude() {
  longitude_ = 0;
}
inline float TargetDesignationCommand::longitude() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.TargetDesignationCommand.longitude)
  return longitude_;
}
inline void TargetDesignationCommand::set_longitude(float value) {
  
  longitude_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.TargetDesignationCommand.longitude)
}

// float latitude = 6;
inline void TargetDesignationCommand::clear_latitude() {
  latitude_ = 0;
}
inline float TargetDesignationCommand::latitude() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.TargetDesignationCommand.latitude)
  return latitude_;
}
inline void TargetDesignationCommand::set_latitude(float value) {
  
  latitude_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.TargetDesignationCommand.latitude)
}

// float altitude = 7;
inline void TargetDesignationCommand::clear_altitude() {
  altitude_ = 0;
}
inline float TargetDesignationCommand::altitude() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.TargetDesignationCommand.altitude)
  return altitude_;
}
inline void TargetDesignationCommand::set_altitude(float value) {
  
  altitude_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.TargetDesignationCommand.altitude)
}

// -------------------------------------------------------------------

// TargetStatus

// double targetradius = 1;
inline void TargetStatus::clear_targetradius() {
  targetradius_ = 0;
}
inline double TargetStatus::targetradius() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.TargetStatus.targetradius)
  return targetradius_;
}
inline void TargetStatus::set_targetradius(double value) {
  
  targetradius_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.TargetStatus.targetradius)
}

// double targetangle = 2;
inline void TargetStatus::clear_targetangle() {
  targetangle_ = 0;
}
inline double TargetStatus::targetangle() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.TargetStatus.targetangle)
  return targetangle_;
}
inline void TargetStatus::set_targetangle(double value) {
  
  targetangle_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.TargetStatus.targetangle)
}

// double targetaltitude = 3;
inline void TargetStatus::clear_targetaltitude() {
  targetaltitude_ = 0;
}
inline double TargetStatus::targetaltitude() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.TargetStatus.targetaltitude)
  return targetaltitude_;
}
inline void TargetStatus::set_targetaltitude(double value) {
  
  targetaltitude_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.TargetStatus.targetaltitude)
}

// -------------------------------------------------------------------

// VehicleAttitude

// uint32 vehicleid = 1;
inline void VehicleAttitude::clear_vehicleid() {
  vehicleid_ = 0u;
}
inline ::google::protobuf::uint32 VehicleAttitude::vehicleid() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleAttitude.vehicleid)
  return vehicleid_;
}
inline void VehicleAttitude::set_vehicleid(::google::protobuf::uint32 value) {
  
  vehicleid_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleAttitude.vehicleid)
}

// float roll = 2;
inline void VehicleAttitude::clear_roll() {
  roll_ = 0;
}
inline float VehicleAttitude::roll() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleAttitude.roll)
  return roll_;
}
inline void VehicleAttitude::set_roll(float value) {
  
  roll_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleAttitude.roll)
}

// float pitch = 3;
inline void VehicleAttitude::clear_pitch() {
  pitch_ = 0;
}
inline float VehicleAttitude::pitch() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleAttitude.pitch)
  return pitch_;
}
inline void VehicleAttitude::set_pitch(float value) {
  
  pitch_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleAttitude.pitch)
}

// float yaw = 4;
inline void VehicleAttitude::clear_yaw() {
  yaw_ = 0;
}
inline float VehicleAttitude::yaw() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleAttitude.yaw)
  return yaw_;
}
inline void VehicleAttitude::set_yaw(float value) {
  
  yaw_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleAttitude.yaw)
}

// -------------------------------------------------------------------

// VehicleAuthorizationReply

// uint32 vehicleid = 1;
inline void VehicleAuthorizationReply::clear_vehicleid() {
  vehicleid_ = 0u;
}
inline ::google::protobuf::uint32 VehicleAuthorizationReply::vehicleid() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleAuthorizationReply.vehicleid)
  return vehicleid_;
}
inline void VehicleAuthorizationReply::set_vehicleid(::google::protobuf::uint32 value) {
  
  vehicleid_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleAuthorizationReply.vehicleid)
}

// uint32 vehicletype = 2;
inline void VehicleAuthorizationReply::clear_vehicletype() {
  vehicletype_ = 0u;
}
inline ::google::protobuf::uint32 VehicleAuthorizationReply::vehicletype() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleAuthorizationReply.vehicletype)
  return vehicletype_;
}
inline void VehicleAuthorizationReply::set_vehicletype(::google::protobuf::uint32 value) {
  
  vehicletype_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleAuthorizationReply.vehicletype)
}

// uint32 authorizedservices = 3;
inline void VehicleAuthorizationReply::clear_authorizedservices() {
  authorizedservices_ = 0u;
}
inline ::google::protobuf::uint32 VehicleAuthorizationReply::authorizedservices() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleAuthorizationReply.authorizedservices)
  return authorizedservices_;
}
inline void VehicleAuthorizationReply::set_authorizedservices(::google::protobuf::uint32 value) {
  
  authorizedservices_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleAuthorizationReply.authorizedservices)
}

// uint32 grantedservices = 4;
inline void VehicleAuthorizationReply::clear_grantedservices() {
  grantedservices_ = 0u;
}
inline ::google::protobuf::uint32 VehicleAuthorizationReply::grantedservices() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleAuthorizationReply.grantedservices)
  return grantedservices_;
}
inline void VehicleAuthorizationReply::set_grantedservices(::google::protobuf::uint32 value) {
  
  grantedservices_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleAuthorizationReply.grantedservices)
}

// -------------------------------------------------------------------

// VehicleAuthorizationRequest

// uint32 vehicleid = 1;
inline void VehicleAuthorizationRequest::clear_vehicleid() {
  vehicleid_ = 0u;
}
inline ::google::protobuf::uint32 VehicleAuthorizationRequest::vehicleid() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleAuthorizationRequest.vehicleid)
  return vehicleid_;
}
inline void VehicleAuthorizationRequest::set_vehicleid(::google::protobuf::uint32 value) {
  
  vehicleid_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleAuthorizationRequest.vehicleid)
}

// uint32 vehicletype = 2;
inline void VehicleAuthorizationRequest::clear_vehicletype() {
  vehicletype_ = 0u;
}
inline ::google::protobuf::uint32 VehicleAuthorizationRequest::vehicletype() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleAuthorizationRequest.vehicletype)
  return vehicletype_;
}
inline void VehicleAuthorizationRequest::set_vehicletype(::google::protobuf::uint32 value) {
  
  vehicletype_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleAuthorizationRequest.vehicletype)
}

// uint32 authorizedservices = 3;
inline void VehicleAuthorizationRequest::clear_authorizedservices() {
  authorizedservices_ = 0u;
}
inline ::google::protobuf::uint32 VehicleAuthorizationRequest::authorizedservices() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleAuthorizationRequest.authorizedservices)
  return authorizedservices_;
}
inline void VehicleAuthorizationRequest::set_authorizedservices(::google::protobuf::uint32 value) {
  
  authorizedservices_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleAuthorizationRequest.authorizedservices)
}

// uint32 grantedservices = 4;
inline void VehicleAuthorizationRequest::clear_grantedservices() {
  grantedservices_ = 0u;
}
inline ::google::protobuf::uint32 VehicleAuthorizationRequest::grantedservices() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleAuthorizationRequest.grantedservices)
  return grantedservices_;
}
inline void VehicleAuthorizationRequest::set_grantedservices(::google::protobuf::uint32 value) {
  
  grantedservices_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleAuthorizationRequest.grantedservices)
}

// -------------------------------------------------------------------

// VehicleBodySensedState

// uint32 vehicleid = 1;
inline void VehicleBodySensedState::clear_vehicleid() {
  vehicleid_ = 0u;
}
inline ::google::protobuf::uint32 VehicleBodySensedState::vehicleid() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleBodySensedState.vehicleid)
  return vehicleid_;
}
inline void VehicleBodySensedState::set_vehicleid(::google::protobuf::uint32 value) {
  
  vehicleid_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleBodySensedState.vehicleid)
}

// float xaccel = 2;
inline void VehicleBodySensedState::clear_xaccel() {
  xaccel_ = 0;
}
inline float VehicleBodySensedState::xaccel() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleBodySensedState.xaccel)
  return xaccel_;
}
inline void VehicleBodySensedState::set_xaccel(float value) {
  
  xaccel_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleBodySensedState.xaccel)
}

// float yaccel = 3;
inline void VehicleBodySensedState::clear_yaccel() {
  yaccel_ = 0;
}
inline float VehicleBodySensedState::yaccel() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleBodySensedState.yaccel)
  return yaccel_;
}
inline void VehicleBodySensedState::set_yaccel(float value) {
  
  yaccel_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleBodySensedState.yaccel)
}

// float zaccel = 4;
inline void VehicleBodySensedState::clear_zaccel() {
  zaccel_ = 0;
}
inline float VehicleBodySensedState::zaccel() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleBodySensedState.zaccel)
  return zaccel_;
}
inline void VehicleBodySensedState::set_zaccel(float value) {
  
  zaccel_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleBodySensedState.zaccel)
}

// float rollrate = 5;
inline void VehicleBodySensedState::clear_rollrate() {
  rollrate_ = 0;
}
inline float VehicleBodySensedState::rollrate() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleBodySensedState.rollrate)
  return rollrate_;
}
inline void VehicleBodySensedState::set_rollrate(float value) {
  
  rollrate_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleBodySensedState.rollrate)
}

// float pitchrate = 6;
inline void VehicleBodySensedState::clear_pitchrate() {
  pitchrate_ = 0;
}
inline float VehicleBodySensedState::pitchrate() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleBodySensedState.pitchrate)
  return pitchrate_;
}
inline void VehicleBodySensedState::set_pitchrate(float value) {
  
  pitchrate_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleBodySensedState.pitchrate)
}

// float yawrate = 7;
inline void VehicleBodySensedState::clear_yawrate() {
  yawrate_ = 0;
}
inline float VehicleBodySensedState::yawrate() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleBodySensedState.yawrate)
  return yawrate_;
}
inline void VehicleBodySensedState::set_yawrate(float value) {
  
  yawrate_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleBodySensedState.yawrate)
}

// -------------------------------------------------------------------

// VehicleGlobalPosition

// uint32 vehicleid = 1;
inline void VehicleGlobalPosition::clear_vehicleid() {
  vehicleid_ = 0u;
}
inline ::google::protobuf::uint32 VehicleGlobalPosition::vehicleid() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleGlobalPosition.vehicleid)
  return vehicleid_;
}
inline void VehicleGlobalPosition::set_vehicleid(::google::protobuf::uint32 value) {
  
  vehicleid_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleGlobalPosition.vehicleid)
}

// float longitude = 2;
inline void VehicleGlobalPosition::clear_longitude() {
  longitude_ = 0;
}
inline float VehicleGlobalPosition::longitude() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleGlobalPosition.longitude)
  return longitude_;
}
inline void VehicleGlobalPosition::set_longitude(float value) {
  
  longitude_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleGlobalPosition.longitude)
}

// float latitude = 3;
inline void VehicleGlobalPosition::clear_latitude() {
  latitude_ = 0;
}
inline float VehicleGlobalPosition::latitude() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleGlobalPosition.latitude)
  return latitude_;
}
inline void VehicleGlobalPosition::set_latitude(float value) {
  
  latitude_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleGlobalPosition.latitude)
}

// float altitude = 4;
inline void VehicleGlobalPosition::clear_altitude() {
  altitude_ = 0;
}
inline float VehicleGlobalPosition::altitude() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleGlobalPosition.altitude)
  return altitude_;
}
inline void VehicleGlobalPosition::set_altitude(float value) {
  
  altitude_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleGlobalPosition.altitude)
}

// float xspeed = 5;
inline void VehicleGlobalPosition::clear_xspeed() {
  xspeed_ = 0;
}
inline float VehicleGlobalPosition::xspeed() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleGlobalPosition.xspeed)
  return xspeed_;
}
inline void VehicleGlobalPosition::set_xspeed(float value) {
  
  xspeed_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleGlobalPosition.xspeed)
}

// float yspeed = 6;
inline void VehicleGlobalPosition::clear_yspeed() {
  yspeed_ = 0;
}
inline float VehicleGlobalPosition::yspeed() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleGlobalPosition.yspeed)
  return yspeed_;
}
inline void VehicleGlobalPosition::set_yspeed(float value) {
  
  yspeed_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleGlobalPosition.yspeed)
}

// float zspeed = 7;
inline void VehicleGlobalPosition::clear_zspeed() {
  zspeed_ = 0;
}
inline float VehicleGlobalPosition::zspeed() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleGlobalPosition.zspeed)
  return zspeed_;
}
inline void VehicleGlobalPosition::set_zspeed(float value) {
  
  zspeed_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleGlobalPosition.zspeed)
}

// -------------------------------------------------------------------

// VehicleIdentification

// uint32 vehicleid = 1;
inline void VehicleIdentification::clear_vehicleid() {
  vehicleid_ = 0u;
}
inline ::google::protobuf::uint32 VehicleIdentification::vehicleid() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleIdentification.vehicleid)
  return vehicleid_;
}
inline void VehicleIdentification::set_vehicleid(::google::protobuf::uint32 value) {
  
  vehicleid_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleIdentification.vehicleid)
}

// uint32 vehicletype = 2;
inline void VehicleIdentification::clear_vehicletype() {
  vehicletype_ = 0u;
}
inline ::google::protobuf::uint32 VehicleIdentification::vehicletype() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleIdentification.vehicletype)
  return vehicletype_;
}
inline void VehicleIdentification::set_vehicletype(::google::protobuf::uint32 value) {
  
  vehicletype_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleIdentification.vehicletype)
}

// -------------------------------------------------------------------

// VehicleInertialState

// uint32 vehicleid = 1;
inline void VehicleInertialState::clear_vehicleid() {
  vehicleid_ = 0u;
}
inline ::google::protobuf::uint32 VehicleInertialState::vehicleid() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleInertialState.vehicleid)
  return vehicleid_;
}
inline void VehicleInertialState::set_vehicleid(::google::protobuf::uint32 value) {
  
  vehicleid_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleInertialState.vehicleid)
}

// float longitude = 2;
inline void VehicleInertialState::clear_longitude() {
  longitude_ = 0;
}
inline float VehicleInertialState::longitude() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleInertialState.longitude)
  return longitude_;
}
inline void VehicleInertialState::set_longitude(float value) {
  
  longitude_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleInertialState.longitude)
}

// float latitude = 3;
inline void VehicleInertialState::clear_latitude() {
  latitude_ = 0;
}
inline float VehicleInertialState::latitude() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleInertialState.latitude)
  return latitude_;
}
inline void VehicleInertialState::set_latitude(float value) {
  
  latitude_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleInertialState.latitude)
}

// float altitude = 4;
inline void VehicleInertialState::clear_altitude() {
  altitude_ = 0;
}
inline float VehicleInertialState::altitude() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleInertialState.altitude)
  return altitude_;
}
inline void VehicleInertialState::set_altitude(float value) {
  
  altitude_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleInertialState.altitude)
}

// float roll = 5;
inline void VehicleInertialState::clear_roll() {
  roll_ = 0;
}
inline float VehicleInertialState::roll() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleInertialState.roll)
  return roll_;
}
inline void VehicleInertialState::set_roll(float value) {
  
  roll_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleInertialState.roll)
}

// float pitch = 6;
inline void VehicleInertialState::clear_pitch() {
  pitch_ = 0;
}
inline float VehicleInertialState::pitch() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleInertialState.pitch)
  return pitch_;
}
inline void VehicleInertialState::set_pitch(float value) {
  
  pitch_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleInertialState.pitch)
}

// float heading = 7;
inline void VehicleInertialState::clear_heading() {
  heading_ = 0;
}
inline float VehicleInertialState::heading() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleInertialState.heading)
  return heading_;
}
inline void VehicleInertialState::set_heading(float value) {
  
  heading_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleInertialState.heading)
}

// float northspeed = 8;
inline void VehicleInertialState::clear_northspeed() {
  northspeed_ = 0;
}
inline float VehicleInertialState::northspeed() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleInertialState.northspeed)
  return northspeed_;
}
inline void VehicleInertialState::set_northspeed(float value) {
  
  northspeed_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleInertialState.northspeed)
}

// float eastspeed = 9;
inline void VehicleInertialState::clear_eastspeed() {
  eastspeed_ = 0;
}
inline float VehicleInertialState::eastspeed() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleInertialState.eastspeed)
  return eastspeed_;
}
inline void VehicleInertialState::set_eastspeed(float value) {
  
  eastspeed_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleInertialState.eastspeed)
}

// float verticalspeed = 10;
inline void VehicleInertialState::clear_verticalspeed() {
  verticalspeed_ = 0;
}
inline float VehicleInertialState::verticalspeed() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleInertialState.verticalspeed)
  return verticalspeed_;
}
inline void VehicleInertialState::set_verticalspeed(float value) {
  
  verticalspeed_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleInertialState.verticalspeed)
}

// float rollrate = 11;
inline void VehicleInertialState::clear_rollrate() {
  rollrate_ = 0;
}
inline float VehicleInertialState::rollrate() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleInertialState.rollrate)
  return rollrate_;
}
inline void VehicleInertialState::set_rollrate(float value) {
  
  rollrate_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleInertialState.rollrate)
}

// float pitchrate = 12;
inline void VehicleInertialState::clear_pitchrate() {
  pitchrate_ = 0;
}
inline float VehicleInertialState::pitchrate() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleInertialState.pitchrate)
  return pitchrate_;
}
inline void VehicleInertialState::set_pitchrate(float value) {
  
  pitchrate_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleInertialState.pitchrate)
}

// float yawrate = 13;
inline void VehicleInertialState::clear_yawrate() {
  yawrate_ = 0;
}
inline float VehicleInertialState::yawrate() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleInertialState.yawrate)
  return yawrate_;
}
inline void VehicleInertialState::set_yawrate(float value) {
  
  yawrate_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleInertialState.yawrate)
}

// float northaccel = 14;
inline void VehicleInertialState::clear_northaccel() {
  northaccel_ = 0;
}
inline float VehicleInertialState::northaccel() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleInertialState.northaccel)
  return northaccel_;
}
inline void VehicleInertialState::set_northaccel(float value) {
  
  northaccel_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleInertialState.northaccel)
}

// float eastaccel = 15;
inline void VehicleInertialState::clear_eastaccel() {
  eastaccel_ = 0;
}
inline float VehicleInertialState::eastaccel() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleInertialState.eastaccel)
  return eastaccel_;
}
inline void VehicleInertialState::set_eastaccel(float value) {
  
  eastaccel_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleInertialState.eastaccel)
}

// float verticalaccel = 16;
inline void VehicleInertialState::clear_verticalaccel() {
  verticalaccel_ = 0;
}
inline float VehicleInertialState::verticalaccel() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleInertialState.verticalaccel)
  return verticalaccel_;
}
inline void VehicleInertialState::set_verticalaccel(float value) {
  
  verticalaccel_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleInertialState.verticalaccel)
}

// -------------------------------------------------------------------

// VehicleModeCommand

// uint32 vehicleid = 1;
inline void VehicleModeCommand::clear_vehicleid() {
  vehicleid_ = 0u;
}
inline ::google::protobuf::uint32 VehicleModeCommand::vehicleid() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleModeCommand.vehicleid)
  return vehicleid_;
}
inline void VehicleModeCommand::set_vehicleid(::google::protobuf::uint32 value) {
  
  vehicleid_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleModeCommand.vehicleid)
}

// uint32 vehiclemode = 2;
inline void VehicleModeCommand::clear_vehiclemode() {
  vehiclemode_ = 0u;
}
inline ::google::protobuf::uint32 VehicleModeCommand::vehiclemode() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleModeCommand.vehiclemode)
  return vehiclemode_;
}
inline void VehicleModeCommand::set_vehiclemode(::google::protobuf::uint32 value) {
  
  vehiclemode_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleModeCommand.vehiclemode)
}

// -------------------------------------------------------------------

// VehicleSystemStatus

// uint32 vehicleid = 1;
inline void VehicleSystemStatus::clear_vehicleid() {
  vehicleid_ = 0u;
}
inline ::google::protobuf::uint32 VehicleSystemStatus::vehicleid() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleSystemStatus.vehicleid)
  return vehicleid_;
}
inline void VehicleSystemStatus::set_vehicleid(::google::protobuf::uint32 value) {
  
  vehicleid_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleSystemStatus.vehicleid)
}

// uint32 vehiclemode = 2;
inline void VehicleSystemStatus::clear_vehiclemode() {
  vehiclemode_ = 0u;
}
inline ::google::protobuf::uint32 VehicleSystemStatus::vehiclemode() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleSystemStatus.vehiclemode)
  return vehiclemode_;
}
inline void VehicleSystemStatus::set_vehiclemode(::google::protobuf::uint32 value) {
  
  vehiclemode_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleSystemStatus.vehiclemode)
}

// uint32 vehiclestate = 3;
inline void VehicleSystemStatus::clear_vehiclestate() {
  vehiclestate_ = 0u;
}
inline ::google::protobuf::uint32 VehicleSystemStatus::vehiclestate() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleSystemStatus.vehiclestate)
  return vehiclestate_;
}
inline void VehicleSystemStatus::set_vehiclestate(::google::protobuf::uint32 value) {
  
  vehiclestate_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleSystemStatus.vehiclestate)
}

// -------------------------------------------------------------------

// VehicleTelemetryCommand

// uint32 vehicleid = 1;
inline void VehicleTelemetryCommand::clear_vehicleid() {
  vehicleid_ = 0u;
}
inline ::google::protobuf::uint32 VehicleTelemetryCommand::vehicleid() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleTelemetryCommand.vehicleid)
  return vehicleid_;
}
inline void VehicleTelemetryCommand::set_vehicleid(::google::protobuf::uint32 value) {
  
  vehicleid_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleTelemetryCommand.vehicleid)
}

// uint32 telemetryselect = 2;
inline void VehicleTelemetryCommand::clear_telemetryselect() {
  telemetryselect_ = 0u;
}
inline ::google::protobuf::uint32 VehicleTelemetryCommand::telemetryselect() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleTelemetryCommand.telemetryselect)
  return telemetryselect_;
}
inline void VehicleTelemetryCommand::set_telemetryselect(::google::protobuf::uint32 value) {
  
  telemetryselect_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleTelemetryCommand.telemetryselect)
}

// uint32 telemetryrate = 3;
inline void VehicleTelemetryCommand::clear_telemetryrate() {
  telemetryrate_ = 0u;
}
inline ::google::protobuf::uint32 VehicleTelemetryCommand::telemetryrate() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleTelemetryCommand.telemetryrate)
  return telemetryrate_;
}
inline void VehicleTelemetryCommand::set_telemetryrate(::google::protobuf::uint32 value) {
  
  telemetryrate_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleTelemetryCommand.telemetryrate)
}

// -------------------------------------------------------------------

// VehicleTerminationCommand

// uint32 vehicleid = 1;
inline void VehicleTerminationCommand::clear_vehicleid() {
  vehicleid_ = 0u;
}
inline ::google::protobuf::uint32 VehicleTerminationCommand::vehicleid() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleTerminationCommand.vehicleid)
  return vehicleid_;
}
inline void VehicleTerminationCommand::set_vehicleid(::google::protobuf::uint32 value) {
  
  vehicleid_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleTerminationCommand.vehicleid)
}

// uint32 terminationmode = 2;
inline void VehicleTerminationCommand::clear_terminationmode() {
  terminationmode_ = 0u;
}
inline ::google::protobuf::uint32 VehicleTerminationCommand::terminationmode() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleTerminationCommand.terminationmode)
  return terminationmode_;
}
inline void VehicleTerminationCommand::set_terminationmode(::google::protobuf::uint32 value) {
  
  terminationmode_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleTerminationCommand.terminationmode)
}

// -------------------------------------------------------------------

// VehicleWaypointCommand

// uint32 vehicleid = 1;
inline void VehicleWaypointCommand::clear_vehicleid() {
  vehicleid_ = 0u;
}
inline ::google::protobuf::uint32 VehicleWaypointCommand::vehicleid() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleWaypointCommand.vehicleid)
  return vehicleid_;
}
inline void VehicleWaypointCommand::set_vehicleid(::google::protobuf::uint32 value) {
  
  vehicleid_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleWaypointCommand.vehicleid)
}

// float longitude = 2;
inline void VehicleWaypointCommand::clear_longitude() {
  longitude_ = 0;
}
inline float VehicleWaypointCommand::longitude() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleWaypointCommand.longitude)
  return longitude_;
}
inline void VehicleWaypointCommand::set_longitude(float value) {
  
  longitude_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleWaypointCommand.longitude)
}

// float latitude = 3;
inline void VehicleWaypointCommand::clear_latitude() {
  latitude_ = 0;
}
inline float VehicleWaypointCommand::latitude() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleWaypointCommand.latitude)
  return latitude_;
}
inline void VehicleWaypointCommand::set_latitude(float value) {
  
  latitude_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleWaypointCommand.latitude)
}

// float altitude = 4;
inline void VehicleWaypointCommand::clear_altitude() {
  altitude_ = 0;
}
inline float VehicleWaypointCommand::altitude() const {
  // @@protoc_insertion_point(field_get:ProtoPackets.VehicleWaypointCommand.altitude)
  return altitude_;
}
inline void VehicleWaypointCommand::set_altitude(float value) {
  
  altitude_ = value;
  // @@protoc_insertion_point(field_set:ProtoPackets.VehicleWaypointCommand.altitude)
}

// -------------------------------------------------------------------

// Packet

// .ProtoPackets.AirVehicleGroundRelativeState AirVehicleGroundRelativeState = 1;
inline bool Packet::has_airvehiclegroundrelativestate() const {
  return this != internal_default_instance() && airvehiclegroundrelativestate_ != NULL;
}
inline void Packet::clear_airvehiclegroundrelativestate() {
  if (GetArenaNoVirtual() == NULL && airvehiclegroundrelativestate_ != NULL) {
    delete airvehiclegroundrelativestate_;
  }
  airvehiclegroundrelativestate_ = NULL;
}
inline const ::ProtoPackets::AirVehicleGroundRelativeState& Packet::_internal_airvehiclegroundrelativestate() const {
  return *airvehiclegroundrelativestate_;
}
inline const ::ProtoPackets::AirVehicleGroundRelativeState& Packet::airvehiclegroundrelativestate() const {
  const ::ProtoPackets::AirVehicleGroundRelativeState* p = airvehiclegroundrelativestate_;
  // @@protoc_insertion_point(field_get:ProtoPackets.Packet.AirVehicleGroundRelativeState)
  return p != NULL ? *p : *reinterpret_cast<const ::ProtoPackets::AirVehicleGroundRelativeState*>(
      &::ProtoPackets::_AirVehicleGroundRelativeState_default_instance_);
}
inline ::ProtoPackets::AirVehicleGroundRelativeState* Packet::release_airvehiclegroundrelativestate() {
  // @@protoc_insertion_point(field_release:ProtoPackets.Packet.AirVehicleGroundRelativeState)
  
  ::ProtoPackets::AirVehicleGroundRelativeState* temp = airvehiclegroundrelativestate_;
  airvehiclegroundrelativestate_ = NULL;
  return temp;
}
inline ::ProtoPackets::AirVehicleGroundRelativeState* Packet::mutable_airvehiclegroundrelativestate() {
  
  if (airvehiclegroundrelativestate_ == NULL) {
    auto* p = CreateMaybeMessage<::ProtoPackets::AirVehicleGroundRelativeState>(GetArenaNoVirtual());
    airvehiclegroundrelativestate_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ProtoPackets.Packet.AirVehicleGroundRelativeState)
  return airvehiclegroundrelativestate_;
}
inline void Packet::set_allocated_airvehiclegroundrelativestate(::ProtoPackets::AirVehicleGroundRelativeState* airvehiclegroundrelativestate) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete airvehiclegroundrelativestate_;
  }
  if (airvehiclegroundrelativestate) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      airvehiclegroundrelativestate = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, airvehiclegroundrelativestate, submessage_arena);
    }
    
  } else {
    
  }
  airvehiclegroundrelativestate_ = airvehiclegroundrelativestate;
  // @@protoc_insertion_point(field_set_allocated:ProtoPackets.Packet.AirVehicleGroundRelativeState)
}

// .ProtoPackets.ArmCommand ArmCommand = 2;
inline bool Packet::has_armcommand() const {
  return this != internal_default_instance() && armcommand_ != NULL;
}
inline void Packet::clear_armcommand() {
  if (GetArenaNoVirtual() == NULL && armcommand_ != NULL) {
    delete armcommand_;
  }
  armcommand_ = NULL;
}
inline const ::ProtoPackets::ArmCommand& Packet::_internal_armcommand() const {
  return *armcommand_;
}
inline const ::ProtoPackets::ArmCommand& Packet::armcommand() const {
  const ::ProtoPackets::ArmCommand* p = armcommand_;
  // @@protoc_insertion_point(field_get:ProtoPackets.Packet.ArmCommand)
  return p != NULL ? *p : *reinterpret_cast<const ::ProtoPackets::ArmCommand*>(
      &::ProtoPackets::_ArmCommand_default_instance_);
}
inline ::ProtoPackets::ArmCommand* Packet::release_armcommand() {
  // @@protoc_insertion_point(field_release:ProtoPackets.Packet.ArmCommand)
  
  ::ProtoPackets::ArmCommand* temp = armcommand_;
  armcommand_ = NULL;
  return temp;
}
inline ::ProtoPackets::ArmCommand* Packet::mutable_armcommand() {
  
  if (armcommand_ == NULL) {
    auto* p = CreateMaybeMessage<::ProtoPackets::ArmCommand>(GetArenaNoVirtual());
    armcommand_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ProtoPackets.Packet.ArmCommand)
  return armcommand_;
}
inline void Packet::set_allocated_armcommand(::ProtoPackets::ArmCommand* armcommand) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete armcommand_;
  }
  if (armcommand) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      armcommand = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, armcommand, submessage_arena);
    }
    
  } else {
    
  }
  armcommand_ = armcommand;
  // @@protoc_insertion_point(field_set_allocated:ProtoPackets.Packet.ArmCommand)
}

// .ProtoPackets.ArmPosition ArmPosition = 3;
inline bool Packet::has_armposition() const {
  return this != internal_default_instance() && armposition_ != NULL;
}
inline void Packet::clear_armposition() {
  if (GetArenaNoVirtual() == NULL && armposition_ != NULL) {
    delete armposition_;
  }
  armposition_ = NULL;
}
inline const ::ProtoPackets::ArmPosition& Packet::_internal_armposition() const {
  return *armposition_;
}
inline const ::ProtoPackets::ArmPosition& Packet::armposition() const {
  const ::ProtoPackets::ArmPosition* p = armposition_;
  // @@protoc_insertion_point(field_get:ProtoPackets.Packet.ArmPosition)
  return p != NULL ? *p : *reinterpret_cast<const ::ProtoPackets::ArmPosition*>(
      &::ProtoPackets::_ArmPosition_default_instance_);
}
inline ::ProtoPackets::ArmPosition* Packet::release_armposition() {
  // @@protoc_insertion_point(field_release:ProtoPackets.Packet.ArmPosition)
  
  ::ProtoPackets::ArmPosition* temp = armposition_;
  armposition_ = NULL;
  return temp;
}
inline ::ProtoPackets::ArmPosition* Packet::mutable_armposition() {
  
  if (armposition_ == NULL) {
    auto* p = CreateMaybeMessage<::ProtoPackets::ArmPosition>(GetArenaNoVirtual());
    armposition_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ProtoPackets.Packet.ArmPosition)
  return armposition_;
}
inline void Packet::set_allocated_armposition(::ProtoPackets::ArmPosition* armposition) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete armposition_;
  }
  if (armposition) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      armposition = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, armposition, submessage_arena);
    }
    
  } else {
    
  }
  armposition_ = armposition;
  // @@protoc_insertion_point(field_set_allocated:ProtoPackets.Packet.ArmPosition)
}

// .ProtoPackets.Battery Battery = 4;
inline bool Packet::has_battery() const {
  return this != internal_default_instance() && battery_ != NULL;
}
inline void Packet::clear_battery() {
  if (GetArenaNoVirtual() == NULL && battery_ != NULL) {
    delete battery_;
  }
  battery_ = NULL;
}
inline const ::ProtoPackets::Battery& Packet::_internal_battery() const {
  return *battery_;
}
inline const ::ProtoPackets::Battery& Packet::battery() const {
  const ::ProtoPackets::Battery* p = battery_;
  // @@protoc_insertion_point(field_get:ProtoPackets.Packet.Battery)
  return p != NULL ? *p : *reinterpret_cast<const ::ProtoPackets::Battery*>(
      &::ProtoPackets::_Battery_default_instance_);
}
inline ::ProtoPackets::Battery* Packet::release_battery() {
  // @@protoc_insertion_point(field_release:ProtoPackets.Packet.Battery)
  
  ::ProtoPackets::Battery* temp = battery_;
  battery_ = NULL;
  return temp;
}
inline ::ProtoPackets::Battery* Packet::mutable_battery() {
  
  if (battery_ == NULL) {
    auto* p = CreateMaybeMessage<::ProtoPackets::Battery>(GetArenaNoVirtual());
    battery_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ProtoPackets.Packet.Battery)
  return battery_;
}
inline void Packet::set_allocated_battery(::ProtoPackets::Battery* battery) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete battery_;
  }
  if (battery) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      battery = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, battery, submessage_arena);
    }
    
  } else {
    
  }
  battery_ = battery;
  // @@protoc_insertion_point(field_set_allocated:ProtoPackets.Packet.Battery)
}

// .ProtoPackets.TargetAcknowledgement TargetAcknowledgement = 5;
inline bool Packet::has_targetacknowledgement() const {
  return this != internal_default_instance() && targetacknowledgement_ != NULL;
}
inline void Packet::clear_targetacknowledgement() {
  if (GetArenaNoVirtual() == NULL && targetacknowledgement_ != NULL) {
    delete targetacknowledgement_;
  }
  targetacknowledgement_ = NULL;
}
inline const ::ProtoPackets::TargetAcknowledgement& Packet::_internal_targetacknowledgement() const {
  return *targetacknowledgement_;
}
inline const ::ProtoPackets::TargetAcknowledgement& Packet::targetacknowledgement() const {
  const ::ProtoPackets::TargetAcknowledgement* p = targetacknowledgement_;
  // @@protoc_insertion_point(field_get:ProtoPackets.Packet.TargetAcknowledgement)
  return p != NULL ? *p : *reinterpret_cast<const ::ProtoPackets::TargetAcknowledgement*>(
      &::ProtoPackets::_TargetAcknowledgement_default_instance_);
}
inline ::ProtoPackets::TargetAcknowledgement* Packet::release_targetacknowledgement() {
  // @@protoc_insertion_point(field_release:ProtoPackets.Packet.TargetAcknowledgement)
  
  ::ProtoPackets::TargetAcknowledgement* temp = targetacknowledgement_;
  targetacknowledgement_ = NULL;
  return temp;
}
inline ::ProtoPackets::TargetAcknowledgement* Packet::mutable_targetacknowledgement() {
  
  if (targetacknowledgement_ == NULL) {
    auto* p = CreateMaybeMessage<::ProtoPackets::TargetAcknowledgement>(GetArenaNoVirtual());
    targetacknowledgement_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ProtoPackets.Packet.TargetAcknowledgement)
  return targetacknowledgement_;
}
inline void Packet::set_allocated_targetacknowledgement(::ProtoPackets::TargetAcknowledgement* targetacknowledgement) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete targetacknowledgement_;
  }
  if (targetacknowledgement) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      targetacknowledgement = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, targetacknowledgement, submessage_arena);
    }
    
  } else {
    
  }
  targetacknowledgement_ = targetacknowledgement;
  // @@protoc_insertion_point(field_set_allocated:ProtoPackets.Packet.TargetAcknowledgement)
}

// .ProtoPackets.TargetDesignationCommand TargetDesignationCommand = 6;
inline bool Packet::has_targetdesignationcommand() const {
  return this != internal_default_instance() && targetdesignationcommand_ != NULL;
}
inline void Packet::clear_targetdesignationcommand() {
  if (GetArenaNoVirtual() == NULL && targetdesignationcommand_ != NULL) {
    delete targetdesignationcommand_;
  }
  targetdesignationcommand_ = NULL;
}
inline const ::ProtoPackets::TargetDesignationCommand& Packet::_internal_targetdesignationcommand() const {
  return *targetdesignationcommand_;
}
inline const ::ProtoPackets::TargetDesignationCommand& Packet::targetdesignationcommand() const {
  const ::ProtoPackets::TargetDesignationCommand* p = targetdesignationcommand_;
  // @@protoc_insertion_point(field_get:ProtoPackets.Packet.TargetDesignationCommand)
  return p != NULL ? *p : *reinterpret_cast<const ::ProtoPackets::TargetDesignationCommand*>(
      &::ProtoPackets::_TargetDesignationCommand_default_instance_);
}
inline ::ProtoPackets::TargetDesignationCommand* Packet::release_targetdesignationcommand() {
  // @@protoc_insertion_point(field_release:ProtoPackets.Packet.TargetDesignationCommand)
  
  ::ProtoPackets::TargetDesignationCommand* temp = targetdesignationcommand_;
  targetdesignationcommand_ = NULL;
  return temp;
}
inline ::ProtoPackets::TargetDesignationCommand* Packet::mutable_targetdesignationcommand() {
  
  if (targetdesignationcommand_ == NULL) {
    auto* p = CreateMaybeMessage<::ProtoPackets::TargetDesignationCommand>(GetArenaNoVirtual());
    targetdesignationcommand_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ProtoPackets.Packet.TargetDesignationCommand)
  return targetdesignationcommand_;
}
inline void Packet::set_allocated_targetdesignationcommand(::ProtoPackets::TargetDesignationCommand* targetdesignationcommand) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete targetdesignationcommand_;
  }
  if (targetdesignationcommand) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      targetdesignationcommand = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, targetdesignationcommand, submessage_arena);
    }
    
  } else {
    
  }
  targetdesignationcommand_ = targetdesignationcommand;
  // @@protoc_insertion_point(field_set_allocated:ProtoPackets.Packet.TargetDesignationCommand)
}

// .ProtoPackets.TargetStatus TargetStatus = 7;
inline bool Packet::has_targetstatus() const {
  return this != internal_default_instance() && targetstatus_ != NULL;
}
inline void Packet::clear_targetstatus() {
  if (GetArenaNoVirtual() == NULL && targetstatus_ != NULL) {
    delete targetstatus_;
  }
  targetstatus_ = NULL;
}
inline const ::ProtoPackets::TargetStatus& Packet::_internal_targetstatus() const {
  return *targetstatus_;
}
inline const ::ProtoPackets::TargetStatus& Packet::targetstatus() const {
  const ::ProtoPackets::TargetStatus* p = targetstatus_;
  // @@protoc_insertion_point(field_get:ProtoPackets.Packet.TargetStatus)
  return p != NULL ? *p : *reinterpret_cast<const ::ProtoPackets::TargetStatus*>(
      &::ProtoPackets::_TargetStatus_default_instance_);
}
inline ::ProtoPackets::TargetStatus* Packet::release_targetstatus() {
  // @@protoc_insertion_point(field_release:ProtoPackets.Packet.TargetStatus)
  
  ::ProtoPackets::TargetStatus* temp = targetstatus_;
  targetstatus_ = NULL;
  return temp;
}
inline ::ProtoPackets::TargetStatus* Packet::mutable_targetstatus() {
  
  if (targetstatus_ == NULL) {
    auto* p = CreateMaybeMessage<::ProtoPackets::TargetStatus>(GetArenaNoVirtual());
    targetstatus_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ProtoPackets.Packet.TargetStatus)
  return targetstatus_;
}
inline void Packet::set_allocated_targetstatus(::ProtoPackets::TargetStatus* targetstatus) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete targetstatus_;
  }
  if (targetstatus) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      targetstatus = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, targetstatus, submessage_arena);
    }
    
  } else {
    
  }
  targetstatus_ = targetstatus;
  // @@protoc_insertion_point(field_set_allocated:ProtoPackets.Packet.TargetStatus)
}

// .ProtoPackets.VehicleAttitude VehicleAttitude = 8;
inline bool Packet::has_vehicleattitude() const {
  return this != internal_default_instance() && vehicleattitude_ != NULL;
}
inline void Packet::clear_vehicleattitude() {
  if (GetArenaNoVirtual() == NULL && vehicleattitude_ != NULL) {
    delete vehicleattitude_;
  }
  vehicleattitude_ = NULL;
}
inline const ::ProtoPackets::VehicleAttitude& Packet::_internal_vehicleattitude() const {
  return *vehicleattitude_;
}
inline const ::ProtoPackets::VehicleAttitude& Packet::vehicleattitude() const {
  const ::ProtoPackets::VehicleAttitude* p = vehicleattitude_;
  // @@protoc_insertion_point(field_get:ProtoPackets.Packet.VehicleAttitude)
  return p != NULL ? *p : *reinterpret_cast<const ::ProtoPackets::VehicleAttitude*>(
      &::ProtoPackets::_VehicleAttitude_default_instance_);
}
inline ::ProtoPackets::VehicleAttitude* Packet::release_vehicleattitude() {
  // @@protoc_insertion_point(field_release:ProtoPackets.Packet.VehicleAttitude)
  
  ::ProtoPackets::VehicleAttitude* temp = vehicleattitude_;
  vehicleattitude_ = NULL;
  return temp;
}
inline ::ProtoPackets::VehicleAttitude* Packet::mutable_vehicleattitude() {
  
  if (vehicleattitude_ == NULL) {
    auto* p = CreateMaybeMessage<::ProtoPackets::VehicleAttitude>(GetArenaNoVirtual());
    vehicleattitude_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ProtoPackets.Packet.VehicleAttitude)
  return vehicleattitude_;
}
inline void Packet::set_allocated_vehicleattitude(::ProtoPackets::VehicleAttitude* vehicleattitude) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete vehicleattitude_;
  }
  if (vehicleattitude) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vehicleattitude = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vehicleattitude, submessage_arena);
    }
    
  } else {
    
  }
  vehicleattitude_ = vehicleattitude;
  // @@protoc_insertion_point(field_set_allocated:ProtoPackets.Packet.VehicleAttitude)
}

// .ProtoPackets.VehicleAuthorizationReply VehicleAuthorizationReply = 9;
inline bool Packet::has_vehicleauthorizationreply() const {
  return this != internal_default_instance() && vehicleauthorizationreply_ != NULL;
}
inline void Packet::clear_vehicleauthorizationreply() {
  if (GetArenaNoVirtual() == NULL && vehicleauthorizationreply_ != NULL) {
    delete vehicleauthorizationreply_;
  }
  vehicleauthorizationreply_ = NULL;
}
inline const ::ProtoPackets::VehicleAuthorizationReply& Packet::_internal_vehicleauthorizationreply() const {
  return *vehicleauthorizationreply_;
}
inline const ::ProtoPackets::VehicleAuthorizationReply& Packet::vehicleauthorizationreply() const {
  const ::ProtoPackets::VehicleAuthorizationReply* p = vehicleauthorizationreply_;
  // @@protoc_insertion_point(field_get:ProtoPackets.Packet.VehicleAuthorizationReply)
  return p != NULL ? *p : *reinterpret_cast<const ::ProtoPackets::VehicleAuthorizationReply*>(
      &::ProtoPackets::_VehicleAuthorizationReply_default_instance_);
}
inline ::ProtoPackets::VehicleAuthorizationReply* Packet::release_vehicleauthorizationreply() {
  // @@protoc_insertion_point(field_release:ProtoPackets.Packet.VehicleAuthorizationReply)
  
  ::ProtoPackets::VehicleAuthorizationReply* temp = vehicleauthorizationreply_;
  vehicleauthorizationreply_ = NULL;
  return temp;
}
inline ::ProtoPackets::VehicleAuthorizationReply* Packet::mutable_vehicleauthorizationreply() {
  
  if (vehicleauthorizationreply_ == NULL) {
    auto* p = CreateMaybeMessage<::ProtoPackets::VehicleAuthorizationReply>(GetArenaNoVirtual());
    vehicleauthorizationreply_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ProtoPackets.Packet.VehicleAuthorizationReply)
  return vehicleauthorizationreply_;
}
inline void Packet::set_allocated_vehicleauthorizationreply(::ProtoPackets::VehicleAuthorizationReply* vehicleauthorizationreply) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete vehicleauthorizationreply_;
  }
  if (vehicleauthorizationreply) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vehicleauthorizationreply = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vehicleauthorizationreply, submessage_arena);
    }
    
  } else {
    
  }
  vehicleauthorizationreply_ = vehicleauthorizationreply;
  // @@protoc_insertion_point(field_set_allocated:ProtoPackets.Packet.VehicleAuthorizationReply)
}

// .ProtoPackets.VehicleAuthorizationRequest VehicleAuthorizationRequest = 10;
inline bool Packet::has_vehicleauthorizationrequest() const {
  return this != internal_default_instance() && vehicleauthorizationrequest_ != NULL;
}
inline void Packet::clear_vehicleauthorizationrequest() {
  if (GetArenaNoVirtual() == NULL && vehicleauthorizationrequest_ != NULL) {
    delete vehicleauthorizationrequest_;
  }
  vehicleauthorizationrequest_ = NULL;
}
inline const ::ProtoPackets::VehicleAuthorizationRequest& Packet::_internal_vehicleauthorizationrequest() const {
  return *vehicleauthorizationrequest_;
}
inline const ::ProtoPackets::VehicleAuthorizationRequest& Packet::vehicleauthorizationrequest() const {
  const ::ProtoPackets::VehicleAuthorizationRequest* p = vehicleauthorizationrequest_;
  // @@protoc_insertion_point(field_get:ProtoPackets.Packet.VehicleAuthorizationRequest)
  return p != NULL ? *p : *reinterpret_cast<const ::ProtoPackets::VehicleAuthorizationRequest*>(
      &::ProtoPackets::_VehicleAuthorizationRequest_default_instance_);
}
inline ::ProtoPackets::VehicleAuthorizationRequest* Packet::release_vehicleauthorizationrequest() {
  // @@protoc_insertion_point(field_release:ProtoPackets.Packet.VehicleAuthorizationRequest)
  
  ::ProtoPackets::VehicleAuthorizationRequest* temp = vehicleauthorizationrequest_;
  vehicleauthorizationrequest_ = NULL;
  return temp;
}
inline ::ProtoPackets::VehicleAuthorizationRequest* Packet::mutable_vehicleauthorizationrequest() {
  
  if (vehicleauthorizationrequest_ == NULL) {
    auto* p = CreateMaybeMessage<::ProtoPackets::VehicleAuthorizationRequest>(GetArenaNoVirtual());
    vehicleauthorizationrequest_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ProtoPackets.Packet.VehicleAuthorizationRequest)
  return vehicleauthorizationrequest_;
}
inline void Packet::set_allocated_vehicleauthorizationrequest(::ProtoPackets::VehicleAuthorizationRequest* vehicleauthorizationrequest) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete vehicleauthorizationrequest_;
  }
  if (vehicleauthorizationrequest) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vehicleauthorizationrequest = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vehicleauthorizationrequest, submessage_arena);
    }
    
  } else {
    
  }
  vehicleauthorizationrequest_ = vehicleauthorizationrequest;
  // @@protoc_insertion_point(field_set_allocated:ProtoPackets.Packet.VehicleAuthorizationRequest)
}

// .ProtoPackets.VehicleBodySensedState VehicleBodySensedState = 11;
inline bool Packet::has_vehiclebodysensedstate() const {
  return this != internal_default_instance() && vehiclebodysensedstate_ != NULL;
}
inline void Packet::clear_vehiclebodysensedstate() {
  if (GetArenaNoVirtual() == NULL && vehiclebodysensedstate_ != NULL) {
    delete vehiclebodysensedstate_;
  }
  vehiclebodysensedstate_ = NULL;
}
inline const ::ProtoPackets::VehicleBodySensedState& Packet::_internal_vehiclebodysensedstate() const {
  return *vehiclebodysensedstate_;
}
inline const ::ProtoPackets::VehicleBodySensedState& Packet::vehiclebodysensedstate() const {
  const ::ProtoPackets::VehicleBodySensedState* p = vehiclebodysensedstate_;
  // @@protoc_insertion_point(field_get:ProtoPackets.Packet.VehicleBodySensedState)
  return p != NULL ? *p : *reinterpret_cast<const ::ProtoPackets::VehicleBodySensedState*>(
      &::ProtoPackets::_VehicleBodySensedState_default_instance_);
}
inline ::ProtoPackets::VehicleBodySensedState* Packet::release_vehiclebodysensedstate() {
  // @@protoc_insertion_point(field_release:ProtoPackets.Packet.VehicleBodySensedState)
  
  ::ProtoPackets::VehicleBodySensedState* temp = vehiclebodysensedstate_;
  vehiclebodysensedstate_ = NULL;
  return temp;
}
inline ::ProtoPackets::VehicleBodySensedState* Packet::mutable_vehiclebodysensedstate() {
  
  if (vehiclebodysensedstate_ == NULL) {
    auto* p = CreateMaybeMessage<::ProtoPackets::VehicleBodySensedState>(GetArenaNoVirtual());
    vehiclebodysensedstate_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ProtoPackets.Packet.VehicleBodySensedState)
  return vehiclebodysensedstate_;
}
inline void Packet::set_allocated_vehiclebodysensedstate(::ProtoPackets::VehicleBodySensedState* vehiclebodysensedstate) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete vehiclebodysensedstate_;
  }
  if (vehiclebodysensedstate) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vehiclebodysensedstate = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vehiclebodysensedstate, submessage_arena);
    }
    
  } else {
    
  }
  vehiclebodysensedstate_ = vehiclebodysensedstate;
  // @@protoc_insertion_point(field_set_allocated:ProtoPackets.Packet.VehicleBodySensedState)
}

// .ProtoPackets.VehicleGlobalPosition VehicleGlobalPosition = 12;
inline bool Packet::has_vehicleglobalposition() const {
  return this != internal_default_instance() && vehicleglobalposition_ != NULL;
}
inline void Packet::clear_vehicleglobalposition() {
  if (GetArenaNoVirtual() == NULL && vehicleglobalposition_ != NULL) {
    delete vehicleglobalposition_;
  }
  vehicleglobalposition_ = NULL;
}
inline const ::ProtoPackets::VehicleGlobalPosition& Packet::_internal_vehicleglobalposition() const {
  return *vehicleglobalposition_;
}
inline const ::ProtoPackets::VehicleGlobalPosition& Packet::vehicleglobalposition() const {
  const ::ProtoPackets::VehicleGlobalPosition* p = vehicleglobalposition_;
  // @@protoc_insertion_point(field_get:ProtoPackets.Packet.VehicleGlobalPosition)
  return p != NULL ? *p : *reinterpret_cast<const ::ProtoPackets::VehicleGlobalPosition*>(
      &::ProtoPackets::_VehicleGlobalPosition_default_instance_);
}
inline ::ProtoPackets::VehicleGlobalPosition* Packet::release_vehicleglobalposition() {
  // @@protoc_insertion_point(field_release:ProtoPackets.Packet.VehicleGlobalPosition)
  
  ::ProtoPackets::VehicleGlobalPosition* temp = vehicleglobalposition_;
  vehicleglobalposition_ = NULL;
  return temp;
}
inline ::ProtoPackets::VehicleGlobalPosition* Packet::mutable_vehicleglobalposition() {
  
  if (vehicleglobalposition_ == NULL) {
    auto* p = CreateMaybeMessage<::ProtoPackets::VehicleGlobalPosition>(GetArenaNoVirtual());
    vehicleglobalposition_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ProtoPackets.Packet.VehicleGlobalPosition)
  return vehicleglobalposition_;
}
inline void Packet::set_allocated_vehicleglobalposition(::ProtoPackets::VehicleGlobalPosition* vehicleglobalposition) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete vehicleglobalposition_;
  }
  if (vehicleglobalposition) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vehicleglobalposition = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vehicleglobalposition, submessage_arena);
    }
    
  } else {
    
  }
  vehicleglobalposition_ = vehicleglobalposition;
  // @@protoc_insertion_point(field_set_allocated:ProtoPackets.Packet.VehicleGlobalPosition)
}

// .ProtoPackets.VehicleIdentification VehicleIdentification = 13;
inline bool Packet::has_vehicleidentification() const {
  return this != internal_default_instance() && vehicleidentification_ != NULL;
}
inline void Packet::clear_vehicleidentification() {
  if (GetArenaNoVirtual() == NULL && vehicleidentification_ != NULL) {
    delete vehicleidentification_;
  }
  vehicleidentification_ = NULL;
}
inline const ::ProtoPackets::VehicleIdentification& Packet::_internal_vehicleidentification() const {
  return *vehicleidentification_;
}
inline const ::ProtoPackets::VehicleIdentification& Packet::vehicleidentification() const {
  const ::ProtoPackets::VehicleIdentification* p = vehicleidentification_;
  // @@protoc_insertion_point(field_get:ProtoPackets.Packet.VehicleIdentification)
  return p != NULL ? *p : *reinterpret_cast<const ::ProtoPackets::VehicleIdentification*>(
      &::ProtoPackets::_VehicleIdentification_default_instance_);
}
inline ::ProtoPackets::VehicleIdentification* Packet::release_vehicleidentification() {
  // @@protoc_insertion_point(field_release:ProtoPackets.Packet.VehicleIdentification)
  
  ::ProtoPackets::VehicleIdentification* temp = vehicleidentification_;
  vehicleidentification_ = NULL;
  return temp;
}
inline ::ProtoPackets::VehicleIdentification* Packet::mutable_vehicleidentification() {
  
  if (vehicleidentification_ == NULL) {
    auto* p = CreateMaybeMessage<::ProtoPackets::VehicleIdentification>(GetArenaNoVirtual());
    vehicleidentification_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ProtoPackets.Packet.VehicleIdentification)
  return vehicleidentification_;
}
inline void Packet::set_allocated_vehicleidentification(::ProtoPackets::VehicleIdentification* vehicleidentification) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete vehicleidentification_;
  }
  if (vehicleidentification) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vehicleidentification = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vehicleidentification, submessage_arena);
    }
    
  } else {
    
  }
  vehicleidentification_ = vehicleidentification;
  // @@protoc_insertion_point(field_set_allocated:ProtoPackets.Packet.VehicleIdentification)
}

// .ProtoPackets.VehicleInertialState VehicleInertialState = 14;
inline bool Packet::has_vehicleinertialstate() const {
  return this != internal_default_instance() && vehicleinertialstate_ != NULL;
}
inline void Packet::clear_vehicleinertialstate() {
  if (GetArenaNoVirtual() == NULL && vehicleinertialstate_ != NULL) {
    delete vehicleinertialstate_;
  }
  vehicleinertialstate_ = NULL;
}
inline const ::ProtoPackets::VehicleInertialState& Packet::_internal_vehicleinertialstate() const {
  return *vehicleinertialstate_;
}
inline const ::ProtoPackets::VehicleInertialState& Packet::vehicleinertialstate() const {
  const ::ProtoPackets::VehicleInertialState* p = vehicleinertialstate_;
  // @@protoc_insertion_point(field_get:ProtoPackets.Packet.VehicleInertialState)
  return p != NULL ? *p : *reinterpret_cast<const ::ProtoPackets::VehicleInertialState*>(
      &::ProtoPackets::_VehicleInertialState_default_instance_);
}
inline ::ProtoPackets::VehicleInertialState* Packet::release_vehicleinertialstate() {
  // @@protoc_insertion_point(field_release:ProtoPackets.Packet.VehicleInertialState)
  
  ::ProtoPackets::VehicleInertialState* temp = vehicleinertialstate_;
  vehicleinertialstate_ = NULL;
  return temp;
}
inline ::ProtoPackets::VehicleInertialState* Packet::mutable_vehicleinertialstate() {
  
  if (vehicleinertialstate_ == NULL) {
    auto* p = CreateMaybeMessage<::ProtoPackets::VehicleInertialState>(GetArenaNoVirtual());
    vehicleinertialstate_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ProtoPackets.Packet.VehicleInertialState)
  return vehicleinertialstate_;
}
inline void Packet::set_allocated_vehicleinertialstate(::ProtoPackets::VehicleInertialState* vehicleinertialstate) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete vehicleinertialstate_;
  }
  if (vehicleinertialstate) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vehicleinertialstate = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vehicleinertialstate, submessage_arena);
    }
    
  } else {
    
  }
  vehicleinertialstate_ = vehicleinertialstate;
  // @@protoc_insertion_point(field_set_allocated:ProtoPackets.Packet.VehicleInertialState)
}

// .ProtoPackets.VehicleModeCommand VehicleModeCommand = 15;
inline bool Packet::has_vehiclemodecommand() const {
  return this != internal_default_instance() && vehiclemodecommand_ != NULL;
}
inline void Packet::clear_vehiclemodecommand() {
  if (GetArenaNoVirtual() == NULL && vehiclemodecommand_ != NULL) {
    delete vehiclemodecommand_;
  }
  vehiclemodecommand_ = NULL;
}
inline const ::ProtoPackets::VehicleModeCommand& Packet::_internal_vehiclemodecommand() const {
  return *vehiclemodecommand_;
}
inline const ::ProtoPackets::VehicleModeCommand& Packet::vehiclemodecommand() const {
  const ::ProtoPackets::VehicleModeCommand* p = vehiclemodecommand_;
  // @@protoc_insertion_point(field_get:ProtoPackets.Packet.VehicleModeCommand)
  return p != NULL ? *p : *reinterpret_cast<const ::ProtoPackets::VehicleModeCommand*>(
      &::ProtoPackets::_VehicleModeCommand_default_instance_);
}
inline ::ProtoPackets::VehicleModeCommand* Packet::release_vehiclemodecommand() {
  // @@protoc_insertion_point(field_release:ProtoPackets.Packet.VehicleModeCommand)
  
  ::ProtoPackets::VehicleModeCommand* temp = vehiclemodecommand_;
  vehiclemodecommand_ = NULL;
  return temp;
}
inline ::ProtoPackets::VehicleModeCommand* Packet::mutable_vehiclemodecommand() {
  
  if (vehiclemodecommand_ == NULL) {
    auto* p = CreateMaybeMessage<::ProtoPackets::VehicleModeCommand>(GetArenaNoVirtual());
    vehiclemodecommand_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ProtoPackets.Packet.VehicleModeCommand)
  return vehiclemodecommand_;
}
inline void Packet::set_allocated_vehiclemodecommand(::ProtoPackets::VehicleModeCommand* vehiclemodecommand) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete vehiclemodecommand_;
  }
  if (vehiclemodecommand) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vehiclemodecommand = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vehiclemodecommand, submessage_arena);
    }
    
  } else {
    
  }
  vehiclemodecommand_ = vehiclemodecommand;
  // @@protoc_insertion_point(field_set_allocated:ProtoPackets.Packet.VehicleModeCommand)
}

// .ProtoPackets.VehicleSystemStatus VehicleSystemStatus = 16;
inline bool Packet::has_vehiclesystemstatus() const {
  return this != internal_default_instance() && vehiclesystemstatus_ != NULL;
}
inline void Packet::clear_vehiclesystemstatus() {
  if (GetArenaNoVirtual() == NULL && vehiclesystemstatus_ != NULL) {
    delete vehiclesystemstatus_;
  }
  vehiclesystemstatus_ = NULL;
}
inline const ::ProtoPackets::VehicleSystemStatus& Packet::_internal_vehiclesystemstatus() const {
  return *vehiclesystemstatus_;
}
inline const ::ProtoPackets::VehicleSystemStatus& Packet::vehiclesystemstatus() const {
  const ::ProtoPackets::VehicleSystemStatus* p = vehiclesystemstatus_;
  // @@protoc_insertion_point(field_get:ProtoPackets.Packet.VehicleSystemStatus)
  return p != NULL ? *p : *reinterpret_cast<const ::ProtoPackets::VehicleSystemStatus*>(
      &::ProtoPackets::_VehicleSystemStatus_default_instance_);
}
inline ::ProtoPackets::VehicleSystemStatus* Packet::release_vehiclesystemstatus() {
  // @@protoc_insertion_point(field_release:ProtoPackets.Packet.VehicleSystemStatus)
  
  ::ProtoPackets::VehicleSystemStatus* temp = vehiclesystemstatus_;
  vehiclesystemstatus_ = NULL;
  return temp;
}
inline ::ProtoPackets::VehicleSystemStatus* Packet::mutable_vehiclesystemstatus() {
  
  if (vehiclesystemstatus_ == NULL) {
    auto* p = CreateMaybeMessage<::ProtoPackets::VehicleSystemStatus>(GetArenaNoVirtual());
    vehiclesystemstatus_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ProtoPackets.Packet.VehicleSystemStatus)
  return vehiclesystemstatus_;
}
inline void Packet::set_allocated_vehiclesystemstatus(::ProtoPackets::VehicleSystemStatus* vehiclesystemstatus) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete vehiclesystemstatus_;
  }
  if (vehiclesystemstatus) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vehiclesystemstatus = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vehiclesystemstatus, submessage_arena);
    }
    
  } else {
    
  }
  vehiclesystemstatus_ = vehiclesystemstatus;
  // @@protoc_insertion_point(field_set_allocated:ProtoPackets.Packet.VehicleSystemStatus)
}

// .ProtoPackets.VehicleTelemetryCommand VehicleTelemetryCommand = 17;
inline bool Packet::has_vehicletelemetrycommand() const {
  return this != internal_default_instance() && vehicletelemetrycommand_ != NULL;
}
inline void Packet::clear_vehicletelemetrycommand() {
  if (GetArenaNoVirtual() == NULL && vehicletelemetrycommand_ != NULL) {
    delete vehicletelemetrycommand_;
  }
  vehicletelemetrycommand_ = NULL;
}
inline const ::ProtoPackets::VehicleTelemetryCommand& Packet::_internal_vehicletelemetrycommand() const {
  return *vehicletelemetrycommand_;
}
inline const ::ProtoPackets::VehicleTelemetryCommand& Packet::vehicletelemetrycommand() const {
  const ::ProtoPackets::VehicleTelemetryCommand* p = vehicletelemetrycommand_;
  // @@protoc_insertion_point(field_get:ProtoPackets.Packet.VehicleTelemetryCommand)
  return p != NULL ? *p : *reinterpret_cast<const ::ProtoPackets::VehicleTelemetryCommand*>(
      &::ProtoPackets::_VehicleTelemetryCommand_default_instance_);
}
inline ::ProtoPackets::VehicleTelemetryCommand* Packet::release_vehicletelemetrycommand() {
  // @@protoc_insertion_point(field_release:ProtoPackets.Packet.VehicleTelemetryCommand)
  
  ::ProtoPackets::VehicleTelemetryCommand* temp = vehicletelemetrycommand_;
  vehicletelemetrycommand_ = NULL;
  return temp;
}
inline ::ProtoPackets::VehicleTelemetryCommand* Packet::mutable_vehicletelemetrycommand() {
  
  if (vehicletelemetrycommand_ == NULL) {
    auto* p = CreateMaybeMessage<::ProtoPackets::VehicleTelemetryCommand>(GetArenaNoVirtual());
    vehicletelemetrycommand_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ProtoPackets.Packet.VehicleTelemetryCommand)
  return vehicletelemetrycommand_;
}
inline void Packet::set_allocated_vehicletelemetrycommand(::ProtoPackets::VehicleTelemetryCommand* vehicletelemetrycommand) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete vehicletelemetrycommand_;
  }
  if (vehicletelemetrycommand) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vehicletelemetrycommand = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vehicletelemetrycommand, submessage_arena);
    }
    
  } else {
    
  }
  vehicletelemetrycommand_ = vehicletelemetrycommand;
  // @@protoc_insertion_point(field_set_allocated:ProtoPackets.Packet.VehicleTelemetryCommand)
}

// .ProtoPackets.VehicleTerminationCommand VehicleTerminationCommand = 18;
inline bool Packet::has_vehicleterminationcommand() const {
  return this != internal_default_instance() && vehicleterminationcommand_ != NULL;
}
inline void Packet::clear_vehicleterminationcommand() {
  if (GetArenaNoVirtual() == NULL && vehicleterminationcommand_ != NULL) {
    delete vehicleterminationcommand_;
  }
  vehicleterminationcommand_ = NULL;
}
inline const ::ProtoPackets::VehicleTerminationCommand& Packet::_internal_vehicleterminationcommand() const {
  return *vehicleterminationcommand_;
}
inline const ::ProtoPackets::VehicleTerminationCommand& Packet::vehicleterminationcommand() const {
  const ::ProtoPackets::VehicleTerminationCommand* p = vehicleterminationcommand_;
  // @@protoc_insertion_point(field_get:ProtoPackets.Packet.VehicleTerminationCommand)
  return p != NULL ? *p : *reinterpret_cast<const ::ProtoPackets::VehicleTerminationCommand*>(
      &::ProtoPackets::_VehicleTerminationCommand_default_instance_);
}
inline ::ProtoPackets::VehicleTerminationCommand* Packet::release_vehicleterminationcommand() {
  // @@protoc_insertion_point(field_release:ProtoPackets.Packet.VehicleTerminationCommand)
  
  ::ProtoPackets::VehicleTerminationCommand* temp = vehicleterminationcommand_;
  vehicleterminationcommand_ = NULL;
  return temp;
}
inline ::ProtoPackets::VehicleTerminationCommand* Packet::mutable_vehicleterminationcommand() {
  
  if (vehicleterminationcommand_ == NULL) {
    auto* p = CreateMaybeMessage<::ProtoPackets::VehicleTerminationCommand>(GetArenaNoVirtual());
    vehicleterminationcommand_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ProtoPackets.Packet.VehicleTerminationCommand)
  return vehicleterminationcommand_;
}
inline void Packet::set_allocated_vehicleterminationcommand(::ProtoPackets::VehicleTerminationCommand* vehicleterminationcommand) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete vehicleterminationcommand_;
  }
  if (vehicleterminationcommand) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vehicleterminationcommand = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vehicleterminationcommand, submessage_arena);
    }
    
  } else {
    
  }
  vehicleterminationcommand_ = vehicleterminationcommand;
  // @@protoc_insertion_point(field_set_allocated:ProtoPackets.Packet.VehicleTerminationCommand)
}

// .ProtoPackets.VehicleWaypointCommand VehicleWaypointCommand = 19;
inline bool Packet::has_vehiclewaypointcommand() const {
  return this != internal_default_instance() && vehiclewaypointcommand_ != NULL;
}
inline void Packet::clear_vehiclewaypointcommand() {
  if (GetArenaNoVirtual() == NULL && vehiclewaypointcommand_ != NULL) {
    delete vehiclewaypointcommand_;
  }
  vehiclewaypointcommand_ = NULL;
}
inline const ::ProtoPackets::VehicleWaypointCommand& Packet::_internal_vehiclewaypointcommand() const {
  return *vehiclewaypointcommand_;
}
inline const ::ProtoPackets::VehicleWaypointCommand& Packet::vehiclewaypointcommand() const {
  const ::ProtoPackets::VehicleWaypointCommand* p = vehiclewaypointcommand_;
  // @@protoc_insertion_point(field_get:ProtoPackets.Packet.VehicleWaypointCommand)
  return p != NULL ? *p : *reinterpret_cast<const ::ProtoPackets::VehicleWaypointCommand*>(
      &::ProtoPackets::_VehicleWaypointCommand_default_instance_);
}
inline ::ProtoPackets::VehicleWaypointCommand* Packet::release_vehiclewaypointcommand() {
  // @@protoc_insertion_point(field_release:ProtoPackets.Packet.VehicleWaypointCommand)
  
  ::ProtoPackets::VehicleWaypointCommand* temp = vehiclewaypointcommand_;
  vehiclewaypointcommand_ = NULL;
  return temp;
}
inline ::ProtoPackets::VehicleWaypointCommand* Packet::mutable_vehiclewaypointcommand() {
  
  if (vehiclewaypointcommand_ == NULL) {
    auto* p = CreateMaybeMessage<::ProtoPackets::VehicleWaypointCommand>(GetArenaNoVirtual());
    vehiclewaypointcommand_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ProtoPackets.Packet.VehicleWaypointCommand)
  return vehiclewaypointcommand_;
}
inline void Packet::set_allocated_vehiclewaypointcommand(::ProtoPackets::VehicleWaypointCommand* vehiclewaypointcommand) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete vehiclewaypointcommand_;
  }
  if (vehiclewaypointcommand) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vehiclewaypointcommand = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vehiclewaypointcommand, submessage_arena);
    }
    
  } else {
    
  }
  vehiclewaypointcommand_ = vehiclewaypointcommand;
  // @@protoc_insertion_point(field_set_allocated:ProtoPackets.Packet.VehicleWaypointCommand)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoPackets

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_ProtoPacketsV2_2eproto
